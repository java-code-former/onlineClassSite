# Host: 127.0.0.1  (Version 5.5.53)
# Date: 2018-09-19 11:59:58
# Generator: MySQL-Front 6.0  (Build 2.20)


#
# Structure for table "e_activityintroduction"
#

CREATE TABLE `e_activityintroduction` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `aa` text NOT NULL COMMENT '简介',
  `bb` text NOT NULL COMMENT '亮 点',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 COMMENT='武汉大学学习路线';

#
# Data for table "e_activityintroduction"
#

INSERT INTO `e_activityintroduction` VALUES (1,'','<p>Java Tree学习路线图V0.1</p><p><br/></p><p><br/></p><figure data-am-widget=\"figure\" class=\"am am-figure am-figure-default  am-no-layout am-figure-zoomable\" data-am-figure=\"{  pureview: &#39;true&#39; }\" style=\"box-sizing: border-box; margin: 10px; position: relative; cursor: pointer;\"><img src=\"http://www.javatree.cn/images/roadmap.v1.png\" data-rel=\"/images/roadmap.v1.png\" alt=\"Java Tree学习路线图V0.1\" data-am-pureviewed=\"1\" style=\"box-sizing: border-box; vertical-align: middle; border: 1px solid rgb(238, 238, 238); display: block; max-width: 100%; height: auto; padding: 2px; margin: 10px auto;\"/></figure><p><br/></p><p><br/></p><p><br/></p>');

#
# Structure for table "e_admin"
#

CREATE TABLE `e_admin` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `username` varchar(255) NOT NULL COMMENT '账号',
  `password` varchar(255) NOT NULL COMMENT '密码',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 COMMENT='武汉大学';

#
# Data for table "e_admin"
#

INSERT INTO `e_admin` VALUES (1,'enadmin','21232f297a57a5a743894a0e4a801fc3');

#
# Structure for table "e_erke"
#

CREATE TABLE `e_erke` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `pid` int(10) NOT NULL COMMENT '视频类别id',
  `name` varchar(255) NOT NULL COMMENT '简介',
  `is_show` int(2) NOT NULL DEFAULT '1' COMMENT '1显示 0不显示',
  `sort` int(10) NOT NULL DEFAULT '10',
  `is_s` int(10) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=32 DEFAULT CHARSET=utf8 COMMENT='武汉大学课程二级分类';

#
# Data for table "e_erke"
#

INSERT INTO `e_erke` VALUES (2,1,'Java类库基础',1,1,1),(3,1,'Web基础',1,10,1),(4,2,'Java语法基础',1,10,1);

#
# Structure for table "e_img"
#

CREATE TABLE `e_img` (
  `id` int(12) NOT NULL,
  `img1` varchar(50) NOT NULL,
  `img2` varchar(50) NOT NULL,
  `img3` varchar(50) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='武汉大学头部轮播';

#
# Data for table "e_img"
#

INSERT INTO `e_img` VALUES (1,'/Public/update/2018-06-20/5b29c4a0b230f.jpg','/Public/update/2018-06-20/5b29c505511c9.jpg','/Public/update/2018-06-20/5b29c50551af1.jpg');

#
# Structure for table "e_keinfo"
#

CREATE TABLE `e_keinfo` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `pid` int(10) NOT NULL COMMENT '视频类别id',
  `name` varchar(255) NOT NULL COMMENT '简介',
  `ynum` varchar(255) NOT NULL COMMENT '标题',
  `snum` varchar(255) NOT NULL COMMENT '视频截图',
  `is_show` int(2) NOT NULL DEFAULT '1' COMMENT '1显示 0不显示',
  `sort` int(10) NOT NULL DEFAULT '10',
  `is_s` int(10) NOT NULL DEFAULT '0',
  `is_t` int(10) NOT NULL DEFAULT '0',
  `img` varchar(255) DEFAULT NULL,
  `content` text,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=28 DEFAULT CHARSET=utf8 COMMENT='武汉大学课程二级分类';

#
# Data for table "e_keinfo"
#

INSERT INTO `e_keinfo` VALUES (2,1,'崔晓辉','教授','xcui@whu.edu.cn ',0,1,1,0,'2017-11-17/5a0e50e29ab3d.png','<p><span style=\"font-size: 18px;\">基本信息</span></p><p><img src=\"http://www.wuhandaxue.com/Public/ueditor/themes/default/images/spacer.gif\" style=\"background:url(http://www.wuhandaxue.com/Public/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/zbsyk1001/Desktop/web/web/images/stories/cuixiaohui.jpg\"/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\"><span style=\"font-size: 18px;\"><span style=\"font-size: 24px;\">崔晓晖教授<br/>国际软件学院院长<br/>湖北省“百人计划”入选者</span><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔晓晖教授毕业于美国路易斯维尔大学，目前是经全球招聘后被选任的武汉大学国际软件学院院长。在此之前，崔教授在美国能源部橡树岭国家实验室任正研究员。同时还担任了美国路易斯维尔大学的讲座副教授，美国田纳西大学、纽约理工大学兼职教授等职务。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授长期从事计算机软件工程、集群智能以及高性能计算的理论与实践研究。崔教授领导团队用群集智能和图形加速器技术用于加速大规模城市交通模拟并进行大数据分析，该成果被用于美国多个部门采用。崔教授发展了异构型并行计算的编程模型和运行环境，提高了异构型集群并行计算的性能和能源利用效率。其成果被应用于对橡树岭实验室克雷XT5超级通用计算机，从而在2012年保住了橡树岭实验室世界最快计算机的称号。崔教授丰富的理论和项目经验可以为本项目的理论建模、方法设计、仿真系统开发提供指导。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授发表论文60多篇，其中SCI 6篇。曾承担美国5项国家重大项目，纵向课题费近300万，目前承担国家自然科学基金面上项目和湖北省自然基金重点项目各一项。崔教授是北美计算社会及组织科学协会，北美交通委员会会员，也长期担任美国国防部，能源部和空军等研究项目评委。他受邀或被遴选为国际会议报告人 50多次。崔教授的研究工作已被美国NBC电视台，时代自由周刊以及英国新科学家杂志等新闻媒体报道，并获得多个奖励，包括美国能源部杰出导师奖（2008，2009）、美国国家实验室特级贡献奖（2009），橡树岭国家实验室特别事件奖（2009)等。</span></p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">教育经历</span></h3><li><p><span style=\"font-size: 18px;\">2000/09 - 2004/06 美国路易斯维尔大学，计算机系,博士</span></p></li><li><p><span style=\"font-size: 18px;\">1997/09 -2000/06 武汉大学，计算机系，硕士</span></p></li><li><p><span style=\"font-size: 18px;\">1992/09 -1996/06 武汉测绘科技大学，光仪系，工学学士</span></p></li><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">工作经历</span></h3><li><p><span style=\"font-size: 18px;\">2013 －至今武汉大学国际软件学院院长</span></p></li><li><p><span style=\"font-size: 18px;\">2010 – 2013 美国能源部橡树岭国家实验室，计算数据分析部,研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2011 – 2013纽约理工大学，计算机系，院长助理（兼）</span></p></li><li><p><span style=\"font-size: 18px;\">2009 – 2012 路易斯维尔大学，计算机系， 副教授</span></p></li><li><p><span style=\"font-size: 18px;\">2006 – 2010 美国能源部橡树岭国家实验室， 应用软件工程部， 副研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2004 – 2006 美国能源部橡树岭国家实验室，博士后</span></p></li><li><p><span style=\"font-size: 18px;\">2000 – 2004 美国路易斯维尔大学，计算机系，研究助理</span></p></li><li><p><span style=\"font-size: 18px;\">2000 武汉测绘科技大学，副高级工程师</span></p></li><li><p><span style=\"font-size: 18px;\">1997 – 2000 武汉测绘科技大学，网络中心，副主任</span></p></li><li><p><span style=\"font-size: 18px;\">1992 – 1997武汉测绘科技大学，设备处，工程师</span></p></li></ul><p><br/></p>'),(3,1,'崔晓辉','教授','xcui@whu.edu.cn ',1,10,1,0,'2018-06-19/5b28aa1063818.jpg','<p><span style=\"font-size: 18px;\">基本信息</span></p><p><img src=\"http://www.wuhandaxue.com/Public/ueditor/themes/default/images/spacer.gif\" style=\"background:url(http://www.wuhandaxue.com/Public/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/zbsyk1001/Desktop/web/web/images/stories/cuixiaohui.jpg\"/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\"><span style=\"font-size: 18px;\"><span style=\"font-size: 24px;\">崔晓晖教授<br/>国际软件学院院长<br/>湖北省“百人计划”入选者</span><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔晓晖教授毕业于美国路易斯维尔大学，目前是经全球招聘后被选任的武汉大学国际软件学院院长。在此之前，崔教授在美国能源部橡树岭国家实验室任正研究员。同时还担任了美国路易斯维尔大学的讲座副教授，美国田纳西大学、纽约理工大学兼职教授等职务。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授长期从事计算机软件工程、集群智能以及高性能计算的理论与实践研究。崔教授领导团队用群集智能和图形加速器技术用于加速大规模城市交通模拟并进行大数据分析，该成果被用于美国多个部门采用。崔教授发展了异构型并行计算的编程模型和运行环境，提高了异构型集群并行计算的性能和能源利用效率。其成果被应用于对橡树岭实验室克雷XT5超级通用计算机，从而在2012年保住了橡树岭实验室世界最快计算机的称号。崔教授丰富的理论和项目经验可以为本项目的理论建模、方法设计、仿真系统开发提供指导。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授发表论文60多篇，其中SCI 6篇。曾承担美国5项国家重大项目，纵向课题费近300万，目前承担国家自然科学基金面上项目和湖北省自然基金重点项目各一项。崔教授是北美计算社会及组织科学协会，北美交通委员会会员，也长期担任美国国防部，能源部和空军等研究项目评委。他受邀或被遴选为国际会议报告人 50多次。崔教授的研究工作已被美国NBC电视台，时代自由周刊以及英国新科学家杂志等新闻媒体报道，并获得多个奖励，包括美国能源部杰出导师奖（2008，2009）、美国国家实验室特级贡献奖（2009），橡树岭国家实验室特别事件奖（2009)等。</span></p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">教育经历</span></h3><li><p><span style=\"font-size: 18px;\">2000/09 - 2004/06 美国路易斯维尔大学，计算机系,博士</span></p></li><li><p><span style=\"font-size: 18px;\">1997/09 -2000/06 武汉大学，计算机系，硕士</span></p></li><li><p><span style=\"font-size: 18px;\">1992/09 -1996/06 武汉测绘科技大学，光仪系，工学学士</span></p></li><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">工作经历</span></h3><li><p><span style=\"font-size: 18px;\">2013 －至今武汉大学国际软件学院院长</span></p></li><li><p><span style=\"font-size: 18px;\">2010 – 2013 美国能源部橡树岭国家实验室，计算数据分析部,研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2011 – 2013纽约理工大学，计算机系，院长助理（兼）</span></p></li><li><p><span style=\"font-size: 18px;\">2009 – 2012 路易斯维尔大学，计算机系， 副教授</span></p></li><li><p><span style=\"font-size: 18px;\">2006 – 2010 美国能源部橡树岭国家实验室， 应用软件工程部， 副研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2004 – 2006 美国能源部橡树岭国家实验室，博士后</span></p></li><li><p><span style=\"font-size: 18px;\">2000 – 2004 美国路易斯维尔大学，计算机系，研究助理</span></p></li><li><p><span style=\"font-size: 18px;\">2000 武汉测绘科技大学，副高级工程师</span></p></li><li><p><span style=\"font-size: 18px;\">1997 – 2000 武汉测绘科技大学，网络中心，副主任</span></p></li><li><p><span style=\"font-size: 18px;\">1992 – 1997武汉测绘科技大学，设备处，工程师</span></p></li></ul><p><br/></p>'),(4,1,'崔晓辉','教授','xcui@whu.edu.cn ',1,10,1,0,'2017-11-17/5a0e50e29ab3d.png','<p><span style=\"font-size: 18px;\">基本信息</span></p><p><img src=\"http://www.wuhandaxue.com/Public/ueditor/themes/default/images/spacer.gif\" style=\"background:url(http://www.wuhandaxue.com/Public/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/zbsyk1001/Desktop/web/web/images/stories/cuixiaohui.jpg\"/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\"><span style=\"font-size: 18px;\"><span style=\"font-size: 24px;\">崔晓晖教授<br/>国际软件学院院长<br/>湖北省“百人计划”入选者</span><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔晓晖教授毕业于美国路易斯维尔大学，目前是经全球招聘后被选任的武汉大学国际软件学院院长。在此之前，崔教授在美国能源部橡树岭国家实验室任正研究员。同时还担任了美国路易斯维尔大学的讲座副教授，美国田纳西大学、纽约理工大学兼职教授等职务。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授长期从事计算机软件工程、集群智能以及高性能计算的理论与实践研究。崔教授领导团队用群集智能和图形加速器技术用于加速大规模城市交通模拟并进行大数据分析，该成果被用于美国多个部门采用。崔教授发展了异构型并行计算的编程模型和运行环境，提高了异构型集群并行计算的性能和能源利用效率。其成果被应用于对橡树岭实验室克雷XT5超级通用计算机，从而在2012年保住了橡树岭实验室世界最快计算机的称号。崔教授丰富的理论和项目经验可以为本项目的理论建模、方法设计、仿真系统开发提供指导。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授发表论文60多篇，其中SCI 6篇。曾承担美国5项国家重大项目，纵向课题费近300万，目前承担国家自然科学基金面上项目和湖北省自然基金重点项目各一项。崔教授是北美计算社会及组织科学协会，北美交通委员会会员，也长期担任美国国防部，能源部和空军等研究项目评委。他受邀或被遴选为国际会议报告人 50多次。崔教授的研究工作已被美国NBC电视台，时代自由周刊以及英国新科学家杂志等新闻媒体报道，并获得多个奖励，包括美国能源部杰出导师奖（2008，2009）、美国国家实验室特级贡献奖（2009），橡树岭国家实验室特别事件奖（2009)等。</span></p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">教育经历</span></h3><li><p><span style=\"font-size: 18px;\">2000/09 - 2004/06 美国路易斯维尔大学，计算机系,博士</span></p></li><li><p><span style=\"font-size: 18px;\">1997/09 -2000/06 武汉大学，计算机系，硕士</span></p></li><li><p><span style=\"font-size: 18px;\">1992/09 -1996/06 武汉测绘科技大学，光仪系，工学学士</span></p></li><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">工作经历</span></h3><li><p><span style=\"font-size: 18px;\">2013 －至今武汉大学国际软件学院院长</span></p></li><li><p><span style=\"font-size: 18px;\">2010 – 2013 美国能源部橡树岭国家实验室，计算数据分析部,研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2011 – 2013纽约理工大学，计算机系，院长助理（兼）</span></p></li><li><p><span style=\"font-size: 18px;\">2009 – 2012 路易斯维尔大学，计算机系， 副教授</span></p></li><li><p><span style=\"font-size: 18px;\">2006 – 2010 美国能源部橡树岭国家实验室， 应用软件工程部， 副研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2004 – 2006 美国能源部橡树岭国家实验室，博士后</span></p></li><li><p><span style=\"font-size: 18px;\">2000 – 2004 美国路易斯维尔大学，计算机系，研究助理</span></p></li><li><p><span style=\"font-size: 18px;\">2000 武汉测绘科技大学，副高级工程师</span></p></li><li><p><span style=\"font-size: 18px;\">1997 – 2000 武汉测绘科技大学，网络中心，副主任</span></p></li><li><p><span style=\"font-size: 18px;\">1992 – 1997武汉测绘科技大学，设备处，工程师</span></p></li></ul><p><br/></p>'),(5,1,'崔晓辉','教授','xcui@whu.edu.cn ',1,10,1,0,'2017-11-17/5a0e50e29ab3d.png','<p><span style=\"font-size: 18px;\">基本信息</span></p><p><img src=\"http://www.wuhandaxue.com/Public/ueditor/themes/default/images/spacer.gif\" style=\"background:url(http://www.wuhandaxue.com/Public/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/zbsyk1001/Desktop/web/web/images/stories/cuixiaohui.jpg\"/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\"><span style=\"font-size: 18px;\"><span style=\"font-size: 24px;\">崔晓晖教授<br/>国际软件学院院长<br/>湖北省“百人计划”入选者</span><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔晓晖教授毕业于美国路易斯维尔大学，目前是经全球招聘后被选任的武汉大学国际软件学院院长。在此之前，崔教授在美国能源部橡树岭国家实验室任正研究员。同时还担任了美国路易斯维尔大学的讲座副教授，美国田纳西大学、纽约理工大学兼职教授等职务。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授长期从事计算机软件工程、集群智能以及高性能计算的理论与实践研究。崔教授领导团队用群集智能和图形加速器技术用于加速大规模城市交通模拟并进行大数据分析，该成果被用于美国多个部门采用。崔教授发展了异构型并行计算的编程模型和运行环境，提高了异构型集群并行计算的性能和能源利用效率。其成果被应用于对橡树岭实验室克雷XT5超级通用计算机，从而在2012年保住了橡树岭实验室世界最快计算机的称号。崔教授丰富的理论和项目经验可以为本项目的理论建模、方法设计、仿真系统开发提供指导。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授发表论文60多篇，其中SCI 6篇。曾承担美国5项国家重大项目，纵向课题费近300万，目前承担国家自然科学基金面上项目和湖北省自然基金重点项目各一项。崔教授是北美计算社会及组织科学协会，北美交通委员会会员，也长期担任美国国防部，能源部和空军等研究项目评委。他受邀或被遴选为国际会议报告人 50多次。崔教授的研究工作已被美国NBC电视台，时代自由周刊以及英国新科学家杂志等新闻媒体报道，并获得多个奖励，包括美国能源部杰出导师奖（2008，2009）、美国国家实验室特级贡献奖（2009），橡树岭国家实验室特别事件奖（2009)等。</span></p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">教育经历</span></h3><li><p><span style=\"font-size: 18px;\">2000/09 - 2004/06 美国路易斯维尔大学，计算机系,博士</span></p></li><li><p><span style=\"font-size: 18px;\">1997/09 -2000/06 武汉大学，计算机系，硕士</span></p></li><li><p><span style=\"font-size: 18px;\">1992/09 -1996/06 武汉测绘科技大学，光仪系，工学学士</span></p></li><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">工作经历</span></h3><li><p><span style=\"font-size: 18px;\">2013 －至今武汉大学国际软件学院院长</span></p></li><li><p><span style=\"font-size: 18px;\">2010 – 2013 美国能源部橡树岭国家实验室，计算数据分析部,研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2011 – 2013纽约理工大学，计算机系，院长助理（兼）</span></p></li><li><p><span style=\"font-size: 18px;\">2009 – 2012 路易斯维尔大学，计算机系， 副教授</span></p></li><li><p><span style=\"font-size: 18px;\">2006 – 2010 美国能源部橡树岭国家实验室， 应用软件工程部， 副研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2004 – 2006 美国能源部橡树岭国家实验室，博士后</span></p></li><li><p><span style=\"font-size: 18px;\">2000 – 2004 美国路易斯维尔大学，计算机系，研究助理</span></p></li><li><p><span style=\"font-size: 18px;\">2000 武汉测绘科技大学，副高级工程师</span></p></li><li><p><span style=\"font-size: 18px;\">1997 – 2000 武汉测绘科技大学，网络中心，副主任</span></p></li><li><p><span style=\"font-size: 18px;\">1992 – 1997武汉测绘科技大学，设备处，工程师</span></p></li></ul><p><br/></p>'),(6,1,'崔晓辉','教授','xcui@whu.edu.cn ',1,10,1,1,'2017-11-17/5a0e50e29ab3d.png','<p><span style=\"font-size: 18px;\">基本信息</span></p><p><img src=\"http://www.wuhandaxue.com/Public/ueditor/themes/default/images/spacer.gif\" style=\"background:url(http://www.wuhandaxue.com/Public/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/zbsyk1001/Desktop/web/web/images/stories/cuixiaohui.jpg\"/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\"><span style=\"font-size: 18px;\"><span style=\"font-size: 24px;\">崔晓晖教授<br/>国际软件学院院长<br/>湖北省“百人计划”入选者</span><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔晓晖教授毕业于美国路易斯维尔大学，目前是经全球招聘后被选任的武汉大学国际软件学院院长。在此之前，崔教授在美国能源部橡树岭国家实验室任正研究员。同时还担任了美国路易斯维尔大学的讲座副教授，美国田纳西大学、纽约理工大学兼职教授等职务。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授长期从事计算机软件工程、集群智能以及高性能计算的理论与实践研究。崔教授领导团队用群集智能和图形加速器技术用于加速大规模城市交通模拟并进行大数据分析，该成果被用于美国多个部门采用。崔教授发展了异构型并行计算的编程模型和运行环境，提高了异构型集群并行计算的性能和能源利用效率。其成果被应用于对橡树岭实验室克雷XT5超级通用计算机，从而在2012年保住了橡树岭实验室世界最快计算机的称号。崔教授丰富的理论和项目经验可以为本项目的理论建模、方法设计、仿真系统开发提供指导。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授发表论文60多篇，其中SCI 6篇。曾承担美国5项国家重大项目，纵向课题费近300万，目前承担国家自然科学基金面上项目和湖北省自然基金重点项目各一项。崔教授是北美计算社会及组织科学协会，北美交通委员会会员，也长期担任美国国防部，能源部和空军等研究项目评委。他受邀或被遴选为国际会议报告人 50多次。崔教授的研究工作已被美国NBC电视台，时代自由周刊以及英国新科学家杂志等新闻媒体报道，并获得多个奖励，包括美国能源部杰出导师奖（2008，2009）、美国国家实验室特级贡献奖（2009），橡树岭国家实验室特别事件奖（2009)等。</span></p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">教育经历</span></h3><li><p><span style=\"font-size: 18px;\">2000/09 - 2004/06 美国路易斯维尔大学，计算机系,博士</span></p></li><li><p><span style=\"font-size: 18px;\">1997/09 -2000/06 武汉大学，计算机系，硕士</span></p></li><li><p><span style=\"font-size: 18px;\">1992/09 -1996/06 武汉测绘科技大学，光仪系，工学学士</span></p></li><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">工作经历</span></h3><li><p><span style=\"font-size: 18px;\">2013 －至今武汉大学国际软件学院院长</span></p></li><li><p><span style=\"font-size: 18px;\">2010 – 2013 美国能源部橡树岭国家实验室，计算数据分析部,研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2011 – 2013纽约理工大学，计算机系，院长助理（兼）</span></p></li><li><p><span style=\"font-size: 18px;\">2009 – 2012 路易斯维尔大学，计算机系， 副教授</span></p></li><li><p><span style=\"font-size: 18px;\">2006 – 2010 美国能源部橡树岭国家实验室， 应用软件工程部， 副研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2004 – 2006 美国能源部橡树岭国家实验室，博士后</span></p></li><li><p><span style=\"font-size: 18px;\">2000 – 2004 美国路易斯维尔大学，计算机系，研究助理</span></p></li><li><p><span style=\"font-size: 18px;\">2000 武汉测绘科技大学，副高级工程师</span></p></li><li><p><span style=\"font-size: 18px;\">1997 – 2000 武汉测绘科技大学，网络中心，副主任</span></p></li><li><p><span style=\"font-size: 18px;\">1992 – 1997武汉测绘科技大学，设备处，工程师</span></p></li></ul><p><br/></p>'),(7,1,'崔晓辉','教授','xcui@whu.edu.cn ',1,10,1,1,'2017-11-17/5a0e50e29ab3d.png','<p><span style=\"font-size: 18px;\">基本信息</span></p><p><img src=\"http://www.wuhandaxue.com/Public/ueditor/themes/default/images/spacer.gif\" style=\"background:url(http://www.wuhandaxue.com/Public/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/zbsyk1001/Desktop/web/web/images/stories/cuixiaohui.jpg\"/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\"><span style=\"font-size: 18px;\"><span style=\"font-size: 24px;\">崔晓晖教授<br/>国际软件学院院长<br/>湖北省“百人计划”入选者</span><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔晓晖教授毕业于美国路易斯维尔大学，目前是经全球招聘后被选任的武汉大学国际软件学院院长。在此之前，崔教授在美国能源部橡树岭国家实验室任正研究员。同时还担任了美国路易斯维尔大学的讲座副教授，美国田纳西大学、纽约理工大学兼职教授等职务。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授长期从事计算机软件工程、集群智能以及高性能计算的理论与实践研究。崔教授领导团队用群集智能和图形加速器技术用于加速大规模城市交通模拟并进行大数据分析，该成果被用于美国多个部门采用。崔教授发展了异构型并行计算的编程模型和运行环境，提高了异构型集群并行计算的性能和能源利用效率。其成果被应用于对橡树岭实验室克雷XT5超级通用计算机，从而在2012年保住了橡树岭实验室世界最快计算机的称号。崔教授丰富的理论和项目经验可以为本项目的理论建模、方法设计、仿真系统开发提供指导。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授发表论文60多篇，其中SCI 6篇。曾承担美国5项国家重大项目，纵向课题费近300万，目前承担国家自然科学基金面上项目和湖北省自然基金重点项目各一项。崔教授是北美计算社会及组织科学协会，北美交通委员会会员，也长期担任美国国防部，能源部和空军等研究项目评委。他受邀或被遴选为国际会议报告人 50多次。崔教授的研究工作已被美国NBC电视台，时代自由周刊以及英国新科学家杂志等新闻媒体报道，并获得多个奖励，包括美国能源部杰出导师奖（2008，2009）、美国国家实验室特级贡献奖（2009），橡树岭国家实验室特别事件奖（2009)等。</span></p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">教育经历</span></h3><li><p><span style=\"font-size: 18px;\">2000/09 - 2004/06 美国路易斯维尔大学，计算机系,博士</span></p></li><li><p><span style=\"font-size: 18px;\">1997/09 -2000/06 武汉大学，计算机系，硕士</span></p></li><li><p><span style=\"font-size: 18px;\">1992/09 -1996/06 武汉测绘科技大学，光仪系，工学学士</span></p></li><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">工作经历</span></h3><li><p><span style=\"font-size: 18px;\">2013 －至今武汉大学国际软件学院院长</span></p></li><li><p><span style=\"font-size: 18px;\">2010 – 2013 美国能源部橡树岭国家实验室，计算数据分析部,研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2011 – 2013纽约理工大学，计算机系，院长助理（兼）</span></p></li><li><p><span style=\"font-size: 18px;\">2009 – 2012 路易斯维尔大学，计算机系， 副教授</span></p></li><li><p><span style=\"font-size: 18px;\">2006 – 2010 美国能源部橡树岭国家实验室， 应用软件工程部， 副研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2004 – 2006 美国能源部橡树岭国家实验室，博士后</span></p></li><li><p><span style=\"font-size: 18px;\">2000 – 2004 美国路易斯维尔大学，计算机系，研究助理</span></p></li><li><p><span style=\"font-size: 18px;\">2000 武汉测绘科技大学，副高级工程师</span></p></li><li><p><span style=\"font-size: 18px;\">1997 – 2000 武汉测绘科技大学，网络中心，副主任</span></p></li><li><p><span style=\"font-size: 18px;\">1992 – 1997武汉测绘科技大学，设备处，工程师</span></p></li></ul><p><br/></p>'),(8,1,'崔晓辉','教授','xcui@whu.edu.cn ',1,10,1,1,'2017-11-17/5a0e50e29ab3d.png','<p><span style=\"font-size: 18px;\">基本信息</span></p><p><img src=\"http://www.wuhandaxue.com/Public/ueditor/themes/default/images/spacer.gif\" style=\"background:url(http://www.wuhandaxue.com/Public/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/zbsyk1001/Desktop/web/web/images/stories/cuixiaohui.jpg\"/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\"><span style=\"font-size: 18px;\"><span style=\"font-size: 24px;\">崔晓晖教授<br/>国际软件学院院长<br/>湖北省“百人计划”入选者</span><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔晓晖教授毕业于美国路易斯维尔大学，目前是经全球招聘后被选任的武汉大学国际软件学院院长。在此之前，崔教授在美国能源部橡树岭国家实验室任正研究员。同时还担任了美国路易斯维尔大学的讲座副教授，美国田纳西大学、纽约理工大学兼职教授等职务。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授长期从事计算机软件工程、集群智能以及高性能计算的理论与实践研究。崔教授领导团队用群集智能和图形加速器技术用于加速大规模城市交通模拟并进行大数据分析，该成果被用于美国多个部门采用。崔教授发展了异构型并行计算的编程模型和运行环境，提高了异构型集群并行计算的性能和能源利用效率。其成果被应用于对橡树岭实验室克雷XT5超级通用计算机，从而在2012年保住了橡树岭实验室世界最快计算机的称号。崔教授丰富的理论和项目经验可以为本项目的理论建模、方法设计、仿真系统开发提供指导。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授发表论文60多篇，其中SCI 6篇。曾承担美国5项国家重大项目，纵向课题费近300万，目前承担国家自然科学基金面上项目和湖北省自然基金重点项目各一项。崔教授是北美计算社会及组织科学协会，北美交通委员会会员，也长期担任美国国防部，能源部和空军等研究项目评委。他受邀或被遴选为国际会议报告人 50多次。崔教授的研究工作已被美国NBC电视台，时代自由周刊以及英国新科学家杂志等新闻媒体报道，并获得多个奖励，包括美国能源部杰出导师奖（2008，2009）、美国国家实验室特级贡献奖（2009），橡树岭国家实验室特别事件奖（2009)等。</span></p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">教育经历</span></h3><li><p><span style=\"font-size: 18px;\">2000/09 - 2004/06 美国路易斯维尔大学，计算机系,博士</span></p></li><li><p><span style=\"font-size: 18px;\">1997/09 -2000/06 武汉大学，计算机系，硕士</span></p></li><li><p><span style=\"font-size: 18px;\">1992/09 -1996/06 武汉测绘科技大学，光仪系，工学学士</span></p></li><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">工作经历</span></h3><li><p><span style=\"font-size: 18px;\">2013 －至今武汉大学国际软件学院院长</span></p></li><li><p><span style=\"font-size: 18px;\">2010 – 2013 美国能源部橡树岭国家实验室，计算数据分析部,研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2011 – 2013纽约理工大学，计算机系，院长助理（兼）</span></p></li><li><p><span style=\"font-size: 18px;\">2009 – 2012 路易斯维尔大学，计算机系， 副教授</span></p></li><li><p><span style=\"font-size: 18px;\">2006 – 2010 美国能源部橡树岭国家实验室， 应用软件工程部， 副研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2004 – 2006 美国能源部橡树岭国家实验室，博士后</span></p></li><li><p><span style=\"font-size: 18px;\">2000 – 2004 美国路易斯维尔大学，计算机系，研究助理</span></p></li><li><p><span style=\"font-size: 18px;\">2000 武汉测绘科技大学，副高级工程师</span></p></li><li><p><span style=\"font-size: 18px;\">1997 – 2000 武汉测绘科技大学，网络中心，副主任</span></p></li><li><p><span style=\"font-size: 18px;\">1992 – 1997武汉测绘科技大学，设备处，工程师</span></p></li></ul><p><br/></p>'),(9,1,'崔晓辉','教授','xcui@whu.edu.cn ',1,10,1,1,'2017-11-17/5a0e50e29ab3d.png','<p><span style=\"font-size: 18px;\">基本信息</span></p><p><img src=\"http://www.wuhandaxue.com/Public/ueditor/themes/default/images/spacer.gif\" style=\"background:url(http://www.wuhandaxue.com/Public/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/zbsyk1001/Desktop/web/web/images/stories/cuixiaohui.jpg\"/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\"><span style=\"font-size: 18px;\"><span style=\"font-size: 24px;\">崔晓晖教授<br/>国际软件学院院长<br/>湖北省“百人计划”入选者</span><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔晓晖教授毕业于美国路易斯维尔大学，目前是经全球招聘后被选任的武汉大学国际软件学院院长。在此之前，崔教授在美国能源部橡树岭国家实验室任正研究员。同时还担任了美国路易斯维尔大学的讲座副教授，美国田纳西大学、纽约理工大学兼职教授等职务。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授长期从事计算机软件工程、集群智能以及高性能计算的理论与实践研究。崔教授领导团队用群集智能和图形加速器技术用于加速大规模城市交通模拟并进行大数据分析，该成果被用于美国多个部门采用。崔教授发展了异构型并行计算的编程模型和运行环境，提高了异构型集群并行计算的性能和能源利用效率。其成果被应用于对橡树岭实验室克雷XT5超级通用计算机，从而在2012年保住了橡树岭实验室世界最快计算机的称号。崔教授丰富的理论和项目经验可以为本项目的理论建模、方法设计、仿真系统开发提供指导。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授发表论文60多篇，其中SCI 6篇。曾承担美国5项国家重大项目，纵向课题费近300万，目前承担国家自然科学基金面上项目和湖北省自然基金重点项目各一项。崔教授是北美计算社会及组织科学协会，北美交通委员会会员，也长期担任美国国防部，能源部和空军等研究项目评委。他受邀或被遴选为国际会议报告人 50多次。崔教授的研究工作已被美国NBC电视台，时代自由周刊以及英国新科学家杂志等新闻媒体报道，并获得多个奖励，包括美国能源部杰出导师奖（2008，2009）、美国国家实验室特级贡献奖（2009），橡树岭国家实验室特别事件奖（2009)等。</span></p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">教育经历</span></h3><li><p><span style=\"font-size: 18px;\">2000/09 - 2004/06 美国路易斯维尔大学，计算机系,博士</span></p></li><li><p><span style=\"font-size: 18px;\">1997/09 -2000/06 武汉大学，计算机系，硕士</span></p></li><li><p><span style=\"font-size: 18px;\">1992/09 -1996/06 武汉测绘科技大学，光仪系，工学学士</span></p></li><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">工作经历</span></h3><li><p><span style=\"font-size: 18px;\">2013 －至今武汉大学国际软件学院院长</span></p></li><li><p><span style=\"font-size: 18px;\">2010 – 2013 美国能源部橡树岭国家实验室，计算数据分析部,研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2011 – 2013纽约理工大学，计算机系，院长助理（兼）</span></p></li><li><p><span style=\"font-size: 18px;\">2009 – 2012 路易斯维尔大学，计算机系， 副教授</span></p></li><li><p><span style=\"font-size: 18px;\">2006 – 2010 美国能源部橡树岭国家实验室， 应用软件工程部， 副研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2004 – 2006 美国能源部橡树岭国家实验室，博士后</span></p></li><li><p><span style=\"font-size: 18px;\">2000 – 2004 美国路易斯维尔大学，计算机系，研究助理</span></p></li><li><p><span style=\"font-size: 18px;\">2000 武汉测绘科技大学，副高级工程师</span></p></li><li><p><span style=\"font-size: 18px;\">1997 – 2000 武汉测绘科技大学，网络中心，副主任</span></p></li><li><p><span style=\"font-size: 18px;\">1992 – 1997武汉测绘科技大学，设备处，工程师</span></p></li></ul><p><br/></p>'),(10,2,'崔晓辉','教授','xcui@whu.edu.cn ',1,10,0,1,'2017-11-17/5a0e50e29ab3d.png','<p><span style=\"font-size: 18px;\">基本信息</span></p><p><img src=\"http://www.wuhandaxue.com/Public/ueditor/themes/default/images/spacer.gif\" style=\"background:url(http://www.wuhandaxue.com/Public/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/zbsyk1001/Desktop/web/web/images/stories/cuixiaohui.jpg\"/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\"><span style=\"font-size: 18px;\"><span style=\"font-size: 24px;\">崔晓晖教授<br/>国际软件学院院长<br/>湖北省“百人计划”入选者</span><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔晓晖教授毕业于美国路易斯维尔大学，目前是经全球招聘后被选任的武汉大学国际软件学院院长。在此之前，崔教授在美国能源部橡树岭国家实验室任正研究员。同时还担任了美国路易斯维尔大学的讲座副教授，美国田纳西大学、纽约理工大学兼职教授等职务。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授长期从事计算机软件工程、集群智能以及高性能计算的理论与实践研究。崔教授领导团队用群集智能和图形加速器技术用于加速大规模城市交通模拟并进行大数据分析，该成果被用于美国多个部门采用。崔教授发展了异构型并行计算的编程模型和运行环境，提高了异构型集群并行计算的性能和能源利用效率。其成果被应用于对橡树岭实验室克雷XT5超级通用计算机，从而在2012年保住了橡树岭实验室世界最快计算机的称号。崔教授丰富的理论和项目经验可以为本项目的理论建模、方法设计、仿真系统开发提供指导。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授发表论文60多篇，其中SCI 6篇。曾承担美国5项国家重大项目，纵向课题费近300万，目前承担国家自然科学基金面上项目和湖北省自然基金重点项目各一项。崔教授是北美计算社会及组织科学协会，北美交通委员会会员，也长期担任美国国防部，能源部和空军等研究项目评委。他受邀或被遴选为国际会议报告人 50多次。崔教授的研究工作已被美国NBC电视台，时代自由周刊以及英国新科学家杂志等新闻媒体报道，并获得多个奖励，包括美国能源部杰出导师奖（2008，2009）、美国国家实验室特级贡献奖（2009），橡树岭国家实验室特别事件奖（2009)等。</span></p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">教育经历</span></h3><li><p><span style=\"font-size: 18px;\">2000/09 - 2004/06 美国路易斯维尔大学，计算机系,博士</span></p></li><li><p><span style=\"font-size: 18px;\">1997/09 -2000/06 武汉大学，计算机系，硕士</span></p></li><li><p><span style=\"font-size: 18px;\">1992/09 -1996/06 武汉测绘科技大学，光仪系，工学学士</span></p></li><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">工作经历</span></h3><li><p><span style=\"font-size: 18px;\">2013 －至今武汉大学国际软件学院院长</span></p></li><li><p><span style=\"font-size: 18px;\">2010 – 2013 美国能源部橡树岭国家实验室，计算数据分析部,研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2011 – 2013纽约理工大学，计算机系，院长助理（兼）</span></p></li><li><p><span style=\"font-size: 18px;\">2009 – 2012 路易斯维尔大学，计算机系， 副教授</span></p></li><li><p><span style=\"font-size: 18px;\">2006 – 2010 美国能源部橡树岭国家实验室， 应用软件工程部， 副研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2004 – 2006 美国能源部橡树岭国家实验室，博士后</span></p></li><li><p><span style=\"font-size: 18px;\">2000 – 2004 美国路易斯维尔大学，计算机系，研究助理</span></p></li><li><p><span style=\"font-size: 18px;\">2000 武汉测绘科技大学，副高级工程师</span></p></li><li><p><span style=\"font-size: 18px;\">1997 – 2000 武汉测绘科技大学，网络中心，副主任</span></p></li><li><p><span style=\"font-size: 18px;\">1992 – 1997武汉测绘科技大学，设备处，工程师</span></p></li></ul><p><br/></p>'),(11,1,'崔晓辉','教授','xcui@whu.edu.cn ',1,10,1,1,'2017-11-17/5a0e50e29ab3d.png','<p><span style=\"font-size: 18px;\">基本信息</span></p><p><img src=\"http://www.wuhandaxue.com/Public/ueditor/themes/default/images/spacer.gif\" style=\"background:url(http://www.wuhandaxue.com/Public/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/zbsyk1001/Desktop/web/web/images/stories/cuixiaohui.jpg\"/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\"><span style=\"font-size: 18px;\"><span style=\"font-size: 24px;\">崔晓晖教授<br/>国际软件学院院长<br/>湖北省“百人计划”入选者</span><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔晓晖教授毕业于美国路易斯维尔大学，目前是经全球招聘后被选任的武汉大学国际软件学院院长。在此之前，崔教授在美国能源部橡树岭国家实验室任正研究员。同时还担任了美国路易斯维尔大学的讲座副教授，美国田纳西大学、纽约理工大学兼职教授等职务。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授长期从事计算机软件工程、集群智能以及高性能计算的理论与实践研究。崔教授领导团队用群集智能和图形加速器技术用于加速大规模城市交通模拟并进行大数据分析，该成果被用于美国多个部门采用。崔教授发展了异构型并行计算的编程模型和运行环境，提高了异构型集群并行计算的性能和能源利用效率。其成果被应用于对橡树岭实验室克雷XT5超级通用计算机，从而在2012年保住了橡树岭实验室世界最快计算机的称号。崔教授丰富的理论和项目经验可以为本项目的理论建模、方法设计、仿真系统开发提供指导。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授发表论文60多篇，其中SCI 6篇。曾承担美国5项国家重大项目，纵向课题费近300万，目前承担国家自然科学基金面上项目和湖北省自然基金重点项目各一项。崔教授是北美计算社会及组织科学协会，北美交通委员会会员，也长期担任美国国防部，能源部和空军等研究项目评委。他受邀或被遴选为国际会议报告人 50多次。崔教授的研究工作已被美国NBC电视台，时代自由周刊以及英国新科学家杂志等新闻媒体报道，并获得多个奖励，包括美国能源部杰出导师奖（2008，2009）、美国国家实验室特级贡献奖（2009），橡树岭国家实验室特别事件奖（2009)等。</span></p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">教育经历</span></h3><li><p><span style=\"font-size: 18px;\">2000/09 - 2004/06 美国路易斯维尔大学，计算机系,博士</span></p></li><li><p><span style=\"font-size: 18px;\">1997/09 -2000/06 武汉大学，计算机系，硕士</span></p></li><li><p><span style=\"font-size: 18px;\">1992/09 -1996/06 武汉测绘科技大学，光仪系，工学学士</span></p></li><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">工作经历</span></h3><li><p><span style=\"font-size: 18px;\">2013 －至今武汉大学国际软件学院院长</span></p></li><li><p><span style=\"font-size: 18px;\">2010 – 2013 美国能源部橡树岭国家实验室，计算数据分析部,研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2011 – 2013纽约理工大学，计算机系，院长助理（兼）</span></p></li><li><p><span style=\"font-size: 18px;\">2009 – 2012 路易斯维尔大学，计算机系， 副教授</span></p></li><li><p><span style=\"font-size: 18px;\">2006 – 2010 美国能源部橡树岭国家实验室， 应用软件工程部， 副研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2004 – 2006 美国能源部橡树岭国家实验室，博士后</span></p></li><li><p><span style=\"font-size: 18px;\">2000 – 2004 美国路易斯维尔大学，计算机系，研究助理</span></p></li><li><p><span style=\"font-size: 18px;\">2000 武汉测绘科技大学，副高级工程师</span></p></li><li><p><span style=\"font-size: 18px;\">1997 – 2000 武汉测绘科技大学，网络中心，副主任</span></p></li><li><p><span style=\"font-size: 18px;\">1992 – 1997武汉测绘科技大学，设备处，工程师</span></p></li></ul><p><br/></p>'),(12,2,'崔晓辉','教授','xcui@whu.edu.cn ',1,10,1,1,'2017-11-17/5a0e50e29ab3d.png','<p><span style=\"font-size: 18px;\">基本信息</span></p><p><img src=\"http://www.wuhandaxue.com/Public/ueditor/themes/default/images/spacer.gif\" style=\"background:url(http://www.wuhandaxue.com/Public/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/zbsyk1001/Desktop/web/web/images/stories/cuixiaohui.jpg\"/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\"><span style=\"font-size: 18px;\"><span style=\"font-size: 24px;\">崔晓晖教授<br/>国际软件学院院长<br/>湖北省“百人计划”入选者</span><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔晓晖教授毕业于美国路易斯维尔大学，目前是经全球招聘后被选任的武汉大学国际软件学院院长。在此之前，崔教授在美国能源部橡树岭国家实验室任正研究员。同时还担任了美国路易斯维尔大学的讲座副教授，美国田纳西大学、纽约理工大学兼职教授等职务。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授长期从事计算机软件工程、集群智能以及高性能计算的理论与实践研究。崔教授领导团队用群集智能和图形加速器技术用于加速大规模城市交通模拟并进行大数据分析，该成果被用于美国多个部门采用。崔教授发展了异构型并行计算的编程模型和运行环境，提高了异构型集群并行计算的性能和能源利用效率。其成果被应用于对橡树岭实验室克雷XT5超级通用计算机，从而在2012年保住了橡树岭实验室世界最快计算机的称号。崔教授丰富的理论和项目经验可以为本项目的理论建模、方法设计、仿真系统开发提供指导。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授发表论文60多篇，其中SCI 6篇。曾承担美国5项国家重大项目，纵向课题费近300万，目前承担国家自然科学基金面上项目和湖北省自然基金重点项目各一项。崔教授是北美计算社会及组织科学协会，北美交通委员会会员，也长期担任美国国防部，能源部和空军等研究项目评委。他受邀或被遴选为国际会议报告人 50多次。崔教授的研究工作已被美国NBC电视台，时代自由周刊以及英国新科学家杂志等新闻媒体报道，并获得多个奖励，包括美国能源部杰出导师奖（2008，2009）、美国国家实验室特级贡献奖（2009），橡树岭国家实验室特别事件奖（2009)等。</span></p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">教育经历</span></h3><li><p><span style=\"font-size: 18px;\">2000/09 - 2004/06 美国路易斯维尔大学，计算机系,博士</span></p></li><li><p><span style=\"font-size: 18px;\">1997/09 -2000/06 武汉大学，计算机系，硕士</span></p></li><li><p><span style=\"font-size: 18px;\">1992/09 -1996/06 武汉测绘科技大学，光仪系，工学学士</span></p></li><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">工作经历</span></h3><li><p><span style=\"font-size: 18px;\">2013 －至今武汉大学国际软件学院院长</span></p></li><li><p><span style=\"font-size: 18px;\">2010 – 2013 美国能源部橡树岭国家实验室，计算数据分析部,研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2011 – 2013纽约理工大学，计算机系，院长助理（兼）</span></p></li><li><p><span style=\"font-size: 18px;\">2009 – 2012 路易斯维尔大学，计算机系， 副教授</span></p></li><li><p><span style=\"font-size: 18px;\">2006 – 2010 美国能源部橡树岭国家实验室， 应用软件工程部， 副研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2004 – 2006 美国能源部橡树岭国家实验室，博士后</span></p></li><li><p><span style=\"font-size: 18px;\">2000 – 2004 美国路易斯维尔大学，计算机系，研究助理</span></p></li><li><p><span style=\"font-size: 18px;\">2000 武汉测绘科技大学，副高级工程师</span></p></li><li><p><span style=\"font-size: 18px;\">1997 – 2000 武汉测绘科技大学，网络中心，副主任</span></p></li><li><p><span style=\"font-size: 18px;\">1992 – 1997武汉测绘科技大学，设备处，工程师</span></p></li></ul><p><br/></p>'),(13,2,'崔晓辉','教授','xcui@whu.edu.cn ',1,10,1,1,'2017-11-17/5a0e50e29ab3d.png','<p><span style=\"font-size: 18px;\">基本信息</span></p><p><img src=\"http://www.wuhandaxue.com/Public/ueditor/themes/default/images/spacer.gif\" style=\"background:url(http://www.wuhandaxue.com/Public/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/zbsyk1001/Desktop/web/web/images/stories/cuixiaohui.jpg\"/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\"><span style=\"font-size: 18px;\"><span style=\"font-size: 24px;\">崔晓晖教授<br/>国际软件学院院长<br/>湖北省“百人计划”入选者</span><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔晓晖教授毕业于美国路易斯维尔大学，目前是经全球招聘后被选任的武汉大学国际软件学院院长。在此之前，崔教授在美国能源部橡树岭国家实验室任正研究员。同时还担任了美国路易斯维尔大学的讲座副教授，美国田纳西大学、纽约理工大学兼职教授等职务。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授长期从事计算机软件工程、集群智能以及高性能计算的理论与实践研究。崔教授领导团队用群集智能和图形加速器技术用于加速大规模城市交通模拟并进行大数据分析，该成果被用于美国多个部门采用。崔教授发展了异构型并行计算的编程模型和运行环境，提高了异构型集群并行计算的性能和能源利用效率。其成果被应用于对橡树岭实验室克雷XT5超级通用计算机，从而在2012年保住了橡树岭实验室世界最快计算机的称号。崔教授丰富的理论和项目经验可以为本项目的理论建模、方法设计、仿真系统开发提供指导。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授发表论文60多篇，其中SCI 6篇。曾承担美国5项国家重大项目，纵向课题费近300万，目前承担国家自然科学基金面上项目和湖北省自然基金重点项目各一项。崔教授是北美计算社会及组织科学协会，北美交通委员会会员，也长期担任美国国防部，能源部和空军等研究项目评委。他受邀或被遴选为国际会议报告人 50多次。崔教授的研究工作已被美国NBC电视台，时代自由周刊以及英国新科学家杂志等新闻媒体报道，并获得多个奖励，包括美国能源部杰出导师奖（2008，2009）、美国国家实验室特级贡献奖（2009），橡树岭国家实验室特别事件奖（2009)等。</span></p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">教育经历</span></h3><li><p><span style=\"font-size: 18px;\">2000/09 - 2004/06 美国路易斯维尔大学，计算机系,博士</span></p></li><li><p><span style=\"font-size: 18px;\">1997/09 -2000/06 武汉大学，计算机系，硕士</span></p></li><li><p><span style=\"font-size: 18px;\">1992/09 -1996/06 武汉测绘科技大学，光仪系，工学学士</span></p></li><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">工作经历</span></h3><li><p><span style=\"font-size: 18px;\">2013 －至今武汉大学国际软件学院院长</span></p></li><li><p><span style=\"font-size: 18px;\">2010 – 2013 美国能源部橡树岭国家实验室，计算数据分析部,研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2011 – 2013纽约理工大学，计算机系，院长助理（兼）</span></p></li><li><p><span style=\"font-size: 18px;\">2009 – 2012 路易斯维尔大学，计算机系， 副教授</span></p></li><li><p><span style=\"font-size: 18px;\">2006 – 2010 美国能源部橡树岭国家实验室， 应用软件工程部， 副研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2004 – 2006 美国能源部橡树岭国家实验室，博士后</span></p></li><li><p><span style=\"font-size: 18px;\">2000 – 2004 美国路易斯维尔大学，计算机系，研究助理</span></p></li><li><p><span style=\"font-size: 18px;\">2000 武汉测绘科技大学，副高级工程师</span></p></li><li><p><span style=\"font-size: 18px;\">1997 – 2000 武汉测绘科技大学，网络中心，副主任</span></p></li><li><p><span style=\"font-size: 18px;\">1992 – 1997武汉测绘科技大学，设备处，工程师</span></p></li></ul><p><br/></p>'),(14,2,'崔晓辉','教授','xcui@whu.edu.cn ',1,10,0,1,'2017-11-17/5a0e50e29ab3d.png','<p><span style=\"font-size: 18px;\">基本信息</span></p><p><img src=\"http://www.wuhandaxue.com/Public/ueditor/themes/default/images/spacer.gif\" style=\"background:url(http://www.wuhandaxue.com/Public/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/zbsyk1001/Desktop/web/web/images/stories/cuixiaohui.jpg\"/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\"><span style=\"font-size: 18px;\"><span style=\"font-size: 24px;\">崔晓晖教授<br/>国际软件学院院长<br/>湖北省“百人计划”入选者</span><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔晓晖教授毕业于美国路易斯维尔大学，目前是经全球招聘后被选任的武汉大学国际软件学院院长。在此之前，崔教授在美国能源部橡树岭国家实验室任正研究员。同时还担任了美国路易斯维尔大学的讲座副教授，美国田纳西大学、纽约理工大学兼职教授等职务。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授长期从事计算机软件工程、集群智能以及高性能计算的理论与实践研究。崔教授领导团队用群集智能和图形加速器技术用于加速大规模城市交通模拟并进行大数据分析，该成果被用于美国多个部门采用。崔教授发展了异构型并行计算的编程模型和运行环境，提高了异构型集群并行计算的性能和能源利用效率。其成果被应用于对橡树岭实验室克雷XT5超级通用计算机，从而在2012年保住了橡树岭实验室世界最快计算机的称号。崔教授丰富的理论和项目经验可以为本项目的理论建模、方法设计、仿真系统开发提供指导。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授发表论文60多篇，其中SCI 6篇。曾承担美国5项国家重大项目，纵向课题费近300万，目前承担国家自然科学基金面上项目和湖北省自然基金重点项目各一项。崔教授是北美计算社会及组织科学协会，北美交通委员会会员，也长期担任美国国防部，能源部和空军等研究项目评委。他受邀或被遴选为国际会议报告人 50多次。崔教授的研究工作已被美国NBC电视台，时代自由周刊以及英国新科学家杂志等新闻媒体报道，并获得多个奖励，包括美国能源部杰出导师奖（2008，2009）、美国国家实验室特级贡献奖（2009），橡树岭国家实验室特别事件奖（2009)等。</span></p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">教育经历</span></h3><li><p><span style=\"font-size: 18px;\">2000/09 - 2004/06 美国路易斯维尔大学，计算机系,博士</span></p></li><li><p><span style=\"font-size: 18px;\">1997/09 -2000/06 武汉大学，计算机系，硕士</span></p></li><li><p><span style=\"font-size: 18px;\">1992/09 -1996/06 武汉测绘科技大学，光仪系，工学学士</span></p></li><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">工作经历</span></h3><li><p><span style=\"font-size: 18px;\">2013 －至今武汉大学国际软件学院院长</span></p></li><li><p><span style=\"font-size: 18px;\">2010 – 2013 美国能源部橡树岭国家实验室，计算数据分析部,研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2011 – 2013纽约理工大学，计算机系，院长助理（兼）</span></p></li><li><p><span style=\"font-size: 18px;\">2009 – 2012 路易斯维尔大学，计算机系， 副教授</span></p></li><li><p><span style=\"font-size: 18px;\">2006 – 2010 美国能源部橡树岭国家实验室， 应用软件工程部， 副研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2004 – 2006 美国能源部橡树岭国家实验室，博士后</span></p></li><li><p><span style=\"font-size: 18px;\">2000 – 2004 美国路易斯维尔大学，计算机系，研究助理</span></p></li><li><p><span style=\"font-size: 18px;\">2000 武汉测绘科技大学，副高级工程师</span></p></li><li><p><span style=\"font-size: 18px;\">1997 – 2000 武汉测绘科技大学，网络中心，副主任</span></p></li><li><p><span style=\"font-size: 18px;\">1992 – 1997武汉测绘科技大学，设备处，工程师</span></p></li></ul><p><br/></p>'),(15,2,'崔晓辉','教授','xcui@whu.edu.cn ',1,10,0,1,'2017-11-17/5a0e50e29ab3d.png','<p><span style=\"font-size: 18px;\">基本信息</span></p><p><img src=\"http://www.wuhandaxue.com/Public/ueditor/themes/default/images/spacer.gif\" style=\"background:url(http://www.wuhandaxue.com/Public/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/zbsyk1001/Desktop/web/web/images/stories/cuixiaohui.jpg\"/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\"><span style=\"font-size: 18px;\"><span style=\"font-size: 24px;\">崔晓晖教授<br/>国际软件学院院长<br/>湖北省“百人计划”入选者</span><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔晓晖教授毕业于美国路易斯维尔大学，目前是经全球招聘后被选任的武汉大学国际软件学院院长。在此之前，崔教授在美国能源部橡树岭国家实验室任正研究员。同时还担任了美国路易斯维尔大学的讲座副教授，美国田纳西大学、纽约理工大学兼职教授等职务。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授长期从事计算机软件工程、集群智能以及高性能计算的理论与实践研究。崔教授领导团队用群集智能和图形加速器技术用于加速大规模城市交通模拟并进行大数据分析，该成果被用于美国多个部门采用。崔教授发展了异构型并行计算的编程模型和运行环境，提高了异构型集群并行计算的性能和能源利用效率。其成果被应用于对橡树岭实验室克雷XT5超级通用计算机，从而在2012年保住了橡树岭实验室世界最快计算机的称号。崔教授丰富的理论和项目经验可以为本项目的理论建模、方法设计、仿真系统开发提供指导。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授发表论文60多篇，其中SCI 6篇。曾承担美国5项国家重大项目，纵向课题费近300万，目前承担国家自然科学基金面上项目和湖北省自然基金重点项目各一项。崔教授是北美计算社会及组织科学协会，北美交通委员会会员，也长期担任美国国防部，能源部和空军等研究项目评委。他受邀或被遴选为国际会议报告人 50多次。崔教授的研究工作已被美国NBC电视台，时代自由周刊以及英国新科学家杂志等新闻媒体报道，并获得多个奖励，包括美国能源部杰出导师奖（2008，2009）、美国国家实验室特级贡献奖（2009），橡树岭国家实验室特别事件奖（2009)等。</span></p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">教育经历</span></h3><li><p><span style=\"font-size: 18px;\">2000/09 - 2004/06 美国路易斯维尔大学，计算机系,博士</span></p></li><li><p><span style=\"font-size: 18px;\">1997/09 -2000/06 武汉大学，计算机系，硕士</span></p></li><li><p><span style=\"font-size: 18px;\">1992/09 -1996/06 武汉测绘科技大学，光仪系，工学学士</span></p></li><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">工作经历</span></h3><li><p><span style=\"font-size: 18px;\">2013 －至今武汉大学国际软件学院院长</span></p></li><li><p><span style=\"font-size: 18px;\">2010 – 2013 美国能源部橡树岭国家实验室，计算数据分析部,研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2011 – 2013纽约理工大学，计算机系，院长助理（兼）</span></p></li><li><p><span style=\"font-size: 18px;\">2009 – 2012 路易斯维尔大学，计算机系， 副教授</span></p></li><li><p><span style=\"font-size: 18px;\">2006 – 2010 美国能源部橡树岭国家实验室， 应用软件工程部， 副研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2004 – 2006 美国能源部橡树岭国家实验室，博士后</span></p></li><li><p><span style=\"font-size: 18px;\">2000 – 2004 美国路易斯维尔大学，计算机系，研究助理</span></p></li><li><p><span style=\"font-size: 18px;\">2000 武汉测绘科技大学，副高级工程师</span></p></li><li><p><span style=\"font-size: 18px;\">1997 – 2000 武汉测绘科技大学，网络中心，副主任</span></p></li><li><p><span style=\"font-size: 18px;\">1992 – 1997武汉测绘科技大学，设备处，工程师</span></p></li></ul><p><br/></p>'),(16,2,'崔晓辉','教授','xcui@whu.edu.cn ',1,10,0,1,'2017-11-17/5a0e50e29ab3d.png','<p><span style=\"font-size: 18px;\">基本信息</span></p><p><img src=\"http://www.wuhandaxue.com/Public/ueditor/themes/default/images/spacer.gif\" style=\"background:url(http://www.wuhandaxue.com/Public/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/zbsyk1001/Desktop/web/web/images/stories/cuixiaohui.jpg\"/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\"><span style=\"font-size: 18px;\"><span style=\"font-size: 24px;\">崔晓晖教授<br/>国际软件学院院长<br/>湖北省“百人计划”入选者</span><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔晓晖教授毕业于美国路易斯维尔大学，目前是经全球招聘后被选任的武汉大学国际软件学院院长。在此之前，崔教授在美国能源部橡树岭国家实验室任正研究员。同时还担任了美国路易斯维尔大学的讲座副教授，美国田纳西大学、纽约理工大学兼职教授等职务。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授长期从事计算机软件工程、集群智能以及高性能计算的理论与实践研究。崔教授领导团队用群集智能和图形加速器技术用于加速大规模城市交通模拟并进行大数据分析，该成果被用于美国多个部门采用。崔教授发展了异构型并行计算的编程模型和运行环境，提高了异构型集群并行计算的性能和能源利用效率。其成果被应用于对橡树岭实验室克雷XT5超级通用计算机，从而在2012年保住了橡树岭实验室世界最快计算机的称号。崔教授丰富的理论和项目经验可以为本项目的理论建模、方法设计、仿真系统开发提供指导。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授发表论文60多篇，其中SCI 6篇。曾承担美国5项国家重大项目，纵向课题费近300万，目前承担国家自然科学基金面上项目和湖北省自然基金重点项目各一项。崔教授是北美计算社会及组织科学协会，北美交通委员会会员，也长期担任美国国防部，能源部和空军等研究项目评委。他受邀或被遴选为国际会议报告人 50多次。崔教授的研究工作已被美国NBC电视台，时代自由周刊以及英国新科学家杂志等新闻媒体报道，并获得多个奖励，包括美国能源部杰出导师奖（2008，2009）、美国国家实验室特级贡献奖（2009），橡树岭国家实验室特别事件奖（2009)等。</span></p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">教育经历</span></h3><li><p><span style=\"font-size: 18px;\">2000/09 - 2004/06 美国路易斯维尔大学，计算机系,博士</span></p></li><li><p><span style=\"font-size: 18px;\">1997/09 -2000/06 武汉大学，计算机系，硕士</span></p></li><li><p><span style=\"font-size: 18px;\">1992/09 -1996/06 武汉测绘科技大学，光仪系，工学学士</span></p></li><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">工作经历</span></h3><li><p><span style=\"font-size: 18px;\">2013 －至今武汉大学国际软件学院院长</span></p></li><li><p><span style=\"font-size: 18px;\">2010 – 2013 美国能源部橡树岭国家实验室，计算数据分析部,研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2011 – 2013纽约理工大学，计算机系，院长助理（兼）</span></p></li><li><p><span style=\"font-size: 18px;\">2009 – 2012 路易斯维尔大学，计算机系， 副教授</span></p></li><li><p><span style=\"font-size: 18px;\">2006 – 2010 美国能源部橡树岭国家实验室， 应用软件工程部， 副研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2004 – 2006 美国能源部橡树岭国家实验室，博士后</span></p></li><li><p><span style=\"font-size: 18px;\">2000 – 2004 美国路易斯维尔大学，计算机系，研究助理</span></p></li><li><p><span style=\"font-size: 18px;\">2000 武汉测绘科技大学，副高级工程师</span></p></li><li><p><span style=\"font-size: 18px;\">1997 – 2000 武汉测绘科技大学，网络中心，副主任</span></p></li><li><p><span style=\"font-size: 18px;\">1992 – 1997武汉测绘科技大学，设备处，工程师</span></p></li></ul><p><br/></p>'),(17,2,'崔晓辉','教授','xcui@whu.edu.cn ',1,10,0,1,'2017-11-17/5a0e50e29ab3d.png','<p><span style=\"font-size: 18px;\">基本信息</span></p><p><img src=\"http://www.wuhandaxue.com/Public/ueditor/themes/default/images/spacer.gif\" style=\"background:url(http://www.wuhandaxue.com/Public/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/zbsyk1001/Desktop/web/web/images/stories/cuixiaohui.jpg\"/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\"><span style=\"font-size: 18px;\"><span style=\"font-size: 24px;\">崔晓晖教授<br/>国际软件学院院长<br/>湖北省“百人计划”入选者</span><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔晓晖教授毕业于美国路易斯维尔大学，目前是经全球招聘后被选任的武汉大学国际软件学院院长。在此之前，崔教授在美国能源部橡树岭国家实验室任正研究员。同时还担任了美国路易斯维尔大学的讲座副教授，美国田纳西大学、纽约理工大学兼职教授等职务。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授长期从事计算机软件工程、集群智能以及高性能计算的理论与实践研究。崔教授领导团队用群集智能和图形加速器技术用于加速大规模城市交通模拟并进行大数据分析，该成果被用于美国多个部门采用。崔教授发展了异构型并行计算的编程模型和运行环境，提高了异构型集群并行计算的性能和能源利用效率。其成果被应用于对橡树岭实验室克雷XT5超级通用计算机，从而在2012年保住了橡树岭实验室世界最快计算机的称号。崔教授丰富的理论和项目经验可以为本项目的理论建模、方法设计、仿真系统开发提供指导。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授发表论文60多篇，其中SCI 6篇。曾承担美国5项国家重大项目，纵向课题费近300万，目前承担国家自然科学基金面上项目和湖北省自然基金重点项目各一项。崔教授是北美计算社会及组织科学协会，北美交通委员会会员，也长期担任美国国防部，能源部和空军等研究项目评委。他受邀或被遴选为国际会议报告人 50多次。崔教授的研究工作已被美国NBC电视台，时代自由周刊以及英国新科学家杂志等新闻媒体报道，并获得多个奖励，包括美国能源部杰出导师奖（2008，2009）、美国国家实验室特级贡献奖（2009），橡树岭国家实验室特别事件奖（2009)等。</span></p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">教育经历</span></h3><li><p><span style=\"font-size: 18px;\">2000/09 - 2004/06 美国路易斯维尔大学，计算机系,博士</span></p></li><li><p><span style=\"font-size: 18px;\">1997/09 -2000/06 武汉大学，计算机系，硕士</span></p></li><li><p><span style=\"font-size: 18px;\">1992/09 -1996/06 武汉测绘科技大学，光仪系，工学学士</span></p></li><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">工作经历</span></h3><li><p><span style=\"font-size: 18px;\">2013 －至今武汉大学国际软件学院院长</span></p></li><li><p><span style=\"font-size: 18px;\">2010 – 2013 美国能源部橡树岭国家实验室，计算数据分析部,研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2011 – 2013纽约理工大学，计算机系，院长助理（兼）</span></p></li><li><p><span style=\"font-size: 18px;\">2009 – 2012 路易斯维尔大学，计算机系， 副教授</span></p></li><li><p><span style=\"font-size: 18px;\">2006 – 2010 美国能源部橡树岭国家实验室， 应用软件工程部， 副研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2004 – 2006 美国能源部橡树岭国家实验室，博士后</span></p></li><li><p><span style=\"font-size: 18px;\">2000 – 2004 美国路易斯维尔大学，计算机系，研究助理</span></p></li><li><p><span style=\"font-size: 18px;\">2000 武汉测绘科技大学，副高级工程师</span></p></li><li><p><span style=\"font-size: 18px;\">1997 – 2000 武汉测绘科技大学，网络中心，副主任</span></p></li><li><p><span style=\"font-size: 18px;\">1992 – 1997武汉测绘科技大学，设备处，工程师</span></p></li></ul><p><br/></p>'),(18,2,'崔晓辉','教授','xcui@whu.edu.cn ',1,10,0,1,'2017-11-17/5a0e50e29ab3d.png','<p><span style=\"font-size: 18px;\">基本信息</span></p><p><img src=\"http://www.wuhandaxue.com/Public/ueditor/themes/default/images/spacer.gif\" style=\"background:url(http://www.wuhandaxue.com/Public/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/zbsyk1001/Desktop/web/web/images/stories/cuixiaohui.jpg\"/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\"><span style=\"font-size: 18px;\"><span style=\"font-size: 24px;\">崔晓晖教授<br/>国际软件学院院长<br/>湖北省“百人计划”入选者</span><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔晓晖教授毕业于美国路易斯维尔大学，目前是经全球招聘后被选任的武汉大学国际软件学院院长。在此之前，崔教授在美国能源部橡树岭国家实验室任正研究员。同时还担任了美国路易斯维尔大学的讲座副教授，美国田纳西大学、纽约理工大学兼职教授等职务。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授长期从事计算机软件工程、集群智能以及高性能计算的理论与实践研究。崔教授领导团队用群集智能和图形加速器技术用于加速大规模城市交通模拟并进行大数据分析，该成果被用于美国多个部门采用。崔教授发展了异构型并行计算的编程模型和运行环境，提高了异构型集群并行计算的性能和能源利用效率。其成果被应用于对橡树岭实验室克雷XT5超级通用计算机，从而在2012年保住了橡树岭实验室世界最快计算机的称号。崔教授丰富的理论和项目经验可以为本项目的理论建模、方法设计、仿真系统开发提供指导。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授发表论文60多篇，其中SCI 6篇。曾承担美国5项国家重大项目，纵向课题费近300万，目前承担国家自然科学基金面上项目和湖北省自然基金重点项目各一项。崔教授是北美计算社会及组织科学协会，北美交通委员会会员，也长期担任美国国防部，能源部和空军等研究项目评委。他受邀或被遴选为国际会议报告人 50多次。崔教授的研究工作已被美国NBC电视台，时代自由周刊以及英国新科学家杂志等新闻媒体报道，并获得多个奖励，包括美国能源部杰出导师奖（2008，2009）、美国国家实验室特级贡献奖（2009），橡树岭国家实验室特别事件奖（2009)等。</span></p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">教育经历</span></h3><li><p><span style=\"font-size: 18px;\">2000/09 - 2004/06 美国路易斯维尔大学，计算机系,博士</span></p></li><li><p><span style=\"font-size: 18px;\">1997/09 -2000/06 武汉大学，计算机系，硕士</span></p></li><li><p><span style=\"font-size: 18px;\">1992/09 -1996/06 武汉测绘科技大学，光仪系，工学学士</span></p></li><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">工作经历</span></h3><li><p><span style=\"font-size: 18px;\">2013 －至今武汉大学国际软件学院院长</span></p></li><li><p><span style=\"font-size: 18px;\">2010 – 2013 美国能源部橡树岭国家实验室，计算数据分析部,研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2011 – 2013纽约理工大学，计算机系，院长助理（兼）</span></p></li><li><p><span style=\"font-size: 18px;\">2009 – 2012 路易斯维尔大学，计算机系， 副教授</span></p></li><li><p><span style=\"font-size: 18px;\">2006 – 2010 美国能源部橡树岭国家实验室， 应用软件工程部， 副研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2004 – 2006 美国能源部橡树岭国家实验室，博士后</span></p></li><li><p><span style=\"font-size: 18px;\">2000 – 2004 美国路易斯维尔大学，计算机系，研究助理</span></p></li><li><p><span style=\"font-size: 18px;\">2000 武汉测绘科技大学，副高级工程师</span></p></li><li><p><span style=\"font-size: 18px;\">1997 – 2000 武汉测绘科技大学，网络中心，副主任</span></p></li><li><p><span style=\"font-size: 18px;\">1992 – 1997武汉测绘科技大学，设备处，工程师</span></p></li></ul><p><br/></p>'),(19,2,'崔晓辉','教授','xcui@whu.edu.cn ',1,10,0,1,'2017-11-17/5a0e50e29ab3d.png','<p><span style=\"font-size: 18px;\">基本信息</span></p><p><img src=\"http://www.wuhandaxue.com/Public/ueditor/themes/default/images/spacer.gif\" style=\"background:url(http://www.wuhandaxue.com/Public/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/zbsyk1001/Desktop/web/web/images/stories/cuixiaohui.jpg\"/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\"><span style=\"font-size: 18px;\"><span style=\"font-size: 24px;\">崔晓晖教授<br/>国际软件学院院长<br/>湖北省“百人计划”入选者</span><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔晓晖教授毕业于美国路易斯维尔大学，目前是经全球招聘后被选任的武汉大学国际软件学院院长。在此之前，崔教授在美国能源部橡树岭国家实验室任正研究员。同时还担任了美国路易斯维尔大学的讲座副教授，美国田纳西大学、纽约理工大学兼职教授等职务。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授长期从事计算机软件工程、集群智能以及高性能计算的理论与实践研究。崔教授领导团队用群集智能和图形加速器技术用于加速大规模城市交通模拟并进行大数据分析，该成果被用于美国多个部门采用。崔教授发展了异构型并行计算的编程模型和运行环境，提高了异构型集群并行计算的性能和能源利用效率。其成果被应用于对橡树岭实验室克雷XT5超级通用计算机，从而在2012年保住了橡树岭实验室世界最快计算机的称号。崔教授丰富的理论和项目经验可以为本项目的理论建模、方法设计、仿真系统开发提供指导。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授发表论文60多篇，其中SCI 6篇。曾承担美国5项国家重大项目，纵向课题费近300万，目前承担国家自然科学基金面上项目和湖北省自然基金重点项目各一项。崔教授是北美计算社会及组织科学协会，北美交通委员会会员，也长期担任美国国防部，能源部和空军等研究项目评委。他受邀或被遴选为国际会议报告人 50多次。崔教授的研究工作已被美国NBC电视台，时代自由周刊以及英国新科学家杂志等新闻媒体报道，并获得多个奖励，包括美国能源部杰出导师奖（2008，2009）、美国国家实验室特级贡献奖（2009），橡树岭国家实验室特别事件奖（2009)等。</span></p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">教育经历</span></h3><li><p><span style=\"font-size: 18px;\">2000/09 - 2004/06 美国路易斯维尔大学，计算机系,博士</span></p></li><li><p><span style=\"font-size: 18px;\">1997/09 -2000/06 武汉大学，计算机系，硕士</span></p></li><li><p><span style=\"font-size: 18px;\">1992/09 -1996/06 武汉测绘科技大学，光仪系，工学学士</span></p></li><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">工作经历</span></h3><li><p><span style=\"font-size: 18px;\">2013 －至今武汉大学国际软件学院院长</span></p></li><li><p><span style=\"font-size: 18px;\">2010 – 2013 美国能源部橡树岭国家实验室，计算数据分析部,研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2011 – 2013纽约理工大学，计算机系，院长助理（兼）</span></p></li><li><p><span style=\"font-size: 18px;\">2009 – 2012 路易斯维尔大学，计算机系， 副教授</span></p></li><li><p><span style=\"font-size: 18px;\">2006 – 2010 美国能源部橡树岭国家实验室， 应用软件工程部， 副研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2004 – 2006 美国能源部橡树岭国家实验室，博士后</span></p></li><li><p><span style=\"font-size: 18px;\">2000 – 2004 美国路易斯维尔大学，计算机系，研究助理</span></p></li><li><p><span style=\"font-size: 18px;\">2000 武汉测绘科技大学，副高级工程师</span></p></li><li><p><span style=\"font-size: 18px;\">1997 – 2000 武汉测绘科技大学，网络中心，副主任</span></p></li><li><p><span style=\"font-size: 18px;\">1992 – 1997武汉测绘科技大学，设备处，工程师</span></p></li></ul><p><br/></p>'),(20,2,'崔晓辉','教授','xcui@whu.edu.cn ',1,10,0,1,'2017-11-17/5a0e50e29ab3d.png','<p><span style=\"font-size: 18px;\">基本信息</span></p><p><img src=\"http://www.wuhandaxue.com/Public/ueditor/themes/default/images/spacer.gif\" style=\"background:url(http://www.wuhandaxue.com/Public/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/zbsyk1001/Desktop/web/web/images/stories/cuixiaohui.jpg\"/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\"><span style=\"font-size: 18px;\"><span style=\"font-size: 24px;\">崔晓晖教授<br/>国际软件学院院长<br/>湖北省“百人计划”入选者</span><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔晓晖教授毕业于美国路易斯维尔大学，目前是经全球招聘后被选任的武汉大学国际软件学院院长。在此之前，崔教授在美国能源部橡树岭国家实验室任正研究员。同时还担任了美国路易斯维尔大学的讲座副教授，美国田纳西大学、纽约理工大学兼职教授等职务。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授长期从事计算机软件工程、集群智能以及高性能计算的理论与实践研究。崔教授领导团队用群集智能和图形加速器技术用于加速大规模城市交通模拟并进行大数据分析，该成果被用于美国多个部门采用。崔教授发展了异构型并行计算的编程模型和运行环境，提高了异构型集群并行计算的性能和能源利用效率。其成果被应用于对橡树岭实验室克雷XT5超级通用计算机，从而在2012年保住了橡树岭实验室世界最快计算机的称号。崔教授丰富的理论和项目经验可以为本项目的理论建模、方法设计、仿真系统开发提供指导。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授发表论文60多篇，其中SCI 6篇。曾承担美国5项国家重大项目，纵向课题费近300万，目前承担国家自然科学基金面上项目和湖北省自然基金重点项目各一项。崔教授是北美计算社会及组织科学协会，北美交通委员会会员，也长期担任美国国防部，能源部和空军等研究项目评委。他受邀或被遴选为国际会议报告人 50多次。崔教授的研究工作已被美国NBC电视台，时代自由周刊以及英国新科学家杂志等新闻媒体报道，并获得多个奖励，包括美国能源部杰出导师奖（2008，2009）、美国国家实验室特级贡献奖（2009），橡树岭国家实验室特别事件奖（2009)等。</span></p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">教育经历</span></h3><li><p><span style=\"font-size: 18px;\">2000/09 - 2004/06 美国路易斯维尔大学，计算机系,博士</span></p></li><li><p><span style=\"font-size: 18px;\">1997/09 -2000/06 武汉大学，计算机系，硕士</span></p></li><li><p><span style=\"font-size: 18px;\">1992/09 -1996/06 武汉测绘科技大学，光仪系，工学学士</span></p></li><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">工作经历</span></h3><li><p><span style=\"font-size: 18px;\">2013 －至今武汉大学国际软件学院院长</span></p></li><li><p><span style=\"font-size: 18px;\">2010 – 2013 美国能源部橡树岭国家实验室，计算数据分析部,研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2011 – 2013纽约理工大学，计算机系，院长助理（兼）</span></p></li><li><p><span style=\"font-size: 18px;\">2009 – 2012 路易斯维尔大学，计算机系， 副教授</span></p></li><li><p><span style=\"font-size: 18px;\">2006 – 2010 美国能源部橡树岭国家实验室， 应用软件工程部， 副研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2004 – 2006 美国能源部橡树岭国家实验室，博士后</span></p></li><li><p><span style=\"font-size: 18px;\">2000 – 2004 美国路易斯维尔大学，计算机系，研究助理</span></p></li><li><p><span style=\"font-size: 18px;\">2000 武汉测绘科技大学，副高级工程师</span></p></li><li><p><span style=\"font-size: 18px;\">1997 – 2000 武汉测绘科技大学，网络中心，副主任</span></p></li><li><p><span style=\"font-size: 18px;\">1992 – 1997武汉测绘科技大学，设备处，工程师</span></p></li></ul><p><br/></p>'),(21,2,'崔晓辉','教授','xcui@whu.edu.cn ',1,10,0,1,'2017-11-17/5a0e50e29ab3d.png','<p><span style=\"font-size: 18px;\">基本信息</span></p><p><img src=\"http://www.wuhandaxue.com/Public/ueditor/themes/default/images/spacer.gif\" style=\"background:url(http://www.wuhandaxue.com/Public/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/zbsyk1001/Desktop/web/web/images/stories/cuixiaohui.jpg\"/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\"><span style=\"font-size: 18px;\"><span style=\"font-size: 24px;\">崔晓晖教授<br/>国际软件学院院长<br/>湖北省“百人计划”入选者</span><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔晓晖教授毕业于美国路易斯维尔大学，目前是经全球招聘后被选任的武汉大学国际软件学院院长。在此之前，崔教授在美国能源部橡树岭国家实验室任正研究员。同时还担任了美国路易斯维尔大学的讲座副教授，美国田纳西大学、纽约理工大学兼职教授等职务。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授长期从事计算机软件工程、集群智能以及高性能计算的理论与实践研究。崔教授领导团队用群集智能和图形加速器技术用于加速大规模城市交通模拟并进行大数据分析，该成果被用于美国多个部门采用。崔教授发展了异构型并行计算的编程模型和运行环境，提高了异构型集群并行计算的性能和能源利用效率。其成果被应用于对橡树岭实验室克雷XT5超级通用计算机，从而在2012年保住了橡树岭实验室世界最快计算机的称号。崔教授丰富的理论和项目经验可以为本项目的理论建模、方法设计、仿真系统开发提供指导。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授发表论文60多篇，其中SCI 6篇。曾承担美国5项国家重大项目，纵向课题费近300万，目前承担国家自然科学基金面上项目和湖北省自然基金重点项目各一项。崔教授是北美计算社会及组织科学协会，北美交通委员会会员，也长期担任美国国防部，能源部和空军等研究项目评委。他受邀或被遴选为国际会议报告人 50多次。崔教授的研究工作已被美国NBC电视台，时代自由周刊以及英国新科学家杂志等新闻媒体报道，并获得多个奖励，包括美国能源部杰出导师奖（2008，2009）、美国国家实验室特级贡献奖（2009），橡树岭国家实验室特别事件奖（2009)等。</span></p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">教育经历</span></h3><li><p><span style=\"font-size: 18px;\">2000/09 - 2004/06 美国路易斯维尔大学，计算机系,博士</span></p></li><li><p><span style=\"font-size: 18px;\">1997/09 -2000/06 武汉大学，计算机系，硕士</span></p></li><li><p><span style=\"font-size: 18px;\">1992/09 -1996/06 武汉测绘科技大学，光仪系，工学学士</span></p></li><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">工作经历</span></h3><li><p><span style=\"font-size: 18px;\">2013 －至今武汉大学国际软件学院院长</span></p></li><li><p><span style=\"font-size: 18px;\">2010 – 2013 美国能源部橡树岭国家实验室，计算数据分析部,研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2011 – 2013纽约理工大学，计算机系，院长助理（兼）</span></p></li><li><p><span style=\"font-size: 18px;\">2009 – 2012 路易斯维尔大学，计算机系， 副教授</span></p></li><li><p><span style=\"font-size: 18px;\">2006 – 2010 美国能源部橡树岭国家实验室， 应用软件工程部， 副研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2004 – 2006 美国能源部橡树岭国家实验室，博士后</span></p></li><li><p><span style=\"font-size: 18px;\">2000 – 2004 美国路易斯维尔大学，计算机系，研究助理</span></p></li><li><p><span style=\"font-size: 18px;\">2000 武汉测绘科技大学，副高级工程师</span></p></li><li><p><span style=\"font-size: 18px;\">1997 – 2000 武汉测绘科技大学，网络中心，副主任</span></p></li><li><p><span style=\"font-size: 18px;\">1992 – 1997武汉测绘科技大学，设备处，工程师</span></p></li></ul><p><br/></p>'),(22,3,'崔晓辉','教授','xcui@whu.edu.cn ',1,10,0,0,'2018-06-19/5b28a83737383.jpg','<p><span style=\"font-size: 18px;\">基本信息</span></p><p><img src=\"http://www.wuhandaxue.com/Public/ueditor/themes/default/images/spacer.gif\" style=\"background:url(http://www.wuhandaxue.com/Public/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/zbsyk1001/Desktop/web/web/images/stories/cuixiaohui.jpg\"/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\"><span style=\"font-size: 18px;\"><span style=\"font-size: 24px;\">崔晓晖教授<br/>国际软件学院院长<br/>湖北省“百人计划”入选者</span><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔晓晖教授毕业于美国路易斯维尔大学，目前是经全球招聘后被选任的武汉大学国际软件学院院长。在此之前，崔教授在美国能源部橡树岭国家实验室任正研究员。同时还担任了美国路易斯维尔大学的讲座副教授，美国田纳西大学、纽约理工大学兼职教授等职务。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授长期从事计算机软件工程、集群智能以及高性能计算的理论与实践研究。崔教授领导团队用群集智能和图形加速器技术用于加速大规模城市交通模拟并进行大数据分析，该成果被用于美国多个部门采用。崔教授发展了异构型并行计算的编程模型和运行环境，提高了异构型集群并行计算的性能和能源利用效率。其成果被应用于对橡树岭实验室克雷XT5超级通用计算机，从而在2012年保住了橡树岭实验室世界最快计算机的称号。崔教授丰富的理论和项目经验可以为本项目的理论建模、方法设计、仿真系统开发提供指导。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授发表论文60多篇，其中SCI 6篇。曾承担美国5项国家重大项目，纵向课题费近300万，目前承担国家自然科学基金面上项目和湖北省自然基金重点项目各一项。崔教授是北美计算社会及组织科学协会，北美交通委员会会员，也长期担任美国国防部，能源部和空军等研究项目评委。他受邀或被遴选为国际会议报告人 50多次。崔教授的研究工作已被美国NBC电视台，时代自由周刊以及英国新科学家杂志等新闻媒体报道，并获得多个奖励，包括美国能源部杰出导师奖（2008，2009）、美国国家实验室特级贡献奖（2009），橡树岭国家实验室特别事件奖（2009)等。</span></p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">教育经历</span></h3><li><p><span style=\"font-size: 18px;\">2000/09 - 2004/06 美国路易斯维尔大学，计算机系,博士</span></p></li><li><p><span style=\"font-size: 18px;\">1997/09 -2000/06 武汉大学，计算机系，硕士</span></p></li><li><p><span style=\"font-size: 18px;\">1992/09 -1996/06 武汉测绘科技大学，光仪系，工学学士</span></p></li><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">工作经历</span></h3><li><p><span style=\"font-size: 18px;\">2013 －至今武汉大学国际软件学院院长</span></p></li><li><p><span style=\"font-size: 18px;\">2010 – 2013 美国能源部橡树岭国家实验室，计算数据分析部,研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2011 – 2013纽约理工大学，计算机系，院长助理（兼）</span></p></li><li><p><span style=\"font-size: 18px;\">2009 – 2012 路易斯维尔大学，计算机系， 副教授</span></p></li><li><p><span style=\"font-size: 18px;\">2006 – 2010 美国能源部橡树岭国家实验室， 应用软件工程部， 副研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2004 – 2006 美国能源部橡树岭国家实验室，博士后</span></p></li><li><p><span style=\"font-size: 18px;\">2000 – 2004 美国路易斯维尔大学，计算机系，研究助理</span></p></li><li><p><span style=\"font-size: 18px;\">2000 武汉测绘科技大学，副高级工程师</span></p></li><li><p><span style=\"font-size: 18px;\">1997 – 2000 武汉测绘科技大学，网络中心，副主任</span></p></li><li><p><span style=\"font-size: 18px;\">1992 – 1997武汉测绘科技大学，设备处，工程师</span></p></li></ul><p><br/></p>'),(23,3,'崔晓辉','教授','xcui@whu.edu.cn ',1,10,0,0,'2017-11-17/5a0e50e29ab3d.png','<p><span style=\"font-size: 18px;\">基本信息</span></p><p><img src=\"http://www.wuhandaxue.com/Public/ueditor/themes/default/images/spacer.gif\" style=\"background:url(http://www.wuhandaxue.com/Public/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/zbsyk1001/Desktop/web/web/images/stories/cuixiaohui.jpg\"/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\"><span style=\"font-size: 18px;\"><span style=\"font-size: 24px;\">崔晓晖教授<br/>国际软件学院院长<br/>湖北省“百人计划”入选者</span><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔晓晖教授毕业于美国路易斯维尔大学，目前是经全球招聘后被选任的武汉大学国际软件学院院长。在此之前，崔教授在美国能源部橡树岭国家实验室任正研究员。同时还担任了美国路易斯维尔大学的讲座副教授，美国田纳西大学、纽约理工大学兼职教授等职务。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授长期从事计算机软件工程、集群智能以及高性能计算的理论与实践研究。崔教授领导团队用群集智能和图形加速器技术用于加速大规模城市交通模拟并进行大数据分析，该成果被用于美国多个部门采用。崔教授发展了异构型并行计算的编程模型和运行环境，提高了异构型集群并行计算的性能和能源利用效率。其成果被应用于对橡树岭实验室克雷XT5超级通用计算机，从而在2012年保住了橡树岭实验室世界最快计算机的称号。崔教授丰富的理论和项目经验可以为本项目的理论建模、方法设计、仿真系统开发提供指导。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授发表论文60多篇，其中SCI 6篇。曾承担美国5项国家重大项目，纵向课题费近300万，目前承担国家自然科学基金面上项目和湖北省自然基金重点项目各一项。崔教授是北美计算社会及组织科学协会，北美交通委员会会员，也长期担任美国国防部，能源部和空军等研究项目评委。他受邀或被遴选为国际会议报告人 50多次。崔教授的研究工作已被美国NBC电视台，时代自由周刊以及英国新科学家杂志等新闻媒体报道，并获得多个奖励，包括美国能源部杰出导师奖（2008，2009）、美国国家实验室特级贡献奖（2009），橡树岭国家实验室特别事件奖（2009)等。</span></p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">教育经历</span></h3><li><p><span style=\"font-size: 18px;\">2000/09 - 2004/06 美国路易斯维尔大学，计算机系,博士</span></p></li><li><p><span style=\"font-size: 18px;\">1997/09 -2000/06 武汉大学，计算机系，硕士</span></p></li><li><p><span style=\"font-size: 18px;\">1992/09 -1996/06 武汉测绘科技大学，光仪系，工学学士</span></p></li><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">工作经历</span></h3><li><p><span style=\"font-size: 18px;\">2013 －至今武汉大学国际软件学院院长</span></p></li><li><p><span style=\"font-size: 18px;\">2010 – 2013 美国能源部橡树岭国家实验室，计算数据分析部,研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2011 – 2013纽约理工大学，计算机系，院长助理（兼）</span></p></li><li><p><span style=\"font-size: 18px;\">2009 – 2012 路易斯维尔大学，计算机系， 副教授</span></p></li><li><p><span style=\"font-size: 18px;\">2006 – 2010 美国能源部橡树岭国家实验室， 应用软件工程部， 副研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2004 – 2006 美国能源部橡树岭国家实验室，博士后</span></p></li><li><p><span style=\"font-size: 18px;\">2000 – 2004 美国路易斯维尔大学，计算机系，研究助理</span></p></li><li><p><span style=\"font-size: 18px;\">2000 武汉测绘科技大学，副高级工程师</span></p></li><li><p><span style=\"font-size: 18px;\">1997 – 2000 武汉测绘科技大学，网络中心，副主任</span></p></li><li><p><span style=\"font-size: 18px;\">1992 – 1997武汉测绘科技大学，设备处，工程师</span></p></li></ul><p><br/></p>'),(24,3,'崔晓辉','教授','xcui@whu.edu.cn ',1,10,0,0,'2017-11-17/5a0e50e29ab3d.png','<p><span style=\"font-size: 18px;\">基本信息</span></p><p><img src=\"http://www.wuhandaxue.com/Public/ueditor/themes/default/images/spacer.gif\" style=\"background:url(http://www.wuhandaxue.com/Public/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/zbsyk1001/Desktop/web/web/images/stories/cuixiaohui.jpg\"/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\"><span style=\"font-size: 18px;\"><span style=\"font-size: 24px;\">崔晓晖教授<br/>国际软件学院院长<br/>湖北省“百人计划”入选者</span><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔晓晖教授毕业于美国路易斯维尔大学，目前是经全球招聘后被选任的武汉大学国际软件学院院长。在此之前，崔教授在美国能源部橡树岭国家实验室任正研究员。同时还担任了美国路易斯维尔大学的讲座副教授，美国田纳西大学、纽约理工大学兼职教授等职务。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授长期从事计算机软件工程、集群智能以及高性能计算的理论与实践研究。崔教授领导团队用群集智能和图形加速器技术用于加速大规模城市交通模拟并进行大数据分析，该成果被用于美国多个部门采用。崔教授发展了异构型并行计算的编程模型和运行环境，提高了异构型集群并行计算的性能和能源利用效率。其成果被应用于对橡树岭实验室克雷XT5超级通用计算机，从而在2012年保住了橡树岭实验室世界最快计算机的称号。崔教授丰富的理论和项目经验可以为本项目的理论建模、方法设计、仿真系统开发提供指导。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授发表论文60多篇，其中SCI 6篇。曾承担美国5项国家重大项目，纵向课题费近300万，目前承担国家自然科学基金面上项目和湖北省自然基金重点项目各一项。崔教授是北美计算社会及组织科学协会，北美交通委员会会员，也长期担任美国国防部，能源部和空军等研究项目评委。他受邀或被遴选为国际会议报告人 50多次。崔教授的研究工作已被美国NBC电视台，时代自由周刊以及英国新科学家杂志等新闻媒体报道，并获得多个奖励，包括美国能源部杰出导师奖（2008，2009）、美国国家实验室特级贡献奖（2009），橡树岭国家实验室特别事件奖（2009)等。</span></p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">教育经历</span></h3><li><p><span style=\"font-size: 18px;\">2000/09 - 2004/06 美国路易斯维尔大学，计算机系,博士</span></p></li><li><p><span style=\"font-size: 18px;\">1997/09 -2000/06 武汉大学，计算机系，硕士</span></p></li><li><p><span style=\"font-size: 18px;\">1992/09 -1996/06 武汉测绘科技大学，光仪系，工学学士</span></p></li><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">工作经历</span></h3><li><p><span style=\"font-size: 18px;\">2013 －至今武汉大学国际软件学院院长</span></p></li><li><p><span style=\"font-size: 18px;\">2010 – 2013 美国能源部橡树岭国家实验室，计算数据分析部,研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2011 – 2013纽约理工大学，计算机系，院长助理（兼）</span></p></li><li><p><span style=\"font-size: 18px;\">2009 – 2012 路易斯维尔大学，计算机系， 副教授</span></p></li><li><p><span style=\"font-size: 18px;\">2006 – 2010 美国能源部橡树岭国家实验室， 应用软件工程部， 副研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2004 – 2006 美国能源部橡树岭国家实验室，博士后</span></p></li><li><p><span style=\"font-size: 18px;\">2000 – 2004 美国路易斯维尔大学，计算机系，研究助理</span></p></li><li><p><span style=\"font-size: 18px;\">2000 武汉测绘科技大学，副高级工程师</span></p></li><li><p><span style=\"font-size: 18px;\">1997 – 2000 武汉测绘科技大学，网络中心，副主任</span></p></li><li><p><span style=\"font-size: 18px;\">1992 – 1997武汉测绘科技大学，设备处，工程师</span></p></li></ul><p><br/></p>'),(25,3,'崔晓辉','教授','xcui@whu.edu.cn ',1,10,0,0,'2017-11-17/5a0e50e29ab3d.png','<p><span style=\"font-size: 18px;\">基本信息</span></p><p><img src=\"http://www.wuhandaxue.com/Public/ueditor/themes/default/images/spacer.gif\" style=\"background:url(http://www.wuhandaxue.com/Public/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/zbsyk1001/Desktop/web/web/images/stories/cuixiaohui.jpg\"/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\"><span style=\"font-size: 18px;\"><span style=\"font-size: 24px;\">崔晓晖教授<br/>国际软件学院院长<br/>湖北省“百人计划”入选者</span><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔晓晖教授毕业于美国路易斯维尔大学，目前是经全球招聘后被选任的武汉大学国际软件学院院长。在此之前，崔教授在美国能源部橡树岭国家实验室任正研究员。同时还担任了美国路易斯维尔大学的讲座副教授，美国田纳西大学、纽约理工大学兼职教授等职务。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授长期从事计算机软件工程、集群智能以及高性能计算的理论与实践研究。崔教授领导团队用群集智能和图形加速器技术用于加速大规模城市交通模拟并进行大数据分析，该成果被用于美国多个部门采用。崔教授发展了异构型并行计算的编程模型和运行环境，提高了异构型集群并行计算的性能和能源利用效率。其成果被应用于对橡树岭实验室克雷XT5超级通用计算机，从而在2012年保住了橡树岭实验室世界最快计算机的称号。崔教授丰富的理论和项目经验可以为本项目的理论建模、方法设计、仿真系统开发提供指导。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授发表论文60多篇，其中SCI 6篇。曾承担美国5项国家重大项目，纵向课题费近300万，目前承担国家自然科学基金面上项目和湖北省自然基金重点项目各一项。崔教授是北美计算社会及组织科学协会，北美交通委员会会员，也长期担任美国国防部，能源部和空军等研究项目评委。他受邀或被遴选为国际会议报告人 50多次。崔教授的研究工作已被美国NBC电视台，时代自由周刊以及英国新科学家杂志等新闻媒体报道，并获得多个奖励，包括美国能源部杰出导师奖（2008，2009）、美国国家实验室特级贡献奖（2009），橡树岭国家实验室特别事件奖（2009)等。</span></p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">教育经历</span></h3><li><p><span style=\"font-size: 18px;\">2000/09 - 2004/06 美国路易斯维尔大学，计算机系,博士</span></p></li><li><p><span style=\"font-size: 18px;\">1997/09 -2000/06 武汉大学，计算机系，硕士</span></p></li><li><p><span style=\"font-size: 18px;\">1992/09 -1996/06 武汉测绘科技大学，光仪系，工学学士</span></p></li><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">工作经历</span></h3><li><p><span style=\"font-size: 18px;\">2013 －至今武汉大学国际软件学院院长</span></p></li><li><p><span style=\"font-size: 18px;\">2010 – 2013 美国能源部橡树岭国家实验室，计算数据分析部,研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2011 – 2013纽约理工大学，计算机系，院长助理（兼）</span></p></li><li><p><span style=\"font-size: 18px;\">2009 – 2012 路易斯维尔大学，计算机系， 副教授</span></p></li><li><p><span style=\"font-size: 18px;\">2006 – 2010 美国能源部橡树岭国家实验室， 应用软件工程部， 副研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2004 – 2006 美国能源部橡树岭国家实验室，博士后</span></p></li><li><p><span style=\"font-size: 18px;\">2000 – 2004 美国路易斯维尔大学，计算机系，研究助理</span></p></li><li><p><span style=\"font-size: 18px;\">2000 武汉测绘科技大学，副高级工程师</span></p></li><li><p><span style=\"font-size: 18px;\">1997 – 2000 武汉测绘科技大学，网络中心，副主任</span></p></li><li><p><span style=\"font-size: 18px;\">1992 – 1997武汉测绘科技大学，设备处，工程师</span></p></li></ul><p><br/></p>'),(26,3,'崔晓辉','教授','xcui@whu.edu.cn ',1,10,0,0,'2017-11-17/5a0e50e29ab3d.png','<p><span style=\"font-size: 18px;\">基本信息</span></p><p><img src=\"http://www.wuhandaxue.com/Public/ueditor/themes/default/images/spacer.gif\" style=\"background:url(http://www.wuhandaxue.com/Public/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/zbsyk1001/Desktop/web/web/images/stories/cuixiaohui.jpg\"/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\"><span style=\"font-size: 18px;\"><span style=\"font-size: 24px;\">崔晓晖教授<br/>国际软件学院院长<br/>湖北省“百人计划”入选者</span><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔晓晖教授毕业于美国路易斯维尔大学，目前是经全球招聘后被选任的武汉大学国际软件学院院长。在此之前，崔教授在美国能源部橡树岭国家实验室任正研究员。同时还担任了美国路易斯维尔大学的讲座副教授，美国田纳西大学、纽约理工大学兼职教授等职务。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授长期从事计算机软件工程、集群智能以及高性能计算的理论与实践研究。崔教授领导团队用群集智能和图形加速器技术用于加速大规模城市交通模拟并进行大数据分析，该成果被用于美国多个部门采用。崔教授发展了异构型并行计算的编程模型和运行环境，提高了异构型集群并行计算的性能和能源利用效率。其成果被应用于对橡树岭实验室克雷XT5超级通用计算机，从而在2012年保住了橡树岭实验室世界最快计算机的称号。崔教授丰富的理论和项目经验可以为本项目的理论建模、方法设计、仿真系统开发提供指导。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授发表论文60多篇，其中SCI 6篇。曾承担美国5项国家重大项目，纵向课题费近300万，目前承担国家自然科学基金面上项目和湖北省自然基金重点项目各一项。崔教授是北美计算社会及组织科学协会，北美交通委员会会员，也长期担任美国国防部，能源部和空军等研究项目评委。他受邀或被遴选为国际会议报告人 50多次。崔教授的研究工作已被美国NBC电视台，时代自由周刊以及英国新科学家杂志等新闻媒体报道，并获得多个奖励，包括美国能源部杰出导师奖（2008，2009）、美国国家实验室特级贡献奖（2009），橡树岭国家实验室特别事件奖（2009)等。</span></p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">教育经历</span></h3><li><p><span style=\"font-size: 18px;\">2000/09 - 2004/06 美国路易斯维尔大学，计算机系,博士</span></p></li><li><p><span style=\"font-size: 18px;\">1997/09 -2000/06 武汉大学，计算机系，硕士</span></p></li><li><p><span style=\"font-size: 18px;\">1992/09 -1996/06 武汉测绘科技大学，光仪系，工学学士</span></p></li><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">工作经历</span></h3><li><p><span style=\"font-size: 18px;\">2013 －至今武汉大学国际软件学院院长</span></p></li><li><p><span style=\"font-size: 18px;\">2010 – 2013 美国能源部橡树岭国家实验室，计算数据分析部,研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2011 – 2013纽约理工大学，计算机系，院长助理（兼）</span></p></li><li><p><span style=\"font-size: 18px;\">2009 – 2012 路易斯维尔大学，计算机系， 副教授</span></p></li><li><p><span style=\"font-size: 18px;\">2006 – 2010 美国能源部橡树岭国家实验室， 应用软件工程部， 副研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2004 – 2006 美国能源部橡树岭国家实验室，博士后</span></p></li><li><p><span style=\"font-size: 18px;\">2000 – 2004 美国路易斯维尔大学，计算机系，研究助理</span></p></li><li><p><span style=\"font-size: 18px;\">2000 武汉测绘科技大学，副高级工程师</span></p></li><li><p><span style=\"font-size: 18px;\">1997 – 2000 武汉测绘科技大学，网络中心，副主任</span></p></li><li><p><span style=\"font-size: 18px;\">1992 – 1997武汉测绘科技大学，设备处，工程师</span></p></li></ul><p><br/></p>'),(27,3,'崔晓辉','教授','xcui@whu.edu.cn ',1,10,0,0,'2017-11-17/5a0e50e29ab3d.png','<p><span style=\"font-size: 18px;\">基本信息</span></p><p><img src=\"http://www.wuhandaxue.com/Public/ueditor/themes/default/images/spacer.gif\" style=\"background:url(http://www.wuhandaxue.com/Public/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/zbsyk1001/Desktop/web/web/images/stories/cuixiaohui.jpg\"/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\"><span style=\"font-size: 18px;\"><span style=\"font-size: 24px;\">崔晓晖教授<br/>国际软件学院院长<br/>湖北省“百人计划”入选者</span><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔晓晖教授毕业于美国路易斯维尔大学，目前是经全球招聘后被选任的武汉大学国际软件学院院长。在此之前，崔教授在美国能源部橡树岭国家实验室任正研究员。同时还担任了美国路易斯维尔大学的讲座副教授，美国田纳西大学、纽约理工大学兼职教授等职务。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授长期从事计算机软件工程、集群智能以及高性能计算的理论与实践研究。崔教授领导团队用群集智能和图形加速器技术用于加速大规模城市交通模拟并进行大数据分析，该成果被用于美国多个部门采用。崔教授发展了异构型并行计算的编程模型和运行环境，提高了异构型集群并行计算的性能和能源利用效率。其成果被应用于对橡树岭实验室克雷XT5超级通用计算机，从而在2012年保住了橡树岭实验室世界最快计算机的称号。崔教授丰富的理论和项目经验可以为本项目的理论建模、方法设计、仿真系统开发提供指导。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授发表论文60多篇，其中SCI 6篇。曾承担美国5项国家重大项目，纵向课题费近300万，目前承担国家自然科学基金面上项目和湖北省自然基金重点项目各一项。崔教授是北美计算社会及组织科学协会，北美交通委员会会员，也长期担任美国国防部，能源部和空军等研究项目评委。他受邀或被遴选为国际会议报告人 50多次。崔教授的研究工作已被美国NBC电视台，时代自由周刊以及英国新科学家杂志等新闻媒体报道，并获得多个奖励，包括美国能源部杰出导师奖（2008，2009）、美国国家实验室特级贡献奖（2009），橡树岭国家实验室特别事件奖（2009)等。</span></p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">教育经历</span></h3><li><p><span style=\"font-size: 18px;\">2000/09 - 2004/06 美国路易斯维尔大学，计算机系,博士</span></p></li><li><p><span style=\"font-size: 18px;\">1997/09 -2000/06 武汉大学，计算机系，硕士</span></p></li><li><p><span style=\"font-size: 18px;\">1992/09 -1996/06 武汉测绘科技大学，光仪系，工学学士</span></p></li><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">工作经历</span></h3><li><p><span style=\"font-size: 18px;\">2013 －至今武汉大学国际软件学院院长</span></p></li><li><p><span style=\"font-size: 18px;\">2010 – 2013 美国能源部橡树岭国家实验室，计算数据分析部,研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2011 – 2013纽约理工大学，计算机系，院长助理（兼）</span></p></li><li><p><span style=\"font-size: 18px;\">2009 – 2012 路易斯维尔大学，计算机系， 副教授</span></p></li><li><p><span style=\"font-size: 18px;\">2006 – 2010 美国能源部橡树岭国家实验室， 应用软件工程部， 副研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2004 – 2006 美国能源部橡树岭国家实验室，博士后</span></p></li><li><p><span style=\"font-size: 18px;\">2000 – 2004 美国路易斯维尔大学，计算机系，研究助理</span></p></li><li><p><span style=\"font-size: 18px;\">2000 武汉测绘科技大学，副高级工程师</span></p></li><li><p><span style=\"font-size: 18px;\">1997 – 2000 武汉测绘科技大学，网络中心，副主任</span></p></li><li><p><span style=\"font-size: 18px;\">1992 – 1997武汉测绘科技大学，设备处，工程师</span></p></li></ul><p><br/></p>');

#
# Structure for table "e_ketype"
#

CREATE TABLE `e_ketype` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `title` varchar(255) DEFAULT NULL,
  `img` varchar(255) DEFAULT NULL,
  `is_show` int(255) DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=9 DEFAULT CHARSET=utf8 COMMENT='武汉大学课程类别';

#
# Data for table "e_ketype"
#

INSERT INTO `e_ketype` VALUES (1,'Java Web就业实战课程','Java Web遵循J2EE企业应用开发规范,在互联网业务,企业信息建设,网站建设, 通信协议,服务化, 分布式应用,大数据处理都用着广泛的应用。国内很多大型的互联网公司BAT等都深度的使用JAVA技术。','2018-06-19/5b28f66f6e537.png',1),(2,'Java语法基础课程','Java是全球最流行的开发语言,Tiobe排行榜稳居榜首,语言跨平台,自动回收内存,语言与C,C++相近,入门简单,JAVA也是Android首选开发语言,在全球各大公司谷歌,亚马逊,阿里, 百度,京东都用着广泛的使用。','2018-06-19/5b28f6df74227.png',1);

#
# Structure for table "e_lannouncement"
#

CREATE TABLE `e_lannouncement` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `img` varchar(255) NOT NULL,
  `title` varchar(255) NOT NULL COMMENT '标题',
  `content` text NOT NULL,
  `create` int(20) NOT NULL,
  `is_show` int(2) NOT NULL DEFAULT '1' COMMENT '1  显示  0 不显示',
  `view` int(50) NOT NULL DEFAULT '1',
  `is_s` int(2) NOT NULL DEFAULT '0',
  `sort` int(10) NOT NULL DEFAULT '10',
  `zz` varchar(255) DEFAULT NULL,
  `ly` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`,`sort`)
) ENGINE=MyISAM AUTO_INCREMENT=18 DEFAULT CHARSET=utf8 COMMENT='武汉大学新闻';

#
# Data for table "e_lannouncement"
#

INSERT INTO `e_lannouncement` VALUES (9,'2018-06-20/5b2a391b14af4.png','java中静态String的最大长度由什么决定的？','<h3 id=\"h3-string-\" style=\"box-sizing: border-box; margin-right: 0px; margin-bottom: 16px; margin-left: 0px; font-size: 1.5em; position: relative; line-height: 1.43; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal; margin-top: 0px !important;\">String最大长度</h3><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">本文参考：</p><blockquote style=\"box-sizing: border-box; margin: 0px 0px 16px; padding: 0px 15px 0px 20px; border-left: 4px solid rgb(221, 221, 221); font-family: Georgia, &quot;Times New Roman&quot;, Times, Kai, &quot;Kaiti SC&quot;, KaiTi, BiauKai, FontAwesome, serif; color: rgb(102, 102, 102); font-size: 14px; font-style: italic; white-space: normal;\"><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><a href=\"http://blog.csdn.net/roland_sun/article/details/46716965\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-decoration-line: none; color: rgb(65, 131, 196);\">http://blog.csdn.net/roland_sun/article/details/46716965</a><br style=\"box-sizing: border-box;\"/><a href=\"http://denverj.iteye.com/blog/1210979\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-decoration-line: none; color: rgb(65, 131, 196);\">http://denverj.iteye.com/blog/1210979</a>&nbsp;<br style=\"box-sizing: border-box;\"/><a href=\"http://www.blogjava.net/DLevin/archive/2011/09/05/358033.html\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-decoration-line: none; color: rgb(65, 131, 196);\">http://www.blogjava.net/DLevin/archive/2011/09/05/358033.html</a></p></blockquote><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">今天碰到一个字符串长度过长的报错，然后仔细去查了一下发现字符串常量的长度已经到达8万了，结果还没运行直接给我丢出来个长度过长的错，因此去查了一下资料为什么会出现这个错误。</p><ul style=\"box-sizing: border-box; margin-bottom: 16px; padding: 0px 0px 0px 2em; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\" class=\" list-paddingleft-2\"><li><p>常量池<br style=\"box-sizing: border-box;\"/>java虚拟机为每个被装载的类维护一个常量池，比如说一个类</p></li></ul><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">public&nbsp;class&nbsp;Test{\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;String&nbsp;=&nbsp;&quot;asb&quot;;\r\n}</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">这种常量，就会被记录到常量池中，在生成字节码class文件的时候，会放在COUNST_POOL中</p><ul style=\"box-sizing: border-box; margin-bottom: 16px; padding: 0px 0px 0px 2em; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\" class=\" list-paddingleft-2\"><li><p>字节码<br style=\"box-sizing: border-box;\"/>字节码文件中，维护了一个有序集合——常量池，记录着类型所使用的所有常量信息</p></li></ul><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">Entry Type Description</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">CONSTANT_Utf8&nbsp;<em style=\"box-sizing: border-box;\">A UTF-8 encoded Unicode string</em></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">CONSTANT_Integer&nbsp;<em style=\"box-sizing: border-box;\">An int literal value</em></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">CONSTANT_Float&nbsp;<em style=\"box-sizing: border-box;\">A float literal value</em></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">CONSTANT_Long&nbsp;<em style=\"box-sizing: border-box;\">A long literal value</em></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">CONSTANT_Double&nbsp;<em style=\"box-sizing: border-box;\">A double literal value</em></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">CONSTANT_Class&nbsp;<em style=\"box-sizing: border-box;\">A symbolic reference to a class or interface</em></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">CONSTANT_String&nbsp;<em style=\"box-sizing: border-box;\">A String literal value</em></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">CONSTANT_Fieldref&nbsp;<em style=\"box-sizing: border-box;\">A symbolic reference to a field</em></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">CONSTANT_Methodref&nbsp;<em style=\"box-sizing: border-box;\">A symbolic reference to a method declared in a class</em></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">CONSTANT_InterfaceMethodref&nbsp;<em style=\"box-sizing: border-box;\">A symbolic reference to a method declared in an interface</em></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">CONSTANT_NameAndType&nbsp;<em style=\"box-sizing: border-box;\">Part of a symbolic reference to a field or method</em></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">其中记录String类型的常量池在：CONSTANT_String_info中，而这个里面记录的是UTF-8常量池的索引， CONSTANT_Utf8_info，即我们的最终信息是保存在这个常量池中的</p><ul style=\"box-sizing: border-box; margin-bottom: 16px; padding: 0px 0px 0px 2em; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\" class=\" list-paddingleft-2\"><li><p>限制原因<br style=\"box-sizing: border-box;\"/>在CONSTANT_Utf8_info中，有一个记录bytes所代表的字符串的长度的变量，他的长度为2个字节，也就是说，使用的是16位的无符号整形来进行记录，因此最多可使用2^16 = 65536 - 1，但是在我的测试中，发现当字符串超过65534（不包含），也就是说length &gt; 65534，就会报错了，然后继续去查，在说明中可以看到</p></li></ul><blockquote style=\"box-sizing: border-box; margin: 0px 0px 16px; padding: 0px 15px 0px 20px; border-left: 4px solid rgb(221, 221, 221); font-family: Georgia, &quot;Times New Roman&quot;, Times, Kai, &quot;Kaiti SC&quot;, KaiTi, BiauKai, FontAwesome, serif; color: rgb(102, 102, 102); font-size: 14px; font-style: italic; white-space: normal;\"><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">represent constant string values. String content is encoded in modified UTF-8.</p></blockquote><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">我们用个例子来分析一下吧<br style=\"box-sizing: border-box;\"/>为了尽可能简单，这样写</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">public&nbsp;class&nbsp;Aa{\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args){\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;aaa&nbsp;=&quot;aaa&quot;;\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">很简单的一个例子<br style=\"box-sizing: border-box;\"/>然后我们反编译一下class</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">javap&nbsp;-verbose&nbsp;Aa.class</pre><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">Classfile&nbsp;/C:/Users/fin/Desktop/Aa.class\r\n&nbsp;&nbsp;Last&nbsp;modified&nbsp;2017-7-31;&nbsp;size&nbsp;265&nbsp;bytes\r\n&nbsp;&nbsp;MD5&nbsp;checksum&nbsp;aec0db218f2598d73cb809fad1e0eed5\r\n&nbsp;&nbsp;Compiled&nbsp;from&nbsp;&quot;Aa.java&quot;\r\npublic&nbsp;class&nbsp;Aa\r\n&nbsp;&nbsp;minor&nbsp;version:&nbsp;0\r\n&nbsp;&nbsp;major&nbsp;version:&nbsp;52\r\n&nbsp;&nbsp;flags:&nbsp;ACC_PUBLIC,&nbsp;ACC_SUPER\r\nConstant&nbsp;pool:\r\n&nbsp;&nbsp;&nbsp;#1&nbsp;=&nbsp;Methodref&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#4.#13&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;java/lang/Object.&quot;&lt;init&gt;&quot;:()V\r\n&nbsp;&nbsp;&nbsp;#2&nbsp;=&nbsp;String&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#14&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;aaa\r\n&nbsp;&nbsp;&nbsp;#3&nbsp;=&nbsp;Class&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#15&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Aa\r\n&nbsp;&nbsp;&nbsp;#4&nbsp;=&nbsp;Class&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#16&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;java/lang/Object\r\n&nbsp;&nbsp;&nbsp;#5&nbsp;=&nbsp;Utf8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;init&gt;\r\n&nbsp;&nbsp;&nbsp;#6&nbsp;=&nbsp;Utf8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;()V\r\n&nbsp;&nbsp;&nbsp;#7&nbsp;=&nbsp;Utf8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Code\r\n&nbsp;&nbsp;&nbsp;#8&nbsp;=&nbsp;Utf8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LineNumberTable\r\n&nbsp;&nbsp;&nbsp;#9&nbsp;=&nbsp;Utf8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;main\r\n&nbsp;&nbsp;#10&nbsp;=&nbsp;Utf8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;([Ljava/lang/String;)V\r\n&nbsp;&nbsp;#11&nbsp;=&nbsp;Utf8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SourceFile\r\n&nbsp;&nbsp;#12&nbsp;=&nbsp;Utf8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Aa.java\r\n&nbsp;&nbsp;#13&nbsp;=&nbsp;NameAndType&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#5:#6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&quot;&lt;init&gt;&quot;:()V\r\n&nbsp;&nbsp;#14&nbsp;=&nbsp;Utf8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;aaa\r\n&nbsp;&nbsp;#15&nbsp;=&nbsp;Utf8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Aa\r\n&nbsp;&nbsp;#16&nbsp;=&nbsp;Utf8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;java/lang/Object\r\n{\r\n&nbsp;&nbsp;public&nbsp;Aa();\r\n&nbsp;&nbsp;&nbsp;&nbsp;descriptor:&nbsp;()V\r\n&nbsp;&nbsp;&nbsp;&nbsp;flags:&nbsp;ACC_PUBLIC\r\n&nbsp;&nbsp;&nbsp;&nbsp;Code:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stack=1,&nbsp;locals=1,&nbsp;args_size=1\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0:&nbsp;aload_0\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1:&nbsp;invokespecial&nbsp;#1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Method&nbsp;java/lang/Object.&quot;&lt;init&gt;&quot;:()V\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4:&nbsp;return\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LineNumberTable:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line&nbsp;3:&nbsp;0\r\n\r\n&nbsp;&nbsp;public&nbsp;static&nbsp;void&nbsp;main(java.lang.String[]);\r\n&nbsp;&nbsp;&nbsp;&nbsp;descriptor:&nbsp;([Ljava/lang/String;)V\r\n&nbsp;&nbsp;&nbsp;&nbsp;flags:&nbsp;ACC_PUBLIC,&nbsp;ACC_STATIC\r\n&nbsp;&nbsp;&nbsp;&nbsp;Code:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stack=1,&nbsp;locals=2,&nbsp;args_size=1\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0:&nbsp;ldc&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;String&nbsp;aaa\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2:&nbsp;astore_1\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3:&nbsp;return\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LineNumberTable:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line&nbsp;7:&nbsp;0\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line&nbsp;9:&nbsp;3\r\n}\r\nSourceFile:&nbsp;&quot;Aa.java&quot;</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">上面就是我们得到的信息，可以看到第二个常量池指向14号常量池也就是我们的utf8常量池，因为我们的aaa很简单，因此记录的字节码一定也是重复的，所以很容易能从2进制的class文件中找到。</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">cafe&nbsp;babe&nbsp;0000&nbsp;0034&nbsp;0011&nbsp;0a00&nbsp;0400&nbsp;0d08\r\n000e&nbsp;0700&nbsp;0f07&nbsp;0010&nbsp;0100&nbsp;063c&nbsp;696e&nbsp;6974\r\n3e01&nbsp;0003&nbsp;2829&nbsp;5601&nbsp;0004&nbsp;436f&nbsp;6465&nbsp;0100\r\n0f4c&nbsp;696e&nbsp;654e&nbsp;756d&nbsp;6265&nbsp;7254&nbsp;6162&nbsp;6c65\r\n0100&nbsp;046d&nbsp;6169&nbsp;6e01&nbsp;0016&nbsp;285b&nbsp;4c6a&nbsp;6176\r\n612f&nbsp;6c61&nbsp;6e67&nbsp;2f53&nbsp;7472&nbsp;696e&nbsp;673b&nbsp;2956\r\n0100&nbsp;0a53&nbsp;6f75&nbsp;7263&nbsp;6546&nbsp;696c&nbsp;6501&nbsp;0007\r\n4161&nbsp;2e6a&nbsp;6176&nbsp;610c&nbsp;0005&nbsp;0006&nbsp;0100&nbsp;0361\r\n6161&nbsp;0100&nbsp;0241&nbsp;6101&nbsp;0010&nbsp;6a61&nbsp;7661&nbsp;2f6c\r\n616e&nbsp;672f&nbsp;4f62&nbsp;6a65&nbsp;6374&nbsp;0021&nbsp;0003&nbsp;0004\r\n0000&nbsp;0000&nbsp;0002&nbsp;0001&nbsp;0005&nbsp;0006&nbsp;0001&nbsp;0007\r\n0000&nbsp;001d&nbsp;0001&nbsp;0001&nbsp;0000&nbsp;0005&nbsp;2ab7&nbsp;0001\r\nb100&nbsp;0000&nbsp;0100&nbsp;0800&nbsp;0000&nbsp;0600&nbsp;0100&nbsp;0000\r\n0300&nbsp;0900&nbsp;0900&nbsp;0a00&nbsp;0100&nbsp;0700&nbsp;0000&nbsp;2000\r\n0100&nbsp;0200&nbsp;0000&nbsp;0412&nbsp;024c&nbsp;b100&nbsp;0000&nbsp;0100\r\n0800&nbsp;0000&nbsp;0a00&nbsp;0200&nbsp;0000&nbsp;0700&nbsp;0300&nbsp;0900\r\n0100&nbsp;0b00&nbsp;0000&nbsp;0200&nbsp;0c</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">然后查看一下二进制文件，我们就查找所有0003的字段（因为我们字符串长度为3），并且前面要有01（CONSTANT_uft8_info中的tag标记），或者0100 03，找到两个结果，0100 0361 6161和一个01 0003 2829 5601 ，后者应该不可能了，只有可能是这个0100 0361 6161这个，因为a的ascii码对应于16进制就是61，因此长度最多记录到0xffff，但是经过测试后最大只能达到fffe，如果编译65535长度的字符串就会报错，但是实际上ffff并没有被使用到</p><ul style=\"box-sizing: border-box; margin-bottom: 16px; padding: 0px 0px 0px 2em; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\" class=\" list-paddingleft-2\"><li><p>为什么只有65534<br style=\"box-sizing: border-box;\"/>在Android的官方Dex文件格式的文档中，对MUTF-8编码有如下描述：</p></li></ul><blockquote style=\"box-sizing: border-box; margin: 0px 0px 16px; padding: 0px 15px 0px 20px; border-left: 4px solid rgb(221, 221, 221); font-family: Georgia, &quot;Times New Roman&quot;, Times, Kai, &quot;Kaiti SC&quot;, KaiTi, BiauKai, FontAwesome, serif; color: rgb(102, 102, 102); font-size: 14px; font-style: italic; white-space: normal;\"><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px;\">1）MUTF-8使用1到3个字节对UTF-16字符进行编码；</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px;\">2）对于数值为0的情况，使用两个字节对其进行编码（编码后的值为0xC0和0x80）；</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px;\">3）采用类似于c语言中的空字符串（NULL，单字节数值为0）作为字符串结尾的标志；</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">4）对于UTF-16码点范围在U+10000到U+10FFFF的情况（补充字符），数值对中的每一个数值采用3字节对其编码。也就是说，对于这种情况，表示一个字符总共需要使用6个字节。</p></blockquote><p style=\"box-sizing: border-box; margin-top: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal; margin-bottom: 0px !important;\">按照我的理解，也就是说最后一位需要是空字符串，所以最大长度只能为65535 - 1，但是java的String不像C一样字符串结尾使用\\0，但是这里确实找不到合理的解释，也希望看到这篇文章并且了解相关知识的能评论解答一下</p><p><br/></p>',1529493787,1,9,0,9,'fin棋','Java.lang基础'),(10,'2018-06-20/5b2a38ad72bb2.png','Java并发','<h2 id=\"h2-java-\" style=\"box-sizing: border-box; margin-right: 0px; margin-bottom: 16px; margin-left: 0px; font-size: 1.75em; padding-bottom: 0.3em; border-bottom: 1px solid rgb(238, 238, 238); position: relative; line-height: 1.225; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal; margin-top: 0px !important;\">java并发学习与总结</h2><h3 id=\"h3-u7EBFu7A0Bu5B89u5168u6027\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.5em; position: relative; line-height: 1.43; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"reference-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(65, 131, 196);\"></a>线程安全性</h3><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">在对一个类分析的时候，经常会碰到XX是不是线程安全的，那么线程安全的核心是<span style=\"box-sizing: border-box; font-weight: 700;\">正确性</span>，也就是说在多线程的环境下，代码能够正确执行并且按照规范得到想要的结果，那么这就是线程安全的。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">比如<code style=\"box-sizing: border-box; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; padding: 3px; color: rgb(199, 37, 78); background: rgb(246, 246, 246); white-space: pre-wrap; border-radius: 3px; margin: 0px 4px 0px 5px; border: 1px solid rgb(221, 221, 221); word-break: break-all !important;\">i++</code>这个操作，看起来是一句话，但实际上他是三个操作：读取i的值，将i的值加1，将加一后的值赋值给i，完成这个自增的操作。在单线程下，我们无需考虑这三步操作会出现什么情况，因为一定是顺序执行，不会有任何线程会干扰我们。但是在多线程下，一旦有两个以上的线程同时进行<code style=\"box-sizing: border-box; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; padding: 3px; color: rgb(199, 37, 78); background: rgb(246, 246, 246); white-space: pre-wrap; border-radius: 3px; margin: 0px 4px 0px 5px; border: 1px solid rgb(221, 221, 221); word-break: break-all !important;\">i++</code>的操作，那么很有可能是这样的<br style=\"box-sizing: border-box;\"/><img src=\"http://img.blog.csdn.net/20170805144350877?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYTYxMDYxNjg5OA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"这里写图片描述\" style=\"box-sizing: border-box; vertical-align: middle; border: 0px; max-width: 100%;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">在这种顺序下，A和B读取到的i是同一个值，因此他们执行结束后，i依然只被加了一次，这样这个程序的正确性就没有得到保证，因此不是线程安全的。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">这里类似于多进程中的安全问题，在进程对资源的访问，因为CPU调度而导致非原子操作被分到两次执行，可能也会导致执行结果的正确性得不到保证</p><h3 id=\"h3-u539Fu5B50u6027\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.5em; position: relative; line-height: 1.43; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"reference-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(65, 131, 196);\"></a>原子性</h3><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">原子性能够保证一个操作是线程安全的，因此原子性的操作要么完全执行，要么完全不执行，在这个操作中间可能会有一些同步的操作，来保证这个操作的原子性，但是调用者不用关心，对于他们来说，这一个操作就是一次完成的</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">java.util.concurrent.atomic包<br style=\"box-sizing: border-box;\"/>顾名思义，在并发包concurrent中的atomic包，atomic就指的是院子的，那么这个包中的就是可以保证原子操作的一些工具类，<br style=\"box-sizing: border-box;\"/>是一个小型工具包，支持单个变量上的无锁线程安全编程</p><table width=\"950\"><thead style=\"box-sizing: border-box;\"><tr style=\"box-sizing: border-box; background-color: rgb(248, 248, 248); border-top: 1px solid rgb(204, 204, 204);\" class=\"firstRow\"><th style=\"box-sizing: border-box; padding: 6px 13px; text-align: left; border-top-color: rgb(221, 221, 221);\">class</th><th style=\"box-sizing: border-box; padding: 6px 13px; text-align: left; border-top-color: rgb(221, 221, 221);\">description</th></tr></thead><tbody style=\"box-sizing: border-box;\"><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(204, 204, 204);\"><td style=\"box-sizing: border-box; padding: 6px 13px;\">AtomicBoolean</td><td style=\"box-sizing: border-box; padding: 6px 13px;\">一个 boolean值可以用原子更新。</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(248, 248, 248); border-top: 1px solid rgb(204, 204, 204);\"><td style=\"box-sizing: border-box; padding: 6px 13px;\">AtomicInteger</td><td style=\"box-sizing: border-box; padding: 6px 13px;\">可能原子更新的 int值。</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(204, 204, 204);\"><td style=\"box-sizing: border-box; padding: 6px 13px;\">AtomicIntegerArray</td><td style=\"box-sizing: border-box; padding: 6px 13px;\">一个 int数组，其中元素可以原子更新</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(248, 248, 248); border-top: 1px solid rgb(204, 204, 204);\"><td style=\"box-sizing: border-box; padding: 6px 13px;\">AtomicIntegerFieldUpdater</td><td style=\"box-sizing: border-box; padding: 6px 13px;\">基于反射的实用程序，可以对指定类的指定的 volatile int字段进行原子更新。</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(204, 204, 204);\"><td style=\"box-sizing: border-box; padding: 6px 13px;\">AtomicLong</td><td style=\"box-sizing: border-box; padding: 6px 13px;\">一个 long值可以用原子更新。</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(248, 248, 248); border-top: 1px solid rgb(204, 204, 204);\"><td style=\"box-sizing: border-box; padding: 6px 13px;\">AtomicLongArray</td><td style=\"box-sizing: border-box; padding: 6px 13px;\">可以 long地更新元素的 long数组。</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(204, 204, 204);\"><td style=\"box-sizing: border-box; padding: 6px 13px;\">AtomicLongFieldUpdater</td><td style=\"box-sizing: border-box; padding: 6px 13px;\">基于反射的实用程序，可以对指定类的指定的 volatile long字段进行原子更新。</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(248, 248, 248); border-top: 1px solid rgb(204, 204, 204);\"><td style=\"box-sizing: border-box; padding: 6px 13px;\">AtomicMarkableReference</td><td style=\"box-sizing: border-box; padding: 6px 13px;\">AtomicMarkableReference维护一个对象引用以及可以原子更新的标记位。</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(204, 204, 204);\"><td style=\"box-sizing: border-box; padding: 6px 13px;\">AtomicReference</td><td style=\"box-sizing: border-box; padding: 6px 13px;\">可以原子更新的对象引用。</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(248, 248, 248); border-top: 1px solid rgb(204, 204, 204);\"><td style=\"box-sizing: border-box; padding: 6px 13px;\">AtomicReferenceArray</td><td style=\"box-sizing: border-box; padding: 6px 13px;\">可以以原子方式更新元素的对象引用数组。</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(204, 204, 204);\"><td style=\"box-sizing: border-box; padding: 6px 13px;\">AtomicReferenceFieldUpdater</td><td style=\"box-sizing: border-box; padding: 6px 13px;\">一种基于反射的实用程序，可以对指定类的指定的 volatile volatile引用原子更新。</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(248, 248, 248); border-top: 1px solid rgb(204, 204, 204);\"><td style=\"box-sizing: border-box; padding: 6px 13px;\">AtomicStampedReference</td><td style=\"box-sizing: border-box; padding: 6px 13px;\">AtomicStampedReference维护对象引用以及可以原子更新的整数“印记”。</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(204, 204, 204);\"><td style=\"box-sizing: border-box; padding: 6px 13px;\">DoubleAccumulator</td><td style=\"box-sizing: border-box; padding: 6px 13px;\">一个或多个变量一起维护使用提供的功能更新的运行的值 double 。</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(248, 248, 248); border-top: 1px solid rgb(204, 204, 204);\"><td style=\"box-sizing: border-box; padding: 6px 13px;\">DoubleAdder</td><td style=\"box-sizing: border-box; padding: 6px 13px;\">一个或多个变量一起保持初始为零 double和。</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(204, 204, 204);\"><td style=\"box-sizing: border-box; padding: 6px 13px;\">LongAccumulator</td><td style=\"box-sizing: border-box; padding: 6px 13px;\">一个或多个变量，它们一起保持运行 long使用所提供的功能更新值。</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(248, 248, 248); border-top: 1px solid rgb(204, 204, 204);\"><td style=\"box-sizing: border-box; padding: 6px 13px;\">LongAdder</td><td style=\"box-sizing: border-box; padding: 6px 13px;\">一个或多个变量一起保持初始为零 long总和。</td></tr></tbody></table><p><br/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">使用这个工具包中的类，可以实现我们上述的i++的原子操作：</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">AtomicInteger&nbsp;i&nbsp;=&nbsp;new&nbsp;AtomicInteger();\r\ni.incrementAndGet();</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">这样子，返回值就是自增后的值，而又能保证原子性</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">在java并发编程实战中也提到了：</p><blockquote style=\"box-sizing: border-box; margin: 0px 0px 16px; padding: 0px 15px 0px 20px; border-left: 4px solid rgb(221, 221, 221); font-family: Georgia, &quot;Times New Roman&quot;, Times, Kai, &quot;Kaiti SC&quot;, KaiTi, BiauKai, FontAwesome, serif; color: rgb(102, 102, 102); font-size: 14px; font-style: italic; white-space: normal;\"><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">在实际情况中，应尽可能地使用现有的线程安全对象（例如AcomicLong）来管理类的状态，与非线程安全的对象相比，判断线程安全对象的可能状态及其状态转换情况要更为容易，从而也更容易维护和验证线程安全性</p></blockquote><h3 id=\"h3-synchronized-\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.5em; position: relative; line-height: 1.43; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"reference-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(65, 131, 196);\"></a>synchronized关键字</h3><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">java提供了一种内置的锁机制来支持原子性：同步代码块（synchronized block）。这种属于互斥锁，同一时间有且只有一个线程可以进入同步代码块中执行，</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">使用方法：<br style=\"box-sizing: border-box;\"/>①标记方法</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">public&nbsp;sychronized&nbsp;void&nbsp;do(){...}</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">经过这个关键字标记的方法，当有线程在其中执行时，其他线程的请求都会被阻塞，直到该线程离开此代码块，将会释放其他线程，随机选择一个线程进入代码块</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">②锁Class代码块</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">//在方法体中需要加锁的代码：\r\nsychronized（lock）{\r\n}</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">其中的lock可以是Class对象，可以是任意的java对象，因为任意java对象都是可以用作一个实现同步的锁，但是在静态代码块中，就要使用Class对象来进行，非静态可以使用this来做同步锁</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">可重入性：<br style=\"box-sizing: border-box;\"/>假如一个线程试图进入一个加过同步锁的方法，而这个方法的锁由自己持有，那么他就会成功获得进入的许可，因为内置的同步锁的操作粒度是“线程”，通过为每个锁关联一个获取技术值和所有者线程的记录来进行的，当被调用后，会将调用线程和计数记录下来，因此当同一个线程请求，这种方法就会允许进入，可以防止请求自己所持有的锁而导致的死锁</p><h3 id=\"h3-volatile-\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.5em; position: relative; line-height: 1.43; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"reference-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(65, 131, 196);\"></a>Volatile关键字</h3><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">Volatile关键字修饰的变量会被认为是共享变量，在编译期运行的时候会主要的这个变量是共享的，去解决编译器的重排序问题而导致的不可见性，那什么叫不可见性</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">public&nbsp;class&nbsp;NoVisibility{\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;boolean&nbsp;ready;\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;int&nbsp;number;\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;class&nbsp;ReaderThread&nbsp;extends&nbsp;Thread{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;run(){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(!ready)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Thread.yield();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(number);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;new&nbsp;ReaderThread().start();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;number&nbsp;=&nbsp;42;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ready&nbsp;=&nbsp;true;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">这段代码会有三种运行可能：<br style=\"box-sizing: border-box;\"/>① 大多数正常运行，输出42（我测试了许多次都是42）<br style=\"box-sizing: border-box;\"/>② 输出0，ready被设置为true后，线程输出number的值，但是由于内存<span style=\"box-sizing: border-box; font-weight: 700;\">重排序</span>，number在ready后执行而导致线程对ready的改变不可见，输出原来的0<br style=\"box-sizing: border-box;\"/>③ 无限循环，ReaderThread线程获得ready的副本为false，在main线程中ready设为true，但是读线程可能永远看不到这个改变</p><p style=\"box-sizing: border-box; margin-top: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal; margin-bottom: 0px !important;\">第二三种的不可见的问题。。。说实话我没遇见过，自己去测试生成了10000条线程，依然没有遇到过，出现在修改了缓存而延迟修改主存导致的其他线程对该变量的不可见。这个应该是属于编译器的问题，使用volatile可以防止这种问题的出现</p><p><br/></p>',1529493677,1,10,0,10,'fin棋','Java.lang基础'),(11,'2018-06-20/5b2a3762ad90e.jpg','java第一次实验心得','<h1 id=\"h1-u7B2Cu4E00u6B21u5B9Eu9A8Cu5FC3u5F97u4F53u4F1A\" style=\"box-sizing: border-box; margin-right: 0px; margin-bottom: 16px; margin-left: 0px; font-size: 2.25em; padding-bottom: 0.3em; border-bottom: 1px solid rgb(238, 238, 238); position: relative; line-height: 1.2; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal; margin-top: 0px !important;\">第一次实验心得体会</h1><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">本次实验收获还是挺大的，能够更加熟练地去编写java的代码，对java有了更深的了解。</p><h2 id=\"h2-u6587u4EF6u8BFBu53D6u548Cu5199u5165\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.75em; padding-bottom: 0.3em; border-bottom: 1px solid rgb(238, 238, 238); position: relative; line-height: 1.225; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"reference-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(65, 131, 196);\"></a>文件读取和写入</h2><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">以前未接触过的关于文件的读取和写入，这次熟悉了通过BufferedReader和BufferedWriter类分别来读取和写入txt文件，最初我卡在了无法将string数组和StockInfo数组的相接，后来想起了二维数组，又建了一个element数组来存取每一条信息的各个数据</p><h2 id=\"h2-u63A5u53E3u7684u5B9Eu73B0\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.75em; padding-bottom: 0.3em; border-bottom: 1px solid rgb(238, 238, 238); position: relative; line-height: 1.225; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"reference-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(65, 131, 196);\"></a>接口的实现</h2><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">这是我第一次接触到接口这个概念，发现接口出乎意料的很方便，它类似于C++中的抽象类，不可以对接口进行实例化，也不可以在接口中定义函数，必须通过在类中实现接口的函数体，这样的好处在于实现java的多态性，在许多程序中，使用接口能大大地简化程序的复杂程度<br style=\"box-sizing: border-box;\"/>3、以前一直不知道main函数的参数中的args的用处是什么，通过这次实验才清楚，它是在控制台中输入的参数变量，通过在网上查找资料清楚了args数组元素的具体使用方法</p><h2 id=\"h2-u6392u5E8Fu65B9u9762\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.75em; padding-bottom: 0.3em; border-bottom: 1px solid rgb(238, 238, 238); position: relative; line-height: 1.225; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"reference-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(65, 131, 196);\"></a>排序方面</h2><p style=\"box-sizing: border-box; margin-top: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal; margin-bottom: 0px !important;\">以前一直只会冒泡排序，但是在实验过程中，感谢学长指出我的问题，这才发现我的冒泡排序实际上是存在问题的，最后得以正确使用冒泡排序；同时，了解了其他的几种排序方法，冒泡排序只是最基础时间复杂度很大的一种排序，相比之下，快速排序法所实现的时间远远低于冒泡排序。最后，我通过学习，实现了两种排序方法，即插入排序和冒泡排序，但是感觉快速排序和归并排序才是最重要的，下来我也会把这两种排序法学习掌握了。</p><p><br/></p>',1529493346,1,11,0,11,'程志强-272','Java基础实验'),(12,'2018-06-20/5b2a3632577d4.jpg','AOP-面向切面编程','<h2 id=\"h2-aop\" style=\"box-sizing: border-box; margin-right: 0px; margin-bottom: 16px; margin-left: 0px; font-size: 1.75em; padding-bottom: 0.3em; border-bottom: 1px solid rgb(238, 238, 238); position: relative; line-height: 1.225; margin-top: 0px !important;\">AOP</h2><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px;\">AOP是目前一个比较热门的话题，AOP为Aspect Oriented Programming的缩写，译作：“面向切面编程”。AOP实际是GoF设计模式的延续，设计模式孜孜不倦追求的是调用者和被调用者之间的解耦,提高代码的灵活性和可扩展性，AOP可以说也是这种目标的一种实现。</p><h3 id=\"h3-aop-\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.5em; position: relative; line-height: 1.43;\"><a class=\"reference-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background: 0px 0px; color: rgb(65, 131, 196);\"></a>AOP到底是什么？</h3><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px;\">面向切面编程，切面，这个东西我的理解更像是流水线中的一个环节，不知道有没有过这种感受。我们写好的代码，突然需要加入一个鉴别用户是否登录，再决定是否要给用户提供服务，那么应该怎么做？ 我们去到每个代码块，在每个方法的第一行加入一行取session查看是否登录的判断语句。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px;\">这个时候问题就来了，这种登录验证的代码重复出现在了多个代码中，与实现了业务逻辑的方法体产生了耦合，那么我们改用另一种方法，我们把这个代码提取出来写成一个函数，然后把代码原来的位置改成这个方法的调用，不就解决了吗？</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px;\">然而并不行，因为这样仍然存在耦合，只不过看起来清爽了很多，但是下一个新的业务也许又要调用一遍这个方法。而问题就在这里，有些系统级的逻辑，比如日志、用户身份、事务管理等这种每个类都需要依赖的办法，会导致我们的方法越来越臃肿，而写一个业务逻辑代码反而会产生很多与业务无关的代码在其中。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px;\">AOP就是解决这个问题而存在的。如果我们把M作为我们的业务，abc作为上述的日志、用户身份、事务管理，那么传统的写法可能就是abcM，而面向切面编程就是让我们这么做：<br style=\"box-sizing: border-box;\"/>abc|M，我们把M单独切出来，只写M，然后再写好abc，等到运行的时候，把abc再和M全部连在一起。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px;\">我们可以举一个比方。上个Ioc我们用了保姆和我的例子，通过做饭来告诉大家什么叫Ioc，那么今天我们就还是用类似的办法让大家理解什么是AOP。</p><h3 id=\"h3-aop-\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.5em; position: relative; line-height: 1.43;\"><a class=\"reference-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background: 0px 0px; color: rgb(65, 131, 196);\"></a>AOP，一句话，就是：做自己喜欢的事。</h3><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px;\">传统OOP：小时候喜欢吃蛋白，不喜欢吃蛋黄，但是因为蛋黄的存在导致我不喜欢吃鸡蛋。另一方面，每次吃鸡蛋还要剥壳，还特别麻烦，因此每次不管鸡蛋还是鸭蛋，看到那壳和里面干巴巴的蛋黄就一点兴趣都没有。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px;\">改良版AOP：小时候喜欢吃蛋白（Target目标，做爱做的事），每次桌子上都会有很多鸭蛋白、鸡蛋白（Aspect方面），而吃之前（Advice通知）的剥壳（连接点），和蛋黄都没有了，后来长大了，才知道每次妈妈煮完鸡蛋都会帮我把壳和蛋黄拿掉（Introduction引入），然后看着我吃完喜欢吃的蛋白。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px;\">可以看出来，AOP做的就是让我们做自己喜欢的事情，不管是什么蛋，都会把壳去掉，让我不需要关心这些影响我吃鸡蛋的事情，而我只需要知道怎么吃鸡蛋就好了，这整个一件事情发生是完整的，包含剥壳 + 吃的动作，但是在我的眼里，只有吃这一个过程，那么这个吃就是完整过程中的一个切面，而我只用关注着一个切面就好了，这就是面向切面编程，也许完成的一次过程包含abcdefgM，但是abcdefg都不归我管，我只喜欢做M，那么我就只做M这件事，而徐志远喜欢做N，那么他就只做N这件事，而每次需要叫我做事，都会先经历abcdefM，而叫徐志远做事，则是abcdefgN，但是在我们两个的眼中只有M和N</p><h3 id=\"h3-spring-aop\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.5em; position: relative; line-height: 1.43;\"><a class=\"reference-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background: 0px 0px; color: rgb(65, 131, 196);\"></a>Spring——AOP</h3><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px;\">Spring中AOP的实现，接触的比较多的便是所谓的Interceptor（拦截器）</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px;\">拦截器需要实现HandlerInterceptor，这是一个方法拦截器，有三个需要实现的方法：</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">boolean&nbsp;preHandle(HttpServletRequest&nbsp;var1,&nbsp;HttpServletResponse&nbsp;var2,&nbsp;Object&nbsp;var3)&nbsp;throws&nbsp;Exception;\r\n\r\nvoid&nbsp;postHandle(HttpServletRequest&nbsp;var1,&nbsp;HttpServletResponse&nbsp;var2,&nbsp;Object&nbsp;var3,&nbsp;ModelAndView&nbsp;var4)&nbsp;throws&nbsp;Exception;\r\n\r\nvoid&nbsp;afterCompletion(HttpServletRequest&nbsp;var1,&nbsp;HttpServletResponse&nbsp;var2,&nbsp;Object&nbsp;var3,&nbsp;Exception&nbsp;var4)&nbsp;throws&nbsp;Exception;</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px;\">这三个方法，根据名字就能看出来，是对应着一次调用的三个阶段。<br style=\"box-sizing: border-box;\"/>分别是：调用handler前，handler执行后，调用完成<br style=\"box-sizing: border-box;\"/>这就是一种AOP实现，在我们的控制器中，我们实际上写的是一个业务的逻辑，可是，在拦截器里，定义了这三个方法，那么实际运行的时候：</p><h3 id=\"h3-prehandler\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.5em; position: relative; line-height: 1.43;\"><a rel=\"nofollow\" style=\"box-sizing: border-box; background: 0px 0px; color: rgb(65, 131, 196);\" name=\"preHandler\"></a>preHandler</h3><h3 id=\"h3-controller\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.5em; position: relative; line-height: 1.43;\"><a rel=\"nofollow\" style=\"box-sizing: border-box; background: 0px 0px; color: rgb(65, 131, 196);\" name=\"controller\"></a>controller</h3><h3 id=\"h3-posthandler\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.5em; position: relative; line-height: 1.43;\"><a rel=\"nofollow\" style=\"box-sizing: border-box; background: 0px 0px; color: rgb(65, 131, 196);\" name=\"postHandler\"></a>postHandler</h3><h3 id=\"h3-aftercompletion\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.5em; position: relative; line-height: 1.43;\"><a rel=\"nofollow\" style=\"box-sizing: border-box; background: 0px 0px; color: rgb(65, 131, 196);\" name=\"afterCompletion\"></a>afterCompletion</h3><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px !important;\">是这样运行的，拦截器引入到我们所谓的控制器（切面）的不同阶段，当控制器需要被调用的时候，就必须要经过preHandler这个阶段（剥壳），那么controller做完爱做的事情（吃蛋白），又要调用postHandler和afterCompletion（丢掉），这就是面向切面编程。Controller不需要设计系统逻辑，只需要去完成自己要做的业务逻辑，而一切包括用户身份、事务管理等交由拦截器来做，就是一种AOP的思想。</p><p><span data-url=\"/experience/like/547012aff84d4618a0eb1decf5e7773c.json\" class=\"am-icon-thumbs-up am-text-lg am-text-green am-cursor-default\" id=\"like\" style=\"box-sizing: border-box; display: inline-block; font-size: 1.8rem; color: rgb(10, 143, 115); cursor: default;\"></span>&nbsp;<span class=\"am-text-sm am-text-green\" style=\"box-sizing: border-box; font-size: 1.4rem; color: rgb(10, 143, 115);\">点赞数&nbsp;<span data-count=\"0\" style=\"box-sizing: border-box;\">0</span></span></p><p><br/></p>',1529493042,1,15,1,12,'fin棋','Java.lang基础'),(13,'2018-06-20/5b2a34e20ea2e.png','IOC-控制反转','<h2 id=\"h2-spring-ioc-\" style=\"box-sizing: border-box; margin-right: 0px; margin-bottom: 16px; margin-left: 0px; font-size: 1.75em; padding-bottom: 0.3em; border-bottom: 1px solid rgb(238, 238, 238); position: relative; line-height: 1.225; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal; margin-top: 0px !important;\">Spring —— IOC控制反转</h2><h3 id=\"h3--ioc\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.5em; position: relative; line-height: 1.43; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"reference-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(65, 131, 196);\"></a>什么是IoC</h3><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">一般的编程中，对于一个对象A，如果要使用A中的方法或属性，那么是需要手动进行初始化这个对象的，比如Interface A = new InterfaceImpl();来进行初始化，也可以通过JNDI的命名接口来得到，使用结束后对象A跟随被销毁或随着生命周期的结束而结束，但是这个对象始终会和其他的接口或者类耦合起来。类似于做饭，我需要自己去市场买菜，洗菜、烧水、做饭，炒菜，端到桌子上来，吃完，丢掉，完成一顿晚饭。<br style=\"box-sizing: border-box;\"/>而IoC做了什么呢？类似一个保姆，我们在出门之前告诉他，今天我11点半回家，然后我想吃芹菜炒肉，然后我们就可以走了，11点半的时候回家，保姆就把菜已经做好放在桌子上，我们吃完，睡午觉，继续去写代码，如果菜不好吃，那么我们也不必自己去扔，只需要跑出一个异常，保姆就会处理。<br style=\"box-sizing: border-box;\"/>程序员要做的，就只是在代码中告诉IoC这里需要什么，在什么时候要拿他做什么，不需要去关系这个对象的生命周期或者说要如何实例化它</p><h3 id=\"h3-spring-ioc\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.5em; position: relative; line-height: 1.43; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(65, 131, 196);\" name=\"Spring-IoC\"></a>Spring-IoC</h3><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">SpringIoC主要利用依赖注入来实现的，用户针对接口编程，而等运行期，框架再根据定义的注入方式，将对象在合理的时间生成后‘注入’到调用的地方，将用户对于对象的控制权交由spring，就是控制反转IoC，而spring控制的方式就是将适合的对象注入到调用的位置，实现功能。类似于上面的例子，spring做的只是按时把饭做好，放到桌子上，这就是注入，而我在早上就已经定义好了11点半要去吃饭，至于什么饭，是我提前交代给保姆的，然后保姆就利用这段时间把饭做好，放到桌子上。我把做饭、丢垃圾的这些工作交给保姆，就是所谓的控制反转，保姆做饭放到桌子上，就是依赖注入。</p><h3 id=\"h3-spring-\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.5em; position: relative; line-height: 1.43; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"reference-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(65, 131, 196);\"></a>Spring依赖注入的形式</h3><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">1、 构造器注入：<br style=\"box-sizing: border-box;\"/>这是最简单也最好懂的一种模式。<br style=\"box-sizing: border-box;\"/>首先我们定义个接口</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">public&nbsp;interface&nbsp;Lunch{\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;eat();\r\n}</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">是一顿午餐</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">&nbsp;public&nbsp;class&nbsp;GoodMeal&nbsp;implements&nbsp;lunch{\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Override\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;eat(){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;emm...good!\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">这是我们的一顿美味</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">public&nbsp;class&nbsp;BadFood&nbsp;implements&nbsp;Lunch{\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;@Override\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;eat()&nbsp;throws&nbsp;WTFException{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throws&nbsp;new&nbsp;WTFException();\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">这个就是一顿糟糕的饭</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">传统的：</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">public&nbsp;class&nbsp;Man{\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;Lunch&nbsp;lunch;\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;Man(int&nbsp;type)&nbsp;throws&nbsp;WTFException{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(type==1){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lunch&nbsp;=&nbsp;new&nbsp;GoodMeal();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}else{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lunch&nbsp;=&nbsp;new&nbsp;BadFood();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">我们会因为一些因素而按部就班去做饭，去炒菜，可能好吃，也可能不好吃（对于我这是不存在的），但是你始终需要去做很多事情，比如初始化，比如销毁等等等等。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">Ioc构造器注入：</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">public&nbsp;class&nbsp;HouseKeeper{\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;Man&nbsp;boss&nbsp;=&nbsp;new&nbsp;Man();\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;ir(今天老板骂我了){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;new&nbsp;Man(new&nbsp;BadFood());\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;if(今天老板给我加工资了){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;new&nbsp;Man(new&nbsp;GoodMeal);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">首先我们需要一个保姆（当然）。<br style=\"box-sizing: border-box;\"/>然后由保姆做饭来决定今天吃什么<br style=\"box-sizing: border-box;\"/>那么我们的吃就可以这么改</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">public&nbsp;class&nbsp;Man{\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;Lunch&nbsp;lunch;\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;Man(Lunch&nbsp;lunch)&nbsp;throws&nbsp;WTFException{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.lunch&nbsp;=&nbsp;lunch;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lunch.eat;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">我们只需要告诉spring，我们需要一顿饭，并且要调用eat这个方法，那么具体注入进来的是什么，不由这个类决定，就是所谓的控制反转。那么何时注入，由保姆决定，保姆根据某些条件（预先定义，比如周一吃鱼，周二吃鸟）来决定注入什么，这就是依赖注入。上面这个例子就是简单的构造器注入。<br style=\"box-sizing: border-box;\"/>——如果你还不明白，我选择放弃</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">2、 Setter注入<br style=\"box-sizing: border-box;\"/>这个我觉得蛮简单的，估计不用说你们也会了，举一反三和上面构造器是一样的，setter本身就是干这个的</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">3、 自动装配<br style=\"box-sizing: border-box;\"/>这个就厉害了，上面的两种虽然方便，但是使用起来还是有些不爽，自动装配则是通过我们自己定义在配置文件中的bean标签来实现，可以通过名称、数据类型、等配置方法来进行自动装配。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\"><br style=\"box-sizing: border-box;\"/>这样spring就能自动找到所有名称为lunch的变量，然后装配为GoodMeat的对象，实现依赖注入，而autowired则是指明通过名称或者通过类型来进行注入。<br style=\"box-sizing: border-box;\"/>当然也可以通过<a href=\"https://github.com/Autowired\" class=\"at-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-decoration-line: none; color: rgb(65, 131, 196);\">@Autowired</a>来进行注解，注解了这个的变量，无需写setter和getter，就可以自动装配生成对象，或者使用<a href=\"https://github.com/Resource\" class=\"at-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-decoration-line: none; color: rgb(65, 131, 196);\">@Resource</a>来标注，<a href=\"https://github.com/Autowired\" class=\"at-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-decoration-line: none; color: rgb(65, 131, 196);\">@Autowired</a>注解按照类型装配对象，结合注解<a href=\"https://github.com/Qualifier\" class=\"at-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-decoration-line: none; color: rgb(65, 131, 196);\">@Qualifier</a>可以一起使用，而<a href=\"https://github.com/Resource\" class=\"at-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-decoration-line: none; color: rgb(65, 131, 196);\">@Resource</a>则是通过byName来装配，但是都能够达到我们的要求。</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">&lt;bean&nbsp;id=”lunch”&nbsp;class=”com.lunch.GoodMeat”&nbsp;autowired=”byName”&gt;&nbsp;&lt;/bean&gt;</pre><p style=\"box-sizing: border-box; margin-top: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal; margin-bottom: 0px !important;\">自动装配bean中的autowired属性：<br style=\"box-sizing: border-box;\"/>byName:根据名称注入，也就是说会去寻找所有名称为指明id的所有对象然后注入对应的class实例<br style=\"box-sizing: border-box;\"/>byType：根据类型注入，根据配置的class属性去寻找，也就是<a href=\"https://github.com/Autowired\" class=\"at-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-decoration-line: none; color: rgb(65, 131, 196);\">@Autowired</a>的作用<br style=\"box-sizing: border-box;\"/>no：不支持自动装配，采用手动装配<br style=\"box-sizing: border-box;\"/>default：表示默认采用上一级标签的自动装配的取值。如果存在多个配置文件的话，那么每一个配置文件的自动装配方式都是独立的。<br style=\"box-sizing: border-box;\"/>Constructor：使用构造器注入方式注入<br style=\"box-sizing: border-box;\"/>Autodetect：自动选择：如果对象没有无参数的构造方法，那么自动选择constructor的自动装配方式进行构造注入。如果对象含有无参数的构造方法，那么自动选择byType的自动装配方式进行setter注入。</p><p><br/></p>',1529492706,1,17,1,13,'fin棋 ','Java.lang基础');
INSERT INTO `e_lannouncement` VALUES (14,'2018-06-20/5b2a344d041c3.png','Java基础-修饰符','<h2 id=\"h2--\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.75em; padding-bottom: 0.3em; border-bottom: 1px solid rgb(238, 238, 238); position: relative; line-height: 1.225; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\">一、修饰符是什么</h2><blockquote style=\"box-sizing: border-box; margin: 0px 0px 16px; padding: 0px 15px 0px 20px; border-left: 4px solid rgb(221, 221, 221); font-family: Georgia, &quot;Times New Roman&quot;, Times, Kai, &quot;Kaiti SC&quot;, KaiTi, BiauKai, FontAwesome, serif; color: rgb(102, 102, 102); font-size: 14px; font-style: italic; white-space: normal;\"><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">修饰符用来修饰类、方法或者变量。可以使用访问修饰符来保护对类、变量、方法和构造方法的访问，也可以使用其他非访问修饰符来实现一些其他功能。</p></blockquote><h2 id=\"h2--\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.75em; padding-bottom: 0.3em; border-bottom: 1px solid rgb(238, 238, 238); position: relative; line-height: 1.225; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"reference-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(65, 131, 196);\"></a>二、修饰符分类</h2><h3 id=\"h3-2-1-\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.5em; position: relative; line-height: 1.43; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"reference-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(65, 131, 196);\"></a>2.1 访问修饰符</h3><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">访问修饰符用于确定其他类是否可以使用特定字段或调用特定方法。</p><blockquote style=\"box-sizing: border-box; margin: 0px 0px 16px; padding: 0px 15px 0px 20px; border-left: 4px solid rgb(221, 221, 221); font-family: Georgia, &quot;Times New Roman&quot;, Times, Kai, &quot;Kaiti SC&quot;, KaiTi, BiauKai, FontAwesome, serif; color: rgb(102, 102, 102); font-size: 14px; font-style: italic; white-space: normal;\"><ul style=\"box-sizing: border-box; padding: 0px 0px 0px 2em;\" class=\" list-paddingleft-2\"><li><p>public：表示任何类均可访问。</p></li><li><p>default：缺省，即什么都不写。表示在同一个包的类均可访问。</p></li><li><p>protected：表示同一个包的类均可访问，其他包中该类的子类也可以访问。</p></li><li><p>private：表示直有该类自己可以访问。</p></li></ul></blockquote><table width=\"950\"><thead style=\"box-sizing: border-box;\"><tr style=\"box-sizing: border-box; background-color: rgb(248, 248, 248); border-top: 1px solid rgb(204, 204, 204);\" class=\"firstRow\"><th style=\"box-sizing: border-box; padding: 6px 13px; text-align: center; border-top-color: rgb(221, 221, 221);\">修饰符</th><th style=\"box-sizing: border-box; padding: 6px 13px; text-align: center; border-top-color: rgb(221, 221, 221);\">类</th><th style=\"box-sizing: border-box; padding: 6px 13px; text-align: center; border-top-color: rgb(221, 221, 221);\">包</th><th style=\"box-sizing: border-box; padding: 6px 13px; text-align: center; border-top-color: rgb(221, 221, 221);\">子类</th><th style=\"box-sizing: border-box; padding: 6px 13px; text-align: center; border-top-color: rgb(221, 221, 221);\">外部</th></tr></thead><tbody style=\"box-sizing: border-box;\"><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(204, 204, 204);\"><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">public</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(248, 248, 248); border-top: 1px solid rgb(204, 204, 204);\"><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">protected</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">N</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(204, 204, 204);\"><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">default</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">N</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">N</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(248, 248, 248); border-top: 1px solid rgb(204, 204, 204);\"><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">private</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">N</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">N</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">N</td></tr></tbody></table><h3 id=\"h3-2-2-\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.5em; position: relative; line-height: 1.43; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"reference-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(65, 131, 196);\"></a>2.2 非访问修饰符</h3><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">非访问修饰符用于实现一些特定的功能。<br style=\"box-sizing: border-box;\"/>以下是非访问修饰符的一些简要介绍，*表示较少使用。</p><ul style=\"box-sizing: border-box; margin-bottom: 16px; padding: 0px 0px 0px 2em; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\" class=\" list-paddingleft-2\"><li><p style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 16px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">static</span></p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 16px;\">静态变量<br style=\"box-sizing: border-box;\"/>static用来修饰一个类变量时，该类变量被称为静态变量。静态变量表示无论一个类实例化多少对象，它的静态变量只有一份拷贝。另外局部变量不能够被static修饰。</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">&nbsp;&nbsp;public&nbsp;class&nbsp;StaticTest1&nbsp;{\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;int&nbsp;DEFAULT_VALUE&nbsp;=&nbsp;1;\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//[out]:&nbsp;1\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(StaticTest1.DEFAULT_VALUE);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//[error]:&nbsp;modifier&nbsp;&#39;static&#39;&nbsp;not&nbsp;allowed&nbsp;here\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//static&nbsp;int&nbsp;i&nbsp;=&nbsp;1;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;}</pre></li><li><p style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 16px;\">静态方法<br style=\"box-sizing: border-box;\"/>static用来修饰一个类方法时，该类方法被称为静态方法。静态方法表示该方法属于声明它的类。</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">public&nbsp;class&nbsp;StaticTest2&nbsp;{\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;String&nbsp;staticMethodName()&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;&quot;static&nbsp;method&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//[out]:&nbsp;static&nbsp;method\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(StaticTest2.staticMethodName());\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;StaticTest2&nbsp;s&nbsp;=&nbsp;new&nbsp;StaticTest2();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//[out]:&nbsp;static&nbsp;method\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//[hint]:&nbsp;static&nbsp;member&nbsp;accessed&nbsp;via&nbsp;instance&nbsp;reference\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(s.staticMethodName());\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre></li></ul><li><p style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 16px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">final</span></p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 16px;\">final变量<br style=\"box-sizing: border-box;\"/>final 变量能被显式地初始化并且只能初始化一次。被声明为 final 的对象的引用不能指向不同的对象。但是 final 对象里的数据可以被改变。也就是说 final 对象的引用不能改变，但是里面的值可以改变。</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">public&nbsp;class&nbsp;FinalTest1&nbsp;{\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;final&nbsp;int&nbsp;i&nbsp;=&nbsp;1;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//[error]:&nbsp;cannot&nbsp;assign&nbsp;a&nbsp;value&nbsp;to&nbsp;final&nbsp;variable&nbsp;&#39;i&#39;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//i&nbsp;=&nbsp;2;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre></li><li><p>final方法<br style=\"box-sizing: border-box;\"/>final方法可以被子类继承，但是不能被子类修改。</p></li><li><p>final类<br style=\"box-sizing: border-box;\"/>final类不能够被继承。</p></li></ul><li><p style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 16px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">abstract</span></p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 16px;\">抽象方法<br style=\"box-sizing: border-box;\"/>抽象方法是一种没有任何实现的方法，该方法的的具体实现由子类提供。</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">public&nbsp;abstract&nbsp;class&nbsp;AbstractTest1&nbsp;{\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;nonAbstractMethod()&nbsp;{}\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;abstract&nbsp;void&nbsp;abstractMethod();\r\n\r\n}</pre></li><li><p>抽象类<br style=\"box-sizing: border-box;\"/>抽象类不能用来实例化对象，声明抽象类的唯一目的是为了将来对该类进行扩充。另外抽象类中允许存在非抽象的方法。</p></li></ul><li><p><span style=\"box-sizing: border-box; font-weight: 700;\">synchronized</span></p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>synchronized声明的方法同一时间只能被一个线程访问。也就是说如果某一个任务处于对一个synchronized方法的调用中，那么在这个线程从该方法返回前，其他所有调用该类中任何标记为synchronized方法的线程都会被阻塞。</p></li></ul><li><p><span style=\"box-sizing: border-box; font-weight: 700;\">volatile</span></p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>volatile确保了应用中的可视性，如果一个域被声明为volatile的，那么只要对这个域产生了写操作，那么所有的读操作就都可以看到这个修改。<br style=\"box-sizing: border-box;\"/>但是值得注意的是，使用volatile而不是synchronized的唯一安全的情况是类中只有一个可变域。所以第一选择应该是synchronized，这是最安全的方式。</p></li></ul><li><p><span style=\"box-sizing: border-box; font-weight: 700;\">transient*</span></p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>序列化的对象包含被 transient 修饰的实例变量时，java 虚拟机(JVM)跳过该特定的变量。<br style=\"box-sizing: border-box;\"/>简而言之就是被transient修饰的实例变量，不会被序列化与反序列化。</p></li></ul><li><p><span style=\"box-sizing: border-box; font-weight: 700;\">native*</span></p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>native关键字说明其修饰的方法是一个原生态方法，方法对应的实现不是在当前文件，而是在用其他语言（如C和C++）实现的文件中。</p></li></ul><li><p><span style=\"box-sizing: border-box; font-weight: 700;\">strictfp*</span></p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>strictfp代表FP-strict，表明精确浮点数。<br style=\"box-sizing: border-box;\"/>使用了strictfp来声明一个 类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果你想让你的浮点运算更加精确， 而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。</p></li></ul></ul><h2 id=\"h2--\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.75em; padding-bottom: 0.3em; border-bottom: 1px solid rgb(238, 238, 238); position: relative; line-height: 1.225; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"reference-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(65, 131, 196);\"></a>三、修饰符的使用</h2><h3 id=\"h3-3-1-\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.5em; position: relative; line-height: 1.43; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"reference-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(65, 131, 196);\"></a>3.1 使用范围</h3><table width=\"950\"><thead style=\"box-sizing: border-box;\"><tr style=\"box-sizing: border-box; background-color: rgb(248, 248, 248); border-top: 1px solid rgb(204, 204, 204);\" class=\"firstRow\"><th style=\"box-sizing: border-box; padding: 6px 13px; text-align: center; border-top-color: rgb(221, 221, 221);\">-</th><th style=\"box-sizing: border-box; padding: 6px 13px; text-align: center; border-top-color: rgb(221, 221, 221);\">public</th><th style=\"box-sizing: border-box; padding: 6px 13px; text-align: center; border-top-color: rgb(221, 221, 221);\">protected</th><th style=\"box-sizing: border-box; padding: 6px 13px; text-align: center; border-top-color: rgb(221, 221, 221);\">private</th><th style=\"box-sizing: border-box; padding: 6px 13px; text-align: center; border-top-color: rgb(221, 221, 221);\">static</th><th style=\"box-sizing: border-box; padding: 6px 13px; text-align: center; border-top-color: rgb(221, 221, 221);\">final</th><th style=\"box-sizing: border-box; padding: 6px 13px; text-align: center; border-top-color: rgb(221, 221, 221);\">abstract</th><th style=\"box-sizing: border-box; padding: 6px 13px; text-align: center; border-top-color: rgb(221, 221, 221);\">synchronized</th><th style=\"box-sizing: border-box; padding: 6px 13px; text-align: center; border-top-color: rgb(221, 221, 221);\">volatile</th><th style=\"box-sizing: border-box; padding: 6px 13px; text-align: center; border-top-color: rgb(221, 221, 221);\">transient</th><th style=\"box-sizing: border-box; padding: 6px 13px; text-align: center; border-top-color: rgb(221, 221, 221);\">native</th><th style=\"box-sizing: border-box; padding: 6px 13px; text-align: center; border-top-color: rgb(221, 221, 221);\">strictfp</th></tr></thead><tbody style=\"box-sizing: border-box;\"><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(204, 204, 204);\"><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">类</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(248, 248, 248); border-top: 1px solid rgb(204, 204, 204);\"><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">接口</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(204, 204, 204);\"><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">构造方法</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td></tr><tr style=\"box-sizing: border-box; background-color: rgb(248, 248, 248); border-top: 1px solid rgb(204, 204, 204);\"><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">其他方法</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(204, 204, 204);\"><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">field</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td></tr><tr style=\"box-sizing: border-box; background-color: rgb(248, 248, 248); border-top: 1px solid rgb(204, 204, 204);\"><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">参数</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td></tr></tbody></table><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">注：</p><ol style=\"box-sizing: border-box; margin-bottom: 16px; padding: 0px 0px 0px 2em; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\" class=\" list-paddingleft-2\"><li><p>对类使用static的情况仅在内部类中出现。</p></li><li><p>对接口使用abstract并没有什么实际意义，因为接口中的方法默认为public abstract的。</p></li></ol><h3 id=\"h3-3-2-\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.5em; position: relative; line-height: 1.43; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"reference-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(65, 131, 196);\"></a>3.2 顺序</h3><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">修饰符的顺序并没有强制要求，但是有一定的习惯顺序，形成了现在的规范。<br style=\"box-sizing: border-box;\"/>在google的习惯用法中有如下顺序：</p><blockquote style=\"box-sizing: border-box; margin: 0px 0px 16px; padding: 0px 15px 0px 20px; border-left: 4px solid rgb(221, 221, 221); font-family: Georgia, &quot;Times New Roman&quot;, Times, Kai, &quot;Kaiti SC&quot;, KaiTi, BiauKai, FontAwesome, serif; color: rgb(102, 102, 102); font-size: 14px; font-style: italic; white-space: normal;\"><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">public / protected / private<br style=\"box-sizing: border-box;\"/>abstract<br style=\"box-sizing: border-box;\"/>static<br style=\"box-sizing: border-box;\"/>final<br style=\"box-sizing: border-box;\"/>transient<em style=\"box-sizing: border-box;\">&nbsp;<br style=\"box-sizing: border-box;\"/>volatile<br style=\"box-sizing: border-box;\"/>synchronized<br style=\"box-sizing: border-box;\"/>native<br style=\"box-sizing: border-box;\"/>strictfp*</em></p></blockquote><h2 id=\"h2--\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.75em; padding-bottom: 0.3em; border-bottom: 1px solid rgb(238, 238, 238); position: relative; line-height: 1.225; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"reference-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(65, 131, 196);\"></a>四、参考链接</h2><ol style=\"box-sizing: border-box; padding: 0px 0px 0px 2em; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\" class=\" list-paddingleft-2\"><li><p>JavaTree<br style=\"box-sizing: border-box;\"/><a href=\"http://javatree.cn/chapter/e4f0c1e42cab4801898a39f15c034b8e?roadmapId=b316fff599244da3864913bb064f90b5\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-decoration-line: none; color: rgb(65, 131, 196);\">http://javatree.cn/chapter/e4f0c1e42cab4801898a39f15c034b8e?roadmapId=b316fff599244da3864913bb064f90b5</a></p></li><li><p>《Google Java Style Guide》<br style=\"box-sizing: border-box;\"/><a href=\"https://google.github.io/styleguide/javaguide.html#s4.8.7-modifiers\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-decoration-line: none; color: rgb(65, 131, 196);\">https://google.github.io/styleguide/javaguide.html#s4.8.7-modifiers</a></p></li></ol><p><br/></p>',1529492557,1,19,1,14,'Vermouth','Java基本语法'),(15,'2018-06-20/5b2a339db18d0.png','基于Quartz实现定时任务-框架学习','<h1 id=\"h1-quartz-\" style=\"box-sizing: border-box; margin-right: 0px; margin-bottom: 16px; margin-left: 0px; font-size: 2.25em; padding-bottom: 0.3em; border-bottom: 1px solid rgb(238, 238, 238); position: relative; line-height: 1.2; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal; margin-top: 0px !important;\">Quartz笔记</h1><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">最近碰到了一个场景，需要能够在指定时间执行任务，比如每周周六周日的3点开启一个服务，那么总不能说，把以后的每个周六周日的日期列出来让程序执行吧，所以就百度了一下找到了这么一个开源框架，Qartz，这个东西上手还是蛮简单的，所以打算记录下来</p><h2 id=\"h2-u914Du7F6E\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.75em; padding-bottom: 0.3em; border-bottom: 1px solid rgb(238, 238, 238); position: relative; line-height: 1.225; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"reference-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(65, 131, 196);\"></a>配置</h2><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">maven的话，比较容易，就添加上项目依赖就好了</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--&nbsp;https://mvnrepository.com/artifact/org.quartz-scheduler/quartz&nbsp;--&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;dependency&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;groupId&gt;org.quartz-scheduler&lt;/groupId&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;artifactId&gt;quartz&lt;/artifactId&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;version&gt;2.2.1&lt;/version&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/dependency&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;dependency&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;groupId&gt;org.quartz-scheduler&lt;/groupId&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;artifactId&gt;quartz-jobs&lt;/artifactId&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;version&gt;2.2.1&lt;/version&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/dependency&gt;</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">emmm，maven仓库能搜到的最新的是2.3.0的，但是官网都没出教程= =所以我还是选择了2.2.1，怂一点总没错，况且需要功能不多。</p><h2 id=\"h2-u914Du7F6Eu6587u4EF6\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.75em; padding-bottom: 0.3em; border-bottom: 1px solid rgb(238, 238, 238); position: relative; line-height: 1.225; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"reference-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(65, 131, 196);\"></a>配置文件</h2><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">这个比较简单，就在resources文件夹里面放一个名字叫<code style=\"box-sizing: border-box; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; padding: 3px; color: rgb(199, 37, 78); background: rgb(246, 246, 246); white-space: pre-wrap; border-radius: 3px; margin: 0px 4px 0px 5px; border: 1px solid rgb(221, 221, 221); word-break: break-all !important;\">quartz.properties</code>的文件，然后里面写几句话：</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">org.quartz.scheduler.instanceName&nbsp;=&nbsp;MyScheduler\r\norg.quartz.threadPool.threadCount&nbsp;=&nbsp;3\r\norg.quartz.jobStore.class&nbsp;=&nbsp;org.quartz.simpl.RAMJobStore</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">那么第一个就是名字，第二个是最大线程数，就跟那个，线程池一样的东西，第三个是存储方式，他好像是可以把任务存到数据库，也可以存到RAM，我们最终的希望还是存到数据库的，但是RAM是新手教程的方式，所以我就先试试RAM，后面再转JDBC。</p><h2 id=\"h2-u8FD0u884C\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.75em; padding-bottom: 0.3em; border-bottom: 1px solid rgb(238, 238, 238); position: relative; line-height: 1.225; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"reference-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(65, 131, 196);\"></a>运行</h2><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">这应该是我碰到的最简单的运行方式了</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">public&nbsp;class&nbsp;Scheduler&nbsp;implements&nbsp;Runnable{\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;org.quartz.Scheduler&nbsp;scheduler;\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;@Override\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;run()&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Grab&nbsp;the&nbsp;TaskHandler&nbsp;instance&nbsp;from&nbsp;the&nbsp;Factory\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scheduler&nbsp;=&nbsp;StdSchedulerFactory.getDefaultScheduler();\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;and&nbsp;start&nbsp;it&nbsp;off\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scheduler.start();\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;catch&nbsp;(SchedulerException&nbsp;se)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;se.printStackTrace();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">获得一个默认的Scheduler，然后start就行了</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">然后你就能看到这个：<br style=\"box-sizing: border-box;\"/><img src=\"http://img.blog.csdn.net/20171204203357248?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYTYxMDYxNjg5OA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"这里写图片描述\" style=\"box-sizing: border-box; vertical-align: middle; border: 0px; max-width: 100%;\"/>&nbsp;<br style=\"box-sizing: border-box;\"/>就启动完成啦</p><h3 id=\"h3-u521Bu5EFAu4E00u4E2Au4EFBu52A1\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.5em; position: relative; line-height: 1.43; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"reference-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(65, 131, 196);\"></a>创建一个任务</h3><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">他的一个任务是叫做，job，顾名思义，就是任务，比如该咋干活，然后啥的，主要是一个任务流程问题，那么我们看一下内部。</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">public&nbsp;interface&nbsp;Job&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;execute(JobExecutionContext&nbsp;var1)&nbsp;throws&nbsp;JobExecutionException;\r\n}</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">内部非常简单，一个execute就行啦，所以我们需要做的，就是实现这个任务</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">public&nbsp;class&nbsp;MyJob&nbsp;implements&nbsp;Job&nbsp;{\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;@Override\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;execute(JobExecutionContext&nbsp;jobExecutionContext)&nbsp;throws&nbsp;JobExecutionException&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;fin&#39;s&nbsp;job&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">我们就创建了一个job，那么当要执行这个任务的时候，就会执行execute了！所以说我们只需要定义好这个execute，就能正确执行我们想要的东西了。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">那么这个job怎么放到任务里，他有个builder模式，名称为<code style=\"box-sizing: border-box; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; padding: 3px; color: rgb(199, 37, 78); background: rgb(246, 246, 246); white-space: pre-wrap; border-radius: 3px; margin: 0px 4px 0px 5px; border: 1px solid rgb(221, 221, 221); word-break: break-all !important;\">org.quartz.JobBuilder</code>，那么我们可以通过这个来构造一个job</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">&nbsp;JobDetail&nbsp;jobDetail&nbsp;=&nbsp;JobBuilder.newJob(MyJob.class).build();</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">JobDetail就是我们需要执行的一个任务了，他是通过JobBuilder类的newJob静态方法，将我们实例化的Job给构建出来，然后build后生成我们需要的JobDetail对象。</p><h3 id=\"h3-job-\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.5em; position: relative; line-height: 1.43; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"reference-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(65, 131, 196);\"></a>Job传值</h3><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">job的builder可以使用<code style=\"box-sizing: border-box; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; padding: 3px; color: rgb(199, 37, 78); background: rgb(246, 246, 246); white-space: pre-wrap; border-radius: 3px; margin: 0px 4px 0px 5px; border: 1px solid rgb(221, 221, 221); word-break: break-all !important;\">usingJobData</code>方法来进行传值，那么这个东西在框架中被称作：JobDataMap，还是很明显，意思是任务数据map，usingJobData可以理解成Map.put()，前面是key，后面是value。</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">JobDetail&nbsp;jobDetail&nbsp;=&nbsp;JobBuilder.newJob(MyJob.class)\r\n&nbsp;&nbsp;&nbsp;&nbsp;.usingJobData(&quot;name&quot;,&quot;finQQ&quot;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;.build();</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">那么我们怎么获得这个值。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">只需要这句话：</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Map&nbsp;map&nbsp;=&nbsp;jobExecutionContext.getJobDetail().getJobDataMap();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(map.get(&quot;name&quot;)&nbsp;+&nbsp;&quot;&#39;s&nbsp;job&quot;);</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">这样就获得了我们需要的数据。同样，builder里面还有很多函数可以供我们选择。</p><h3 id=\"h3-u89E6u53D1u5668\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.5em; position: relative; line-height: 1.43; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"reference-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(65, 131, 196);\"></a>触发器</h3><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">刚刚Job是做什么，那么Trigger就是什么时候做，我们最需要的就是这个Trigger</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">创建Trigger也是通过所谓的TriggerBuilder来建立</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">Trigger&nbsp;trigger&nbsp;=&nbsp;TriggerBuilder.newTrigger()\r\n&nbsp;&nbsp;&nbsp;&nbsp;.startNow()\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.withSchedule(simpleSchedule()\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.withIntervalInSeconds(40)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.repeatForever())\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.build();</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">上面就是创建一个触发器。</p><ul style=\"box-sizing: border-box; margin-bottom: 16px; padding: 0px 0px 0px 2em; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\" class=\" list-paddingleft-2\"><li><p>startNow 现在开始</p></li><li><p>withSchedule 日程表，这个就是决定我们什么时候做什么的，有SimpleSchedule还有CronSchedule，这个就是创建一个每40秒循环一次然后循环到死的普通日程表</p></li><li><p>build 构建开始</p></li></ul><h3 id=\"h3-schedule\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.5em; position: relative; line-height: 1.43; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(65, 131, 196);\" name=\"Schedule\"></a>Schedule</h3><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">Cronschedule应该是我需要的那种，所以晚点会专门研究一下。。</p><h3 id=\"h3-u6700u540Eu4E00u6B65\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.5em; position: relative; line-height: 1.43; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"reference-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(65, 131, 196);\"></a>最后一步</h3><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">添加我们的job和trigger到工作区</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">scheduler.scheduleJob(jobDetail,&nbsp;trigger);</pre><p><br/></p>',1529492381,1,22,1,15,'fin棋','Java技术起步'),(16,'2018-06-19/5b28b2c542141.jpg','阿里云TOMCAT启动慢, java.security.KeyException, SMTP邮件无法发出等部署问题','<p style=\"box-sizing: border-box; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal; margin-top: 0px !important;\">阿里云ECS安装CentOS, 安装Open JDK是方便些, 却潜在一些问题。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">1.Tomcat启动慢, 感觉启动要用1-2分钟, 日志一直卡着。<br style=\"box-sizing: border-box;\"/>参考<a href=\"https://www.jianshu.com/p/576d356dc163\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-decoration-line: none; color: rgb(65, 131, 196);\">https://www.jianshu.com/p/576d356dc163</a><br style=\"box-sizing: border-box;\"/>安装 rngd-tools 或rng-tools</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">也可以尝试换为Oracle的JDK, 可能会官方实现不同。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">2.使用URLConnection设置trust all进行https请求, ECKeyPairGenerator.generateKeyPair会抛出java.security.KeyException, 而本地windows oracle JDK开发版本是没问题的。<br style=\"box-sizing: border-box;\"/>参考&nbsp;<a href=\"https://blog.csdn.net/zealvampire/article/details/48298825\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-decoration-line: none; color: rgb(65, 131, 196);\">https://blog.csdn.net/zealvampire/article/details/48298825</a><br style=\"box-sizing: border-box;\"/>升级下libnss得到解决, 而Oracle JDK不存在这个问题。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">3.阿里云SMTP无法发送成功<br style=\"box-sizing: border-box;\"/>服务器telnet邮件服务器25端口都是无法登录的, 这个是阿里云的默认的限制。<br style=\"box-sizing: border-box;\"/>参考&nbsp;<a href=\"https://yq.aliyun.com/ask/47591\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-decoration-line: none; color: rgb(65, 131, 196);\">https://yq.aliyun.com/ask/47591</a></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">Spring的组件额外设置下SSL属性, 邮件服务器使用465端口的即可。<br style=\"box-sizing: border-box;\"/><a href=\"https://github.com/Bean\" class=\"at-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-decoration-line: none; color: rgb(65, 131, 196);\">@Bean</a><br style=\"box-sizing: border-box;\"/>public JavaMailSender javaMailSender() {<br style=\"box-sizing: border-box;\"/>Environment env = envrionment();<br style=\"box-sizing: border-box;\"/>JavaMailSenderImpl sender = new JavaMailSenderImpl();<br style=\"box-sizing: border-box;\"/>sender.setHost(env.getProperty(“mail.smtp_host”));<br style=\"box-sizing: border-box;\"/>sender.setPort(env.getIntProperty(“mail.smtp_port”));<br style=\"box-sizing: border-box;\"/>sender.setUsername(env.getProperty(“mail.smtp_user”));<br style=\"box-sizing: border-box;\"/>sender.setPassword(env.getProperty(“mail.smtp_pwd”));<br style=\"box-sizing: border-box;\"/>sender.setDefaultEncoding(“UTF-8”);<br style=\"box-sizing: border-box;\"/>Properties prop = new Properties();<br style=\"box-sizing: border-box;\"/>prop.setProperty(“mail.smtp.socketFactory.class”, “javax.net.ssl.SSLSocketFactory”);<br style=\"box-sizing: border-box;\"/>sender.setJavaMailProperties(prop);<br style=\"box-sizing: border-box;\"/>return sender;<br style=\"box-sizing: border-box;\"/>}</p><p style=\"box-sizing: border-box; margin-top: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal; margin-bottom: 0px !important;\">Enjoy It</p><p><br/></p>',1537186873,1,40,1,16,'POT1','Java基本语法');

#
# Structure for table "e_lin"
#

CREATE TABLE `e_lin` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `aa` varchar(255) NOT NULL COMMENT '简介',
  `b` varchar(255) NOT NULL COMMENT '亮 点',
  `c` varchar(255) NOT NULL COMMENT '活动时间',
  `d` varchar(255) NOT NULL COMMENT ' 流程',
  `e` varchar(255) NOT NULL COMMENT ' 流程',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 COMMENT='武汉大学联系我们';

#
# Data for table "e_lin"
#

INSERT INTO `e_lin` VALUES (1,'( 027）68754231','湖北省武汉市武昌区武汉大学国际软件学院','430079','8888888','bdcclab@sina.com');

#
# Structure for table "e_navigation"
#

CREATE TABLE `e_navigation` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `is_show` int(10) NOT NULL DEFAULT '1' COMMENT '1显示0不显示',
  `sort` int(10) NOT NULL DEFAULT '100',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=11 DEFAULT CHARSET=utf8 COMMENT='武汉大学网站导航';

#
# Data for table "e_navigation"
#

INSERT INTO `e_navigation` VALUES (1,'Course introduction',1,1),(2,'Teaching team',1,2),(3,'Teaching program',1,3),(4,'Course content',1,4),(6,'Technical Frontiers',0,6),(8,'Contact us',0,8);

#
# Structure for table "e_new"
#

CREATE TABLE `e_new` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `img` varchar(255) NOT NULL,
  `title` varchar(255) NOT NULL COMMENT '标题',
  `content` text NOT NULL,
  `create` int(20) NOT NULL,
  `is_show` int(2) NOT NULL DEFAULT '1' COMMENT '1  显示  0 不显示',
  `view` varchar(250) NOT NULL,
  `is_s` int(2) NOT NULL DEFAULT '0',
  `sort` int(10) NOT NULL DEFAULT '10',
  `zz` varchar(255) DEFAULT NULL,
  `ly` varchar(255) DEFAULT NULL,
  `pid` int(10) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=74 DEFAULT CHARSET=utf8 COMMENT='武汉大学课程相关新闻';

#
# Data for table "e_new"
#

INSERT INTO `e_new` VALUES (50,'','1. Java数字操作','<p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">java.lang下的类编译器可以直接识别 , 无需 import java.lang.*; &nbsp; 基础的类都在这个 package 下 , 开发代码每天必用 , 须熟练掌握 , 先来个 Hello World 。<br style=\"box-sizing: border-box;\"/></p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, FontAwesome, monospace; font-size: 1.3rem; margin-top: 1rem; margin-bottom: 1rem; padding: 1rem; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: rgb(85, 85, 85); border: 1px solid rgb(222, 222, 222); border-radius: 0px;\">package&nbsp;com.luoying.javatree.sample.lang;\r\n&nbsp;\r\n/**\r\n&nbsp;*&nbsp;@author&nbsp;Zeal\r\n&nbsp;*&nbsp;@since&nbsp;2016年12月11日\r\n&nbsp;*/\r\npublic&nbsp;class&nbsp;HelloJavaLang&nbsp;{\r\n\r\n/**\r\n&nbsp;*&nbsp;Just&nbsp;say&nbsp;hi\r\n&nbsp;*&nbsp;@throws&nbsp;Exception\r\n&nbsp;*/\r\npublic&nbsp;void&nbsp;helloWorld()&nbsp;throws&nbsp;Exception&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;//java.lang.String默认识别了,无需import&nbsp;java.lang.String\r\n&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;str&nbsp;=&nbsp;&quot;Java&nbsp;Tree&nbsp;Kick&nbsp;Off&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(str);\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;//编译器默认只是识别java.lang下的类,&nbsp;再下一层的子package则需要手工import&nbsp;java.lang.reflect.Method;\r\n&nbsp;&nbsp;&nbsp;&nbsp;//这里直接使用完整类名路径\r\n&nbsp;&nbsp;&nbsp;&nbsp;java.lang.reflect.Method&nbsp;&nbsp;method&nbsp;=&nbsp;String.class.getMethod(&quot;indexOf&quot;,&nbsp;int.class);\r\n&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(method.getName());\r\n}\r\npublic&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args)&nbsp;throws&nbsp;Exception&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;HelloJavaLang&nbsp;test&nbsp;=&nbsp;new&nbsp;HelloJavaLang();\r\n&nbsp;&nbsp;&nbsp;&nbsp;test.helloWorld();\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre><p><br/></p>',1510070400,1,'',1,1,'POT','Java基本语法',1),(51,'','java.util介绍','<p><span class=\"zrd-lineblock zrd-chap-as-h\" style=\"box-sizing: border-box; display: inline-block; font-size: 24px; margin-top: 15px;\">1. java.util介绍</span></p><hr class=\"am-divider am-divider-default\" style=\"box-sizing: content-box; margin: 1.5rem auto; padding: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; border-image: initial; height: 0px; border-top-style: solid; border-top-color: rgb(221, 221, 221); clear: both;\"/><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-size: 15px; text-indent: 29px;\">Dears,&nbsp;</span><span style=\"box-sizing: border-box; font-size: 15px; text-indent: 29px;\">经过</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 15px; text-indent: 29px; font-family: Tahoma;\">java.lang</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 15px; text-indent: 29px;\">的学习</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 15px; text-indent: 29px; font-family: Tahoma;\">,&nbsp;</span><span style=\"box-sizing: border-box; font-size: 15px; text-indent: 29px;\">我们可以简单的处理下数字和字符串</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 15px; text-indent: 29px; font-family: Tahoma;\">, &nbsp;</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 15px; text-indent: 29px;\">而实际工作当中</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 15px; text-indent: 29px; font-family: Tahoma;\">,&nbsp;</span><span style=\"box-sizing: border-box; font-size: 15px; text-indent: 29px;\">我们对于数据进行聚合，拆分和处理</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 15px; text-indent: 29px; font-family: Tahoma;\">,&nbsp;</span><span style=\"box-sizing: border-box; font-size: 15px; text-indent: 29px;\">我们需要有学习一定的数据结构。</span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-size: 15px;\"><span style=\"box-sizing: border-box;\">单靠数组整合数据还未必足够</span>,&nbsp;<span style=\"box-sizing: border-box;\">因为数组是有界的， 总要自己拷贝扩容也影响编码效率。&nbsp;</span><span style=\"box-sizing: border-box; font-family: Tahoma;\">Java</span>&nbsp;<span style=\"box-sizing: border-box;\">语言的口碑</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">, &nbsp;</span>&nbsp;<span style=\"box-sizing: border-box;\">和其优秀的集合框架</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">(java collection framework)</span>&nbsp;<span style=\"box-sizing: border-box;\">，工具类设计是分不开的，</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">java.util</span>&nbsp;<span style=\"box-sizing: border-box;\">也是面试重点。下图是集合的关系图</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">我们继续。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><img src=\"http://www.javatree.cn/file-server/c/b2fa4306c86c456dbe79c807c5b57dcf.png\" title=\"b2fa4306c86c456dbe79c807c5b57dcf.png\" alt=\"image.png\" style=\"box-sizing: border-box; vertical-align: middle; border: 0px; max-width: 100%;\"/></p><p><br/></p>',1529483891,1,'',0,10,'POT','Java基本语法',9),(52,'','1. java.io文件类','<p><span class=\"zrd-lineblock zrd-chap-as-h\" style=\"box-sizing: border-box; display: inline-block; font-size: 24px; margin-top: 15px;\">1. java.io文件类</span></p><hr class=\"am-divider am-divider-default\" style=\"box-sizing: content-box; margin: 1.5rem auto; padding: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; border-image: initial; height: 0px; border-top-style: solid; border-top-color: rgb(221, 221, 221); clear: both;\"/><h3 style=\"box-sizing: border-box; margin: 0px 0px 1.6rem; font-size: 16px;\"><strong style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 21px;\">1.1 java.io.File<span style=\"box-sizing: border-box;\">文件</span></span></strong>&nbsp;<strong style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 21px;\"><span style=\"box-sizing: border-box;\">类</span></span></strong></h3><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">java.io.File<span style=\"box-sizing: border-box;\">是一个文件或路径的抽象</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 15px;\">,&nbsp;<span style=\"box-sizing: border-box;\">一些常用方法</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">.</span></span></p><table width=\"568\"><tbody style=\"box-sizing: border-box;\"><tr class=\"firstRow\" style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">方法<span style=\"box-sizing: border-box; font-family: Tahoma;\">/</span>&nbsp;<span style=\"box-sizing: border-box;\">属性</span></span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-left: none; border-top-color: windowtext; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">描述</span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">File(String pathname)</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">构造方法<span style=\"box-sizing: border-box; font-family: Tahoma;\">,</span>&nbsp;<span style=\"box-sizing: border-box;\">可以为绝对路径或相对路径</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">File(String parent, String child)</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">构造方法<span style=\"box-sizing: border-box; font-family: Tahoma;\">,</span>&nbsp;<span style=\"box-sizing: border-box;\">指定父目录和子路径</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">File(File parent, String child)</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">构造方法<span style=\"box-sizing: border-box; font-family: Tahoma;\">,</span>&nbsp;<span style=\"box-sizing: border-box;\">指定父子路径</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">父为</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">File</span>&nbsp;<span style=\"box-sizing: border-box;\">参数</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">File(URI uri)</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">URI&nbsp;<span style=\"box-sizing: border-box;\">例如</span></span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\"><a rel=\"nofollow\" style=\"box-sizing: border-box; color: rgb(14, 144, 210);\">file://c:/Windows</a></span>初始化为<span style=\"box-sizing: border-box; font-size: 15px;\">File</span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">String getName()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">返回文件或文件夹名称</span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">String getParent()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">返回父目录路径</span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">File getParentFile()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">返回父目录<span style=\"box-sizing: border-box; font-family: Tahoma;\">File</span>&nbsp;<span style=\"box-sizing: border-box;\">对象</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">String getPath()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">返回绝对路径或相对路径<span style=\"box-sizing: border-box; font-family: Tahoma;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">取决于是否</span></span><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">&nbsp;路径或相对路径初始化</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 15px;\">,&nbsp;<span style=\"box-sizing: border-box;\">慎用该返回值</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">boolean isAbsolute()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">返回<span style=\"box-sizing: border-box; font-family: Tahoma;\">File</span>&nbsp;<span style=\"box-sizing: border-box;\">的路径是否为绝对路径</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">,&nbsp;</span></span><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">true<span style=\"box-sizing: border-box;\">时为绝对路径</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 15px;\">,&nbsp;</span><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">false<span style=\"box-sizing: border-box;\">应是相对路径</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">String getAbsolutePath()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">返回</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">File<span style=\"box-sizing: border-box;\">的绝对路径</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">File getAbsoluteFile()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">返回绝对路径</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">File<span style=\"box-sizing: border-box;\">对象</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">String getCanonicalPath() throws IOException</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">返回正式的完整路径<span style=\"box-sizing: border-box; font-family: Tahoma;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">与</span></span><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">getAbsolutePath()<span style=\"box-sizing: border-box;\">有区别</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 15px;\">,<span style=\"box-sizing: border-box;\">见</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">Q1</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">File getCanonicalFile() throws IOException</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">返回正式的完整路径<span style=\"box-sizing: border-box; font-family: Tahoma;\">File</span>&nbsp;<span style=\"box-sizing: border-box;\">对象</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">URI toURI()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">转换为<span style=\"box-sizing: border-box; font-family: Tahoma;\">file://</span>&nbsp;<span style=\"box-sizing: border-box;\">的</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">URI</span>&nbsp;<span style=\"box-sizing: border-box;\">对象</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">boolean canRead()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">File<span style=\"box-sizing: border-box;\">是否可读</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">boolean canWrite()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">Fille<span style=\"box-sizing: border-box;\">是否可写</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">boolean exists()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">File<span style=\"box-sizing: border-box;\">是否存在</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">boolean isDirectory()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">File<span style=\"box-sizing: border-box;\">是否为目录</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">boolean isFile()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">File<span style=\"box-sizing: border-box;\">是否为文件</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">boolean isHidden()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">File<span style=\"box-sizing: border-box;\">是否是隐藏的</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">long lastModified()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">获取</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 15px;\">File<span style=\"box-sizing: border-box;\">最近修改时间戳</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">自</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">1970</span>&nbsp;<span style=\"box-sizing: border-box;\">年开始点毫秒数</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">long length()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">返回<span style=\"box-sizing: border-box;\">File</span>&nbsp;<span style=\"box-sizing: border-box;\">字节大小</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 15px;\">,&nbsp;<span style=\"box-sizing: border-box;\">对于文件夹返回长度没意义且不同文件系统结果诡异</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">不存在的</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">File</span>&nbsp;<span style=\"box-sizing: border-box;\">不同文件系统是</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">0</span>&nbsp;<span style=\"box-sizing: border-box;\">或不可预测</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">,</span><span style=\"box-sizing: border-box;\">尽量只用在存在的文件</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">boolean createNewFile()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">自动创建空文件</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 15px;\">,&nbsp;</span><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">仅当该文件不存在才回创建成功</span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">boolean delete()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">删除文件或文件夹</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 15px;\">,<span style=\"box-sizing: border-box;\">如果是文件夹为空的时候才能删除成功</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">vod deleteOnExit()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">JVM<span style=\"box-sizing: border-box;\">退出时删除文件或空文件夹</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">String[] list()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">列出下一级的<span style=\"box-sizing: border-box; font-family: Tahoma;\">File</span>&nbsp;<span style=\"box-sizing: border-box;\">路径数组</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">当前</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">File</span>&nbsp;<span style=\"box-sizing: border-box;\">为文件时返回</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">null,&nbsp;</span><span style=\"box-sizing: border-box;\">返回的字符串数组保证字母升序</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">String[] list(FilenameFilter filter)</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">通过<span style=\"box-sizing: border-box; font-family: Tahoma;\">FilenameFilter</span>&nbsp;<span style=\"box-sizing: border-box;\">过滤器列出下一级的</span><span style=\"box-sizing: border-box; font-family: Tahoma;\">File</span>&nbsp;<span style=\"box-sizing: border-box;\">路径数组</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">File[] listFiles()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">列出下一级的<span style=\"box-sizing: border-box; font-family: Tahoma;\">File[],&nbsp;</span><span style=\"box-sizing: border-box;\">当前</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">File</span>&nbsp;<span style=\"box-sizing: border-box;\">为文件时返回</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">null,&nbsp;</span><span style=\"box-sizing: border-box;\">返回的</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">File</span>&nbsp;<span style=\"box-sizing: border-box;\">数组保证路径字母升序</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">File[] listFiles(FilenameFilter filter)</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">通过<span style=\"box-sizing: border-box; font-family: Tahoma;\">FilenameFilter</span>&nbsp;<span style=\"box-sizing: border-box;\">过滤器列出下一级</span><span style=\"box-sizing: border-box; font-family: Tahoma;\">File[]</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">File[] listFiles(FileFilter filter)</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">通过<span style=\"box-sizing: border-box; font-family: Tahoma;\">FileFilter</span>&nbsp;<span style=\"box-sizing: border-box;\">过滤器列出下一级</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">File[]</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">boolean mkdir()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">创建文件夹<span style=\"box-sizing: border-box; font-family: Tahoma;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">要求文件夹不存在</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">且上一级目录存在</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">才能创建成功</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">boolean mkdirs()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">创建文件夹<span style=\"box-sizing: border-box; font-family: Tahoma;\">,</span>&nbsp;<span style=\"box-sizing: border-box;\">所依赖的多级父目录如果不存在</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">,</span>&nbsp;<span style=\"box-sizing: border-box;\">都会自动创建父目录</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">boolean renameTo(File dest)</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">重命名或移动当前<span style=\"box-sizing: border-box; font-family: Tahoma;\">File</span>&nbsp;<span style=\"box-sizing: border-box;\">到目标</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">File</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">boolean setLastModified(long time)</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">设置最新修改时间<span style=\"box-sizing: border-box; font-family: Tahoma;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">大多操作系统支持到秒</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">boolean setReadOnly()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">设置<span style=\"box-sizing: border-box; font-family: Tahoma;\">File</span>&nbsp;<span style=\"box-sizing: border-box;\">为只读</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">boolean setWritable(boolean writable, boolean ownerOnly)</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">设置<span style=\"box-sizing: border-box; font-family: Tahoma;\">File</span>&nbsp;<span style=\"box-sizing: border-box;\">是否可写</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">, ownerOnly</span>&nbsp;<span style=\"box-sizing: border-box;\">为</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">true</span><span style=\"box-sizing: border-box;\">设置应用到</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">File</span>&nbsp;<span style=\"box-sizing: border-box;\">所有者</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">,</span>&nbsp;<span style=\"box-sizing: border-box;\">否则所有人</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">boolean setReadable(boolean readable, boolean ownerOnly)</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">设置<span style=\"box-sizing: border-box; font-family: Tahoma;\">File</span>&nbsp;<span style=\"box-sizing: border-box;\">是否可读</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">, ownerOnly</span>&nbsp;<span style=\"box-sizing: border-box;\">为</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">true</span><span style=\"box-sizing: border-box;\">设置应用到</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">File</span>&nbsp;<span style=\"box-sizing: border-box;\">所有者</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">,</span>&nbsp;<span style=\"box-sizing: border-box;\">否则所有人</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">boolean setExecutable(boolean executable, boolean ownerOnly)</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">设置<span style=\"box-sizing: border-box; font-family: Tahoma;\">File</span>&nbsp;<span style=\"box-sizing: border-box;\">是否可执行</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">boolean canExecute()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">获取<span style=\"box-sizing: border-box; font-family: Tahoma;\">File</span>&nbsp;<span style=\"box-sizing: border-box;\">是否可执行</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><br/></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><br/></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">static File[] listRoots()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">返回文件系统的多个根目录</span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">long getTotalSpace()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">当前<span style=\"box-sizing: border-box; font-family: Tahoma;\">File</span>&nbsp;<span style=\"box-sizing: border-box;\">所在分区的最大磁盘容量</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">,</span>&nbsp;<span style=\"box-sizing: border-box;\">单位</span><span style=\"box-sizing: border-box; font-family: Tahoma;\">byte</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">long getFreeSpace()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">当前<span style=\"box-sizing: border-box; font-family: Tahoma;\">File</span>&nbsp;<span style=\"box-sizing: border-box;\">所在分区的可用磁盘容量</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">,</span>&nbsp;<span style=\"box-sizing: border-box;\">单位</span><span style=\"box-sizing: border-box; font-family: Tahoma;\">byte</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">long getUsableSpace()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">当前<span style=\"box-sizing: border-box; font-family: Tahoma;\">File</span>&nbsp;<span style=\"box-sizing: border-box;\">所在分区可用磁盘空间</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">如果可能会做额外检查可否可写和操作系统点其他限制</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">会比</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">getFreeSpace()</span>&nbsp;<span style=\"box-sizing: border-box;\">更精准一些</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">static File createTempFile(String prefix, String suffix,File directory)</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">静态方法创建一个临时文件<span style=\"box-sizing: border-box; font-family: Tahoma;\">, prefix</span>&nbsp;<span style=\"box-sizing: border-box;\">长度最小为</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">3, suffix</span>&nbsp;<span style=\"box-sizing: border-box;\">可为</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">null</span>&nbsp;<span style=\"box-sizing: border-box;\">默认为</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">.tmp, directory</span>&nbsp;<span style=\"box-sizing: border-box;\">为</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">null</span>&nbsp;<span style=\"box-sizing: border-box;\">时使用系统默认临时目录</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">int compareTo(File pathname)</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">实现<span style=\"box-sizing: border-box; font-family: Tahoma;\">java.lang.Comparable</span></span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">,<span style=\"box-sizing: border-box;\">默认是按照路径字符比较</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">Path toPath()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">Path<span style=\"box-sizing: border-box;\">是</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">java.nio</span>&nbsp;<span style=\"box-sizing: border-box;\">新</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">IO</span>&nbsp;<span style=\"box-sizing: border-box;\">包下的提供了更多系统级功能的新</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">API, NIO</span>&nbsp;<span style=\"box-sizing: border-box;\">后面高级篇补充</span></span></p></td></tr></tbody></table><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><strong style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">Q1:</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">File<span style=\"box-sizing: border-box;\">的</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 15px;\">getAbsolutePath()<span style=\"box-sizing: border-box;\">和</span></span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">getCanonicalPath()<span style=\"box-sizing: border-box;\">有什么区别</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 15px;\">?</span></strong></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">getCanonicalPath<span style=\"box-sizing: border-box;\">会把绝对路径上的</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 15px;\">.<span style=\"box-sizing: border-box;\">和</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">..</span>&nbsp;<span style=\"box-sizing: border-box;\">等甚至文件链接</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">驱动盘转为标准的值</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">.</span></span></p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, FontAwesome, monospace; font-size: 1.3rem; margin-top: 1rem; margin-bottom: 1rem; padding: 1rem; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: rgb(85, 85, 85); border: 1px solid rgb(222, 222, 222); border-radius: 0px;\">public&nbsp;void&nbsp;testFile()&nbsp;throws&nbsp;&nbsp;Exception&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;File&nbsp;dir&nbsp;=&nbsp;new&nbsp;File(&quot;e:/a/b/c&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(dir.mkdirs());\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;File&nbsp;dir1&nbsp;=&nbsp;new&nbsp;File(&quot;e:/a/b/../&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//输出e:\\a\\b\\..\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(dir1.getAbsolutePath());\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//输出E:\\a\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(dir1.getCanonicalPath());\r\n&nbsp;&nbsp;&nbsp;&nbsp;}</pre><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><strong style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">Q2: File<span style=\"box-sizing: border-box;\">的</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 15px;\">mkdir<span style=\"box-sizing: border-box;\">和</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">mkdirs</span>&nbsp;<span style=\"box-sizing: border-box;\">有什么区别</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">?</span></span></strong></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-size: 15px;\"><span style=\"box-sizing: border-box;\">如</span>Q1<span style=\"box-sizing: border-box;\">例子所示</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">如果</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">File</span>&nbsp;<span style=\"box-sizing: border-box;\">的上级目录不存在</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">,&nbsp;</span></span><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">mkdirs</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 15px;\"><span style=\"box-sizing: border-box;\">则一直往上创建</span>,&nbsp;<span style=\"box-sizing: border-box;\">直到所有上级目录都存在为止</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">;&nbsp;</span><span style=\"box-sizing: border-box;\">而</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">mkdir</span>&nbsp;<span style=\"box-sizing: border-box;\">如果上级目录不存在创建操作会直接失败</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">.</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><strong style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">Q3: File<span style=\"box-sizing: border-box;\">的</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">setReadOnly</span>&nbsp;<span style=\"box-sizing: border-box;\">和</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">setReadable</span>&nbsp;<span style=\"box-sizing: border-box;\">有什么区别</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">?</span></span></strong></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">setReadOnly<span style=\"box-sizing: border-box;\">设置为只读</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 15px;\">,&nbsp;<span style=\"box-sizing: border-box;\">则</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">File</span>&nbsp;<span style=\"box-sizing: border-box;\">不能写</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">, setReadable</span>&nbsp;<span style=\"box-sizing: border-box;\">只是把</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">File</span>&nbsp;<span style=\"box-sizing: border-box;\">的设置为可读或不可读</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">不会影响写属性。</span></span></p><p><br/></p>',1529484008,1,'',0,10,'POT','Java基本语法',16),(53,'','1. java.text包简介','<p><span class=\"zrd-lineblock zrd-chap-as-h\" style=\"box-sizing: border-box; display: inline-block; font-size: 24px; margin-top: 15px;\">1. java.text包简介</span></p><hr class=\"am-divider am-divider-default\" style=\"box-sizing: content-box; margin: 1.5rem auto; padding: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; border-image: initial; height: 0px; border-top-style: solid; border-top-color: rgb(221, 221, 221); clear: both;\"/><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1.6rem;\">java.text包提供以与自然语言无关的方式来处理文本、日期、数字和消息的类和接口。 这意味着所编写的主程序是与语言无关的，并且它可以依靠独立的、动态链接的本地化资源。这实现了随时为新本地化添加本地化的灵活性。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">这些类能够格式化日期、数字和消息、解析、搜索和排序字符串，以及迭代字符、单词、语句和换行符。此包包含类和接口的三大主要组：</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-family: Wingdings; font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;l&nbsp;</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">用于迭代文本的类</span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-family: Wingdings; font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;l&nbsp;</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">用于格式化和分析的类</span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-family: Wingdings; font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;l&nbsp;</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">用于整理字符串的类</span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><img src=\"http://www.javatree.cn/file-server/c/76025e70099341cca7288009d51c9a3d.png\" title=\"76025e70099341cca7288009d51c9a3d.png\" alt=\"image.png\" style=\"box-sizing: border-box; vertical-align: middle; border: 0px; max-width: 100%;\"/></p><p><br/></p>',1529484047,1,'',0,10,'','',19),(54,'','1. Java Bean读取修改','<p><span class=\"zrd-lineblock zrd-chap-as-h\" style=\"box-sizing: border-box; display: inline-block; font-size: 24px; margin-top: 15px;\">1. Java Bean读取修改</span></p><hr class=\"am-divider am-divider-default\" style=\"box-sizing: content-box; margin: 1.5rem auto; padding: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; border-image: initial; height: 0px; border-top-style: solid; border-top-color: rgb(221, 221, 221); clear: both;\"/><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-size: 14px;\">JavaBeans是一种类的规范,</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">&nbsp;<span style=\"box-sizing: border-box;\">是可重用软件组件</span>, 可以使用可视化工具维护的组件，</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">&nbsp;<span style=\"box-sizing: border-box;\">需要遵循关于命名、构造器、方法的特定规范</span>:</span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; margin-left: 28px;\"><span style=\"box-sizing: border-box; font-family: Wingdings; font-size: 14px;\">l&nbsp;</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">编写一个</span>public的无参数构造， 动态生成java&nbsp;</span><span style=\"box-sizing: border-box; font-size: 14px;\">bean默认使用该构造方法</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; margin-left: 28px;\"><span style=\"box-sizing: border-box; font-family: Wingdings; font-size: 14px;\">l&nbsp;</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">属性可以通过</span>get、set、is（可以替代get，用在布尔型属性上）方法或遵循特定命名规范的其他方法访问。</span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; margin-left: 28px;\"><span style=\"box-sizing: border-box; font-family: Wingdings; font-size: 14px;\">l&nbsp;</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">支持消息和属性</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; margin-left: 28px;\"><span style=\"box-sizing: border-box; font-family: Wingdings; font-size: 14px;\">l&nbsp;</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">支持持久化。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">具体可以参考官方文档</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><a href=\"http://www.oracle.com/technetwork/java/javase/documentation/spec-136004.html\" rel=\"nofollow\" style=\"box-sizing: border-box; text-decoration-line: none; color: rgb(14, 144, 210);\"><span style=\"box-sizing: border-box; text-decoration-line: underline;\"><span style=\"box-sizing: border-box; font-family: Calibri; color: rgb(5, 99, 193);\">http://www.oracle.com/technetwork/java/javase/documentation/spec-136004.html</span></span></a></p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, FontAwesome, monospace; font-size: 1.3rem; margin-top: 1rem; margin-bottom: 1rem; padding: 1rem; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: rgb(85, 85, 85); border: 1px solid rgb(222, 222, 222); border-radius: 0px;\">public&nbsp;class&nbsp;User&nbsp;implements&nbsp;Serializable&nbsp;{\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;String&nbsp;id&nbsp;=&nbsp;null;\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;String&nbsp;name&nbsp;=&nbsp;null;\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;int&nbsp;gender&nbsp;=&nbsp;0;\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;Date&nbsp;birthday&nbsp;=&nbsp;null;\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;String&nbsp;invisibleValue&nbsp;=&nbsp;null;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;String&nbsp;getId()&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;id;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;setId(String&nbsp;id)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.id&nbsp;=&nbsp;id;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;String&nbsp;getName()&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;name;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;setName(String&nbsp;name)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.name&nbsp;=&nbsp;name;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;int&nbsp;getGender()&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;gender;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;setGender(int&nbsp;gender)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.gender&nbsp;=&nbsp;gender;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;Date&nbsp;getBirthday()&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;birthday;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;setBirthday(Date&nbsp;birthday)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.birthday&nbsp;=&nbsp;birthday;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;String&nbsp;_test(String&nbsp;test)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;null;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;boolean&nbsp;isDone()&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;introspector()&nbsp;throws&nbsp;Exception&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;User&nbsp;user&nbsp;=&nbsp;new&nbsp;User();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BeanInfo&nbsp;beanInfo&nbsp;=&nbsp;Introspector.getBeanInfo(User.class);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Bean描述BeanDescriptor\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BeanDescriptor&nbsp;beanDesc&nbsp;=&nbsp;beanInfo.getBeanDescriptor();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//java.beans.BeanDescriptor[name=HelloBeans$User;&nbsp;beanClass=class&nbsp;com.javatree.sample.beans.HelloBeans$User]\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(beanDesc.toString());\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//属性描述PropertyDescriptor\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//应该截取set,get,is方法后的属性名,不完全等同于类的属性,例如有getClass()/isDone()方法,&nbsp;却无class和done这个属性&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PropertyDescriptor[]&nbsp;propertyDescs&nbsp;=&nbsp;beanInfo.getPropertyDescriptors();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Random&nbsp;rand&nbsp;=&nbsp;new&nbsp;Random();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(PropertyDescriptor&nbsp;propertyDesc&nbsp;:&nbsp;propertyDescs)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;========================================&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;name=&quot;&nbsp;+&nbsp;propertyDesc.getName());\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;propertyType=&quot;&nbsp;+&nbsp;propertyDesc.getPropertyType());\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;readMethod=&quot;&nbsp;+&nbsp;propertyDesc.getReadMethod());\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;writeMethod=&quot;&nbsp;+&nbsp;propertyDesc.getWriteMethod());\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;writeMethod=&quot;&nbsp;+&nbsp;propertyDesc.getWriteMethod());\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;propertyEditorClass=&quot;&nbsp;+&nbsp;propertyDesc.getPropertyEditorClass());\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//动态设值\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(&quot;name&quot;.equals(propertyDesc.getName()))&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;propertyDesc.getWriteMethod().invoke(user,&nbsp;&quot;小黑&quot;&nbsp;+&nbsp;rand.nextInt(100));//属性名可以是别名\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(user.getName());\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//方法描述\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;========================================&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MethodDescriptor[]&nbsp;methodDescs&nbsp;=&nbsp;beanInfo.getMethodDescriptors();//可见public方法\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(MethodDescriptor&nbsp;methodDesc&nbsp;:&nbsp;methodDescs)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;name=&quot;&nbsp;+&nbsp;methodDesc.getName()&nbsp;+&nbsp;&quot;,&nbsp;method=&quot;&nbsp;+&nbsp;methodDesc.getMethod());\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;\r\n}</pre><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\"><span style=\"box-sizing: border-box;\">注意</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">:</span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; margin-left: 28px;\"><span style=\"box-sizing: border-box; font-family: Wingdings; font-size: 14px;\">l&nbsp;</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">Java</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">&nbsp;beans</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">的</span>s</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">et<span style=\"box-sizing: border-box;\">方法无</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">返回参数即</span>void,&nbsp;<span style=\"box-sizing: border-box;\">有时为了返回自身可以连续的调用</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">setXX</span>&nbsp;<span style=\"box-sizing: border-box;\">方法</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">(</span>&nbsp;<span style=\"box-sizing: border-box;\">类似</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">StringBuilder.append</span>&nbsp;<span style=\"box-sizing: border-box;\">返回自身</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">)</span></span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">,&nbsp;<span style=\"box-sizing: border-box;\">但这个</span>&nbsp;<span style=\"box-sizing: border-box;\">writeMethod</span>&nbsp;<span style=\"box-sizing: border-box;\">是不符合</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">java beans<span style=\"box-sizing: border-box;\">规范</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span></span></p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, FontAwesome, monospace; font-size: 1.3rem; margin-top: 1rem; margin-bottom: 1rem; padding: 1rem; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: rgb(85, 85, 85); border: 1px solid rgb(222, 222, 222); border-radius: 0px;\">public&nbsp;User&nbsp;setName(String&nbsp;name)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;this.name&nbsp;=&nbsp;name;\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;this;\r\n}</pre><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; margin-left: 28px;\"><span style=\"box-sizing: border-box; font-family: Wingdings; font-size: 14px;\">l&nbsp;</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">Java</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">&nbsp;beans</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">的</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">PropertyDescriptor不是按照类的成员</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">(属性Field)去判断的, 而是以类的方法是否以set,get,is开头为判断， 所以以上例子getClass(), isDone()并没有对应的类成员Field, 但仍然视为一个Property, 只是它没有</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">writeMethod(set方法)。</span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">Java b eans规范广泛的应用于 java的各种框架和应用, JSP里面的UseBean标签 , IOC框架 Spring &nbsp;framework的主要注入方式就是 Java beans的set,get。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">Java beans的实现也是基于java的反射API实现， 我们要自然也可以自己封装处理, Introspector算是官方提供的标准的工具类。</p><p><br/></p>',1529484076,1,'',0,10,'','',23),(55,'','1. java.time新时间包来由','<p><span class=\"zrd-lineblock zrd-chap-as-h\" style=\"box-sizing: border-box; display: inline-block; font-size: 24px; margin-top: 15px;\">1. java.time新时间包来由</span></p><hr class=\"am-divider am-divider-default\" style=\"box-sizing: content-box; margin: 1.5rem auto; padding: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; border-image: initial; height: 0px; border-top-style: solid; border-top-color: rgb(221, 221, 221); clear: both;\"/><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">JDK1.8<span style=\"box-sizing: border-box;\">开始引入</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">java.time,&nbsp;<span style=\"box-sizing: border-box;\">为的是统一改进</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">java.util.Date, Calendar</span></span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">,DateFormat</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">一些不便利的操作。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; margin-left: 28px;\"><span style=\"box-sizing: border-box; font-family: Wingdings; font-size: 14px;\">l&nbsp;</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\"><span style=\"box-sizing: border-box;\">包的定义有些混乱</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">, java.util.Date, java.util.Calendar, java.sql.Date<span style=\"box-sizing: border-box;\">时间类对象</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">, java.text.DateFormat</span></span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">,&nbsp;<span style=\"box-sizing: border-box;\">日期处理的分布在不同的</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">package<span style=\"box-sizing: border-box;\">下。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; margin-left: 28px;\"><span style=\"box-sizing: border-box; font-family: Wingdings; font-size: 14px;\">l&nbsp;</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">J</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">ava.</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">sql.Date<span style=\"box-sizing: border-box;\">实际对应数据库精度应该是到天</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">,&nbsp;<span style=\"box-sizing: border-box;\">但实际又继承于</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">java.uitl.Date</span>&nbsp;<span style=\"box-sizing: border-box;\">包含了时分秒毫秒信息</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">两个类名字一样不容易区分</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">但为了兼容</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">JDBC</span>&nbsp;<span style=\"box-sizing: border-box;\">驱动必须保留。</span></span><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">Java.sql.Timestamp<span style=\"box-sizing: border-box;\">可以对应到数据库的</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">Datetime</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">/Timestamp</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">,&nbsp;<span style=\"box-sizing: border-box;\">不过不同</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">JDBC</span>&nbsp;<span style=\"box-sizing: border-box;\">驱动有时未必很好兼容。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; margin-left: 28px;\"><span style=\"box-sizing: border-box; font-family: Wingdings; font-size: 14px;\">l&nbsp;</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">Date,DateFormat,Calendar<span style=\"box-sizing: border-box;\">等是线程不安全</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">的</span>,&nbsp;<span style=\"box-sizing: border-box;\">可以随时修改值。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; margin-left: 28px;\"><span style=\"box-sizing: border-box; font-family: Wingdings; font-size: 14px;\">l&nbsp;</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">Calendar<span style=\"box-sizing: border-box;\">获取的月的值是从</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">0<span style=\"box-sizing: border-box;\">开始</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span></span><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\"><span style=\"box-sizing: border-box;\">即</span>0<span style=\"box-sizing: border-box;\">是一月。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\"><span style=\"box-sizing: border-box;\">而</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">java.time<span style=\"box-sizing: border-box;\">是参考</span></span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">Joda time<span style=\"box-sizing: border-box;\">开源项目</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">,&nbsp;<span style=\"box-sizing: border-box;\">按照</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">JSR310</span>&nbsp;<span style=\"box-sizing: border-box;\">规范实现的日期时间库</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">实现了新特性。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\"><span style=\"box-sizing: border-box;\">日期类都是不变性</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">,&nbsp;<span style=\"box-sizing: border-box;\">类似</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">String,</span></span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">&nbsp;<span style=\"box-sizing: border-box;\">线程安全</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">,&nbsp;<span style=\"box-sizing: border-box;\">在多线程中使用。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">分离了日期</span></span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">Date,&nbsp;<span style=\"box-sizing: border-box;\">时间</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">T</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">ime,&nbsp;<span style=\"box-sizing: border-box;\">日期时间</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">D</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">ateTime,&nbsp;<span style=\"box-sizing: border-box;\">时间戳</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">t</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">imestamp,&nbsp;<span style=\"box-sizing: border-box;\">甚至时区对应的日期类也有封装。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\"><span style=\"box-sizing: border-box;\">日期类的解析，转换，格式化，</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">&nbsp;</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\"><span style=\"box-sizing: border-box;\">日期的增加，减少等操作都在对应的日期类中完成，</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">&nbsp;<span style=\"box-sizing: border-box;\">不用再调用</span>D</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">ateFormat, Calendar<span style=\"box-sizing: border-box;\">去完成</span>&nbsp;<span style=\"box-sizing: border-box;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">封装使用易用。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">可扩展</span>,<span style=\"box-sizing: border-box;\">默认基于</span></span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">ISO-8601<span style=\"box-sizing: border-box;\">日历系统上</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">,&nbsp;</span><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">java.time.chrono<span style=\"box-sizing: border-box;\">包中的一些非标准的历法</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">。</span></span></p><p><br/></p>',1529484119,1,'',0,10,'','',25);
INSERT INTO `e_new` VALUES (56,'','1. HTTP 1.x协议','<p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">我们浏览器使用最多的一种通信协议就是HTTP, 我们先看下 HTTP 实际传输了什么报文。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">假设我们使用 chrome 敲入网址<a href=\"http://www.csdn.net/\" rel=\"nofollow\" style=\"box-sizing: border-box; background-color: transparent; text-decoration-line: none; color: rgb(14, 144, 210);\">www.csdn.net</a>.</p><h3 style=\"box-sizing: border-box; margin: 2em 0px 1.6rem; font-size: 16px; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><strong style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 14px;\">请求报文:</span></strong></h3><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><strong style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 14px;\"><img src=\"http://www.javatree.cn/file-server/c/fa38e9954cc34d629050907f3be793b7.png\" title=\"fa38e9954cc34d629050907f3be793b7.png\" alt=\"image.png\" style=\"box-sizing: border-box; vertical-align: middle; border: 0px; max-width: 100%;\"/></span></strong></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><strong style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 14px;\"></span></strong></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">( 1 ) 第一行 GET请求方式 , 请求 / 网站根目录 , 请求协议是 http/1.1 . 一般在浏览器直接输入网址 URL采访都是 GET 请求 , 请求参数只能通过 URL 带入 , 例如 GET /?a =1&amp;b=2</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">( 2 ) Host请求头指定当前请求的网站域名 或ip和端口 , 这个是 RFC2616 http1.1定义的规范 , &nbsp;如果缺少了服务器会返回 400 Bad Request. &nbsp; 由于web服务器可能有多个域名 , 浏览器带入不同的 Host域名 , 也方便服务器判断请求是来自哪个域名，服务器可以做分流等处理。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">(3) Connection:keep-alive是 http1.1新增的规范 , http1.0 定义的连接基本是短连接 , 服务器返回之后浏览器就把连接关闭了。由于网络连接创建连接都比较耗时耗资源 , http1.1 协议默认是支持长连接 , 实现连接的重用 , 即浏览器告诉服务器说 , 我创建连接后等网页返回之后我不会去关闭连接。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">( 4 ) &nbsp;Pragma是一个指示命令 , no-cache意思是要求服务器需要返回最新的 URL内容 , 这个指令是兼容 http1.0而存在 , 与http1.1 Cache-Control:no-cahce一致</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">( 5 ) &nbsp;Upgrade-Insecure-Requests:1浏览器发现当前请求 URL 是 http请求非 https (安全的 http ) , 告诉 web 服务器说客户端可以能支持 https, 待服务器如果响应 Content-Security-Policy: upgrade-insecure-requests, 那么浏览器就尝试替换网站的所有 URL 为 https . 这个例子看 CSDN不支持 https L</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">(6) User-Agent用于标记客户端的浏览器的类型和版本 , 而它的值是一个故事 ,</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.csdn.net/puppylpg/article/details/47319401\" rel=\"nofollow\" style=\"box-sizing: border-box; background-color: transparent; text-decoration-line: none; color: rgb(14, 144, 210);\">http://blog.csdn.net/puppylpg/article/details/47319401</a></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">(7) Accept 标记浏览器可以支持的 MIME多媒体类型 ( 可能是 html, 图片 ,xml,json 等格式 )</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">Q=0.9是一个权重 , 介入 0-1 之间 , 值越大越推荐使用前面制定的 MIME 类型</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">( 8 ) &nbsp;Accept-Encoding 告诉服务器浏览器可以支持gzip,deflat两种压缩的内容编码 , 如果服务器该 URL 支持压缩 , 会类似返回 Content-Encoding:gzip 之类</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">( 9 ) Accept-Language是告诉服务器支持的语言 ,这里是简体中文</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">( 10 ) &nbsp;cookie是 web 开发常用的小甜点 , 以前采访 CSDN 时 ,CSDN 返回 set-cookie 指令可以缓存小部分的内容到浏览器 ( 关闭浏览器也可以存在 ) , 再次请求 CSDN时浏览器检查 cookie 如果没超时 , 带上这些 cookie 的值。通常会用在我们的记住密码 , 标记同一个用户身份会话等场景中使用。 后面章节我们在 jsp/servlet session 中细讲。</p><h3 style=\"box-sizing: border-box; margin: 2em 0px 1.6rem; font-size: 16px; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">返回报文头</span></h3><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\"><img src=\"http://www.javatree.cn/file-server/c/64373ea1d084447abbc0f7c58bd4585a.png\" title=\"64373ea1d084447abbc0f7c58bd4585a.png\" alt=\"image.png\" style=\"box-sizing: border-box; vertical-align: middle; border: 0px; max-width: 100%;\"/></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\"></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">(1)&nbsp; http1.1标记服务器支持的 http1.1 协议 , 200 是 http 返回码标记成功 , OK 是服务器带的简短的返回信息</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">http基本用返回码标记响应的状态 , 1xx服务器收到请求需客户端继续操作 , 2 xx基本是正常 ,3xx基本是跳转 ,4xx 是客户端错误 ,5xx 是服务器内部错误 . &nbsp;具体的返回码含义见 w3c网站。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">(2)&nbsp; server返回头标记 web 服务器类型 , CSDN用的是 openresty,nginx lua 下的一个扩展 , 也可能是一个前置的代理机器 ; 其他的值还有可能是 apache,nginx,IIS 等</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">(3)&nbsp; Content-Type标记返回的内容的 MIME 多媒体类型 , 这里返回的是 html, 且页面编码为 UTF-8</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">(4)&nbsp; Transfer-Encoding标记传输内容的编码 , chunked是分块编码 , 对于 静态页面服务器很容易可以知道返回的内容长度可以用 content-length返回头标记 , 但是对于动态页面 ( php,asp,jsp等 ) , 除非全部渲染完整个页面字符串再输出 , 否则很难计算出要输出的总长度。 对于边解析边用输出的动态页面 , 分片是最好的选择。以下是分片的格式。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-size: 14px;\">\\r\\n</span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\"><span style=\"box-sizing: border-box;\">分片</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">1</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\"><span style=\"box-sizing: border-box;\">字节长度</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">\\r\\n</span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\"><span style=\"box-sizing: border-box;\">分片</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">1<span style=\"box-sizing: border-box;\">内容</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">\\r\\n</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\"><span style=\"box-sizing: border-box;\">分片</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">2<span style=\"box-sizing: border-box;\">字节长度</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">\\r\\n</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\"><span style=\"box-sizing: border-box;\">分片</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">2<span style=\"box-sizing: border-box;\">内容</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">\\r\\n</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">…</span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">0\\r\\n</span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">\\r\\n</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">&nbsp;</span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">(5)&nbsp; Connection:keep-alive, 对应浏览器请求的告诉浏览器是否保持连接 , keep-alive:timeout=20则设置连接过期时间为 20秒 ; &nbsp; 如果需要关闭则是Connection: close</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">(6)&nbsp; Vary: Accept-Encoding,是内容协商， &nbsp;有些前置代理服务器/缓存服务器 ( web服务器为了扩容 ,会有一些负责分流的前置机 ) 会忽略了 content-encoding:gzip, 导致只缓存了一个版本的内容 ; 为了更好的兼容 , web 服务器使用 vary:accept-encoding 告诉这些缓存服务器 , 要根据浏览器的哪些请求头分别缓存不同的版本 .</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">(7)&nbsp; ETag , 返回当前页面的最近修改时间和版本号 , 下次浏览器再请求的时候 , If-None-Match:ETag的值 , 如果 ETag 值服务器判断没变就直接返回 304 使用浏览器的原页面内容。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">(8)&nbsp; Last-Modified服务器标记当前 URL 最新修改时间 , 如果浏览器再次请求时加入 If-Modified-Since:上次修改的时间值 , 服务器判断时间版本没修改 , &nbsp;可能会返回 304 让浏览器使用之前 URL缓存内容。 ETag优先级高于 Last_Modified .</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">(9)&nbsp; Content-Encoding,内容编码一般是标记是否压缩 ,zip,deflate 等</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">在WEB开发实践中 , 为了更好的优化好 WEB 的性能 , 有必要 熟悉HTTP的协议 , 而HTTP的其他头部和具体协议还远不止上面介绍的 , HTTP2.0 也已经崭露头角 , 学无止境 , 继续前行。</p><p><br/></p>',1529484175,1,'',0,10,'','',29),(57,'','1. WEB开发历史','<p><span class=\"zrd-lineblock zrd-chap-as-h\" style=\"box-sizing: border-box; display: inline-block; font-size: 24px; margin-top: 15px;\">1. WEB开发历史</span></p><hr class=\"am-divider am-divider-default\" style=\"box-sizing: content-box; margin: 1.5rem auto; padding: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; border-image: initial; height: 0px; border-top-style: solid; border-top-color: rgb(221, 221, 221); clear: both;\"/><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1.6rem;\">93年 , World Wild Web万维网创建 , 这时的服务器都是支持静态网页 , HTML, 图片这些 , 人们大多是浏览为主。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">同年CGI( Common Gateway Interface ) , web服务器可以采访外部应用程序 , 这些程序可以标准输出返回动态的 HTML 内容 , 这些程序用 shell,C/C++,Perl 编写。而 CGI 一次调用基本就是一个进程 , 调用开销大 , HTML 代码和 CGI 代码混合维护成本也高。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">94年 PHP(Hypertext Preprocessor), HTML可以较好的分离开 , FastCGI进程池管理也优化了调用。 96 年 ASP 诞生 , 99年 J2EE平台诞生 , JSP/Servlet 则是 J2EE 规范的一部分 , 2000 年 ASP. NET和 J2EE 的相互学习和竞争 。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">随之而来的 , 也有着各种 WEB 开发语言和框架的演变 , MVC, ORM, Spring DI/IOC, Ruby On Rail, NodeJs, MVVM。前端 , 后端 , 移动端 , H5, 混合型等 各种新技术爆炸增长 , 学无止境。</p><p><br/></p>',1529484211,1,'',0,10,'','',32),(58,'','1. JSP实现原理','<p><span class=\"zrd-lineblock zrd-chap-as-h\" style=\"box-sizing: border-box; display: inline-block; font-size: 24px; margin-top: 15px;\">1. JSP实现原理</span></p><hr class=\"am-divider am-divider-default\" style=\"box-sizing: content-box; margin: 1.5rem auto; padding: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; border-image: initial; height: 0px; border-top-style: solid; border-top-color: rgb(221, 221, 221); clear: both;\"/><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-size: 14px;\">以</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px; font-family: Calibri, sans-serif;\">Apache tomcat</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">实现为例</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px; font-family: Calibri, sans-serif;\">, tomcat/config/web.xml,&nbsp;</span><span style=\"box-sizing: border-box; font-size: 14px;\">我们可以看到所有</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px; font-family: Calibri, sans-serif;\">jsp</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">页面请求实际是</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px; font-family: Calibri, sans-serif;\">JspServlet</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">来处理</span>。</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, FontAwesome, monospace; font-size: 1.3rem; margin-top: 1rem; margin-bottom: 1rem; padding: 1rem; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: rgb(85, 85, 85); border: 1px solid rgb(222, 222, 222); border-radius: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&lt;servlet&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;servlet-name&gt;jsp&lt;/servlet-name&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;servlet-class&gt;org.apache.jasper.servlet.JspServlet&lt;/servlet-class&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;init-param&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;param-name&gt;fork&lt;/param-name&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;param-value&gt;false&lt;/param-value&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/init-param&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;init-param&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;param-name&gt;xpoweredBy&lt;/param-name&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;param-value&gt;false&lt;/param-value&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/init-param&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;load-on-startup&gt;3&lt;/load-on-startup&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;/servlet&gt;\r\n&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--&nbsp;The&nbsp;mappings&nbsp;for&nbsp;the&nbsp;JSP&nbsp;servlet&nbsp;--&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;servlet-mapping&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;servlet-name&gt;jsp&lt;/servlet-name&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;url-pattern&gt;*.jsp&lt;/url-pattern&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;url-pattern&gt;*.jspx&lt;/url-pattern&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;/servlet-mapping&gt;</pre><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; text-indent: 28px;\">JspServlet<span style=\"box-sizing: border-box;\">类似一个</span>JSP<span style=\"box-sizing: border-box;\">解析器</span>,&nbsp;<span style=\"box-sizing: border-box;\">会去解析和翻译</span>JSP<span style=\"box-sizing: border-box;\">内容为一个</span>servlet(HttpJspBase<span style=\"box-sizing: border-box;\">为一个</span>servlet<span style=\"box-sizing: border-box;\">类</span>)<span style=\"box-sizing: border-box;\">。例如对于</span>helloJsp.jsp</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, FontAwesome, monospace; font-size: 1.3rem; margin-top: 1rem; margin-bottom: 1rem; padding: 1rem; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: rgb(85, 85, 85); border: 1px solid rgb(222, 222, 222); border-radius: 0px;\">&lt;%@&nbsp;page&nbsp;language=&quot;java&quot;&nbsp;contentType=&quot;text/html;&nbsp;charset=UTF-8&quot;&nbsp;pageEncoding=&quot;UTF-8&quot;%&gt;\r\n&lt;!DOCTYPE&nbsp;html&nbsp;PUBLIC&nbsp;&quot;-//W3C//DTD&nbsp;HTML&nbsp;4.01&nbsp;Transitional//EN&quot;&nbsp;&quot;http://www.w3.org/TR/html4/loose.dtd&quot;&gt;\r\n&lt;html&gt;\r\n&lt;body&gt;\r\n&lt;h2&gt;你好,JSP&lt;/h2&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box;\">我们在执行</span>&nbsp;<a href=\"http://localhost:8080/servlet-sample/helloJsp.jsp\" rel=\"nofollow\" style=\"box-sizing: border-box; text-decoration-line: none; color: rgb(14, 144, 210);\">http://localhost:8080/servlet-sample/helloJsp.jsp</a>&nbsp;<span style=\"box-sizing: border-box;\">之后</span>,&nbsp;<span style=\"box-sizing: border-box;\">在</span>tomcat/work\\Catalina\\localhost\\servlet-sample\\\\org\\apache\\jsp\\helloJsp_jsp.java, helloJsp_jsp.class</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, FontAwesome, monospace; font-size: 1.3rem; margin-top: 1rem; margin-bottom: 1rem; padding: 1rem; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: rgb(85, 85, 85); border: 1px solid rgb(222, 222, 222); border-radius: 0px;\">/*\r\n&nbsp;*&nbsp;Generated&nbsp;by&nbsp;the&nbsp;Jasper&nbsp;component&nbsp;of&nbsp;Apache&nbsp;Tomcat\r\n&nbsp;*&nbsp;Version:&nbsp;Apache&nbsp;Tomcat/8.5.16\r\n&nbsp;*&nbsp;Generated&nbsp;at:&nbsp;2017-07-19&nbsp;08:26:46&nbsp;UTC\r\n&nbsp;*&nbsp;Note:&nbsp;The&nbsp;last&nbsp;modified&nbsp;time&nbsp;of&nbsp;this&nbsp;file&nbsp;was&nbsp;set&nbsp;to\r\n&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;last&nbsp;modified&nbsp;time&nbsp;of&nbsp;the&nbsp;source&nbsp;file&nbsp;after\r\n&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;generation&nbsp;to&nbsp;assist&nbsp;with&nbsp;modification&nbsp;tracking.\r\n&nbsp;*/\r\npackage&nbsp;org.apache.jsp;\r\n&nbsp;\r\nimport&nbsp;javax.servlet.*;\r\nimport&nbsp;javax.servlet.http.*;\r\nimport&nbsp;javax.servlet.jsp.*;\r\n&nbsp;\r\npublic&nbsp;final&nbsp;class&nbsp;helloJsp_jsp&nbsp;extends&nbsp;org.apache.jasper.runtime.HttpJspBase\r\n&nbsp;&nbsp;&nbsp;&nbsp;implements&nbsp;org.apache.jasper.runtime.JspSourceDependent,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;org.apache.jasper.runtime.JspSourceImports&nbsp;{\r\n&nbsp;\r\n&nbsp;&nbsp;private&nbsp;static&nbsp;final&nbsp;javax.servlet.jsp.JspFactory&nbsp;_jspxFactory&nbsp;=\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;javax.servlet.jsp.JspFactory.getDefaultFactory();\r\n&nbsp;\r\n&nbsp;&nbsp;private&nbsp;static&nbsp;java.util.Map&lt;java.lang.String,java.lang.Long&gt;&nbsp;_jspx_dependants;\r\n&nbsp;\r\n&nbsp;&nbsp;private&nbsp;static&nbsp;final&nbsp;java.util.Set&lt;java.lang.String&gt;&nbsp;_jspx_imports_packages;\r\n&nbsp;\r\n&nbsp;&nbsp;private&nbsp;static&nbsp;final&nbsp;java.util.Set&lt;java.lang.String&gt;&nbsp;_jspx_imports_classes;\r\n&nbsp;\r\n&nbsp;&nbsp;static&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;_jspx_imports_packages&nbsp;=&nbsp;new&nbsp;java.util.HashSet&lt;&gt;();\r\n&nbsp;&nbsp;&nbsp;&nbsp;_jspx_imports_packages.add(&quot;javax.servlet&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;_jspx_imports_packages.add(&quot;javax.servlet.http&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;_jspx_imports_packages.add(&quot;javax.servlet.jsp&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;_jspx_imports_classes&nbsp;=&nbsp;null;\r\n&nbsp;&nbsp;}\r\n&nbsp;\r\n&nbsp;&nbsp;private&nbsp;volatile&nbsp;javax.el.ExpressionFactory&nbsp;_el_expressionfactory;\r\n&nbsp;&nbsp;private&nbsp;volatile&nbsp;org.apache.tomcat.InstanceManager&nbsp;_jsp_instancemanager;\r\n&nbsp;\r\n&nbsp;&nbsp;public&nbsp;java.util.Map&lt;java.lang.String,java.lang.Long&gt;&nbsp;getDependants()&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;_jspx_dependants;\r\n&nbsp;&nbsp;}\r\n&nbsp;\r\n&nbsp;&nbsp;public&nbsp;java.util.Set&lt;java.lang.String&gt;&nbsp;getPackageImports()&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;_jspx_imports_packages;\r\n&nbsp;&nbsp;}\r\n&nbsp;\r\n&nbsp;&nbsp;public&nbsp;java.util.Set&lt;java.lang.String&gt;&nbsp;getClassImports()&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;_jspx_imports_classes;\r\n&nbsp;&nbsp;}\r\n&nbsp;\r\n&nbsp;&nbsp;public&nbsp;javax.el.ExpressionFactory&nbsp;_jsp_getExpressionFactory()&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(_el_expressionfactory&nbsp;==&nbsp;null)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;synchronized&nbsp;(this)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(_el_expressionfactory&nbsp;==&nbsp;null)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_el_expressionfactory&nbsp;=&nbsp;_jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;_el_expressionfactory;\r\n&nbsp;&nbsp;}\r\n&nbsp;\r\n&nbsp;&nbsp;public&nbsp;org.apache.tomcat.InstanceManager&nbsp;_jsp_getInstanceManager()&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(_jsp_instancemanager&nbsp;==&nbsp;null)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;synchronized&nbsp;(this)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(_jsp_instancemanager&nbsp;==&nbsp;null)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_jsp_instancemanager&nbsp;=&nbsp;org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;_jsp_instancemanager;\r\n&nbsp;&nbsp;}\r\n&nbsp;\r\n&nbsp;&nbsp;public&nbsp;void&nbsp;_jspInit()&nbsp;{\r\n&nbsp;&nbsp;}\r\n&nbsp;\r\n&nbsp;&nbsp;public&nbsp;void&nbsp;_jspDestroy()&nbsp;{\r\n&nbsp;&nbsp;}\r\n&nbsp;\r\n&nbsp;&nbsp;public&nbsp;void&nbsp;_jspService(final&nbsp;javax.servlet.http.HttpServletRequest&nbsp;request,&nbsp;final&nbsp;javax.servlet.http.HttpServletResponse&nbsp;response)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throws&nbsp;java.io.IOException,&nbsp;javax.servlet.ServletException&nbsp;{\r\n&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;final&nbsp;java.lang.String&nbsp;_jspx_method&nbsp;=&nbsp;request.getMethod();\r\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!&quot;GET&quot;.equals(_jspx_method)&nbsp;&amp;&amp;&nbsp;!&quot;POST&quot;.equals(_jspx_method)&nbsp;&amp;&amp;&nbsp;!&quot;HEAD&quot;.equals(_jspx_method)&nbsp;&amp;&amp;&nbsp;!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType()))&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED,&nbsp;&quot;JSPs&nbsp;only&nbsp;permit&nbsp;GET&nbsp;POST&nbsp;or&nbsp;HEAD&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;final&nbsp;javax.servlet.jsp.PageContext&nbsp;pageContext;\r\n&nbsp;&nbsp;&nbsp;&nbsp;javax.servlet.http.HttpSession&nbsp;session&nbsp;=&nbsp;null;\r\n&nbsp;&nbsp;&nbsp;&nbsp;final&nbsp;javax.servlet.ServletContext&nbsp;application;\r\n&nbsp;&nbsp;&nbsp;&nbsp;final&nbsp;javax.servlet.ServletConfig&nbsp;config;\r\n&nbsp;&nbsp;&nbsp;&nbsp;javax.servlet.jsp.JspWriter&nbsp;out&nbsp;=&nbsp;null;\r\n&nbsp;&nbsp;&nbsp;&nbsp;final&nbsp;java.lang.Object&nbsp;page&nbsp;=&nbsp;this;\r\n&nbsp;&nbsp;&nbsp;&nbsp;javax.servlet.jsp.JspWriter&nbsp;_jspx_out&nbsp;=&nbsp;null;\r\n&nbsp;&nbsp;&nbsp;&nbsp;javax.servlet.jsp.PageContext&nbsp;_jspx_page_context&nbsp;=&nbsp;null;\r\n&nbsp;\r\n&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;try&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;response.setContentType(&quot;text/html;&nbsp;charset=UTF-8&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pageContext&nbsp;=&nbsp;_jspxFactory.getPageContext(this,&nbsp;request,&nbsp;response,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;null,&nbsp;true,&nbsp;8192,&nbsp;true);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_jspx_page_context&nbsp;=&nbsp;pageContext;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;application&nbsp;=&nbsp;pageContext.getServletContext();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;config&nbsp;=&nbsp;pageContext.getServletConfig();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;session&nbsp;=&nbsp;pageContext.getSession();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out&nbsp;=&nbsp;pageContext.getOut();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_jspx_out&nbsp;=&nbsp;out;\r\n&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out.write(&quot;\\r\\n&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out.write(&quot;&lt;!DOCTYPE&nbsp;html&nbsp;PUBLIC&nbsp;\\&quot;-//W3C//DTD&nbsp;HTML&nbsp;4.01&nbsp;Transitional//EN\\&quot;&nbsp;\\&quot;http://www.w3.org/TR/html4/loose.dtd\\&quot;&gt;\\r\\n&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out.write(&quot;&lt;html&gt;\\r\\n&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out.write(&quot;&lt;body&gt;\\r\\n&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out.write(&quot;&lt;h2&gt;你好,JSP&lt;/h2&gt;\\r\\n&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out.write(&quot;&lt;/body&gt;\\r\\n&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out.write(&quot;&lt;/html&gt;&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;catch&nbsp;(java.lang.Throwable&nbsp;t)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!(t&nbsp;instanceof&nbsp;javax.servlet.jsp.SkipPageException)){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out&nbsp;=&nbsp;_jspx_out;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(out&nbsp;!=&nbsp;null&nbsp;&amp;&amp;&nbsp;out.getBufferSize()&nbsp;!=&nbsp;0)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(response.isCommitted())&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out.flush();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out.clearBuffer();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;catch&nbsp;(java.io.IOException&nbsp;e)&nbsp;{}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(_jspx_page_context&nbsp;!=&nbsp;null)&nbsp;_jspx_page_context.handlePageException(t);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;throw&nbsp;new&nbsp;ServletException(t);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;finally&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_jspxFactory.releasePageContext(_jspx_page_context);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;}\r\n}</pre><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box;\">可以看到</span>helloJsp.jsp<span style=\"box-sizing: border-box;\">被编译成为</span>helloJsp_jsp.java, HttpJspBase<span style=\"box-sizing: border-box;\">会调用</span>helloJsp_jsp. _jspService()<span style=\"box-sizing: border-box;\">方法渲染页面。</span>&nbsp;<span style=\"box-sizing: border-box;\">只要</span>helloJsp.jsp<span style=\"box-sizing: border-box;\">的有修改</span>,<span style=\"box-sizing: border-box;\">则</span>tomcat<span style=\"box-sizing: border-box;\">会重新编译为新的类执行。</span></p><p><br/></p>',1529484270,1,'',0,10,'','',36),(59,'','1. HTML','<p><span class=\"zrd-lineblock zrd-chap-as-h\" style=\"box-sizing: border-box; display: inline-block; font-size: 24px; margin-top: 15px;\">1. HTML</span></p><hr class=\"am-divider am-divider-default\" style=\"box-sizing: content-box; margin: 1.5rem auto; padding: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; border-image: initial; height: 0px; border-top-style: solid; border-top-color: rgb(221, 221, 221); clear: both;\"/><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1.6rem; text-indent: 28px;\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">HTML,HyperText Markup Language<span style=\"box-sizing: border-box;\">超文本标记语言</span>&nbsp;<span style=\"box-sizing: border-box;\">,</span>&nbsp;<span style=\"box-sizing: border-box;\">除了文本</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">,HTML<span style=\"box-sizing: border-box;\">还可以包含图片</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,</span>&nbsp;<span style=\"box-sizing: border-box;\">视频</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,</span>&nbsp;<span style=\"box-sizing: border-box;\">音频</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,</span>&nbsp;<span style=\"box-sizing: border-box;\">动画等多媒体内容。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; text-indent: 28px;\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\"><span style=\"box-sizing: border-box;\">现在使用最广的版本是</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">HTML4,&nbsp;<span style=\"box-sizing: border-box;\">同时由于</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">chrome</span>&nbsp;<span style=\"box-sizing: border-box;\">和</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">android</span>&nbsp;<span style=\"box-sizing: border-box;\">的流行</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">移动端</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">HTML5</span>&nbsp;<span style=\"box-sizing: border-box;\">也越来越流行。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; text-indent: 28px;\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">HTML<span style=\"box-sizing: border-box;\">页面主要由</span>&nbsp;<span style=\"box-sizing: border-box;\">&lt;!doctype&gt;&lt;html&gt;&lt;head&gt;..&lt;/head&gt;&lt;body&gt;..&lt;/body&gt;&lt;/html&gt;</span>&nbsp;<span style=\"box-sizing: border-box;\">几部分组成。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\"><span style=\"box-sizing: border-box;\">我们简单学习下常用的一些</span>HTML<span style=\"box-sizing: border-box;\">节点和元素。</span></span></p><p><br/></p>',1529484367,1,'',0,10,'','',40),(60,'','1. MySQL&工具安装','<p><span class=\"zrd-lineblock zrd-chap-as-h\" style=\"box-sizing: border-box; display: inline-block; font-size: 24px; margin-top: 15px;\">1. MySQL&amp;工具安装</span></p><hr class=\"am-divider am-divider-default\" style=\"box-sizing: content-box; margin: 1.5rem auto; padding: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; border-image: initial; height: 0px; border-top-style: solid; border-top-color: rgb(221, 221, 221); clear: both;\"/><h3 style=\"box-sizing: border-box; margin: 0px 0px 1.6rem; font-size: 16px;\"><strong style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 21px;\">1.1</span></strong>&nbsp;<strong style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 21px;\">MySQL<span style=\"box-sizing: border-box;\">安装</span></span></strong></h3><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\"><span style=\"box-sizing: border-box;\">我们可以到</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">MySQL<span style=\"box-sizing: border-box;\">官网下载最新的</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">MySQL5.7,&nbsp;</span><span style=\"box-sizing: border-box;\">选择离线版本安装</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">按照安装向导设置端口，</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">root</span>&nbsp;<span style=\"box-sizing: border-box;\">帐号可以安装为</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">windows</span>&nbsp;<span style=\"box-sizing: border-box;\">服务启动。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><a href=\"https://dev.mysql.com/downloads/mysql/\" rel=\"nofollow\" style=\"box-sizing: border-box; text-decoration-line: none; color: rgb(14, 144, 210);\"><span style=\"box-sizing: border-box; text-decoration-line: underline;\"><span style=\"box-sizing: border-box; font-family: Calibri; color: rgb(5, 99, 193);\">https://dev.mysql.com/downloads/mysql/</span></span></a></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><img src=\"http://www.javatree.cn/file-server/c/a7524192c05f426a904f73f1388e87f9.png\" title=\"a7524192c05f426a904f73f1388e87f9.png\" alt=\"image.png\" style=\"box-sizing: border-box; vertical-align: middle; border: 0px; max-width: 100%;\"/>&nbsp;<img src=\"http://www.javatree.cn/file-server/c/322a08f547174e1080907ee3aacc6a0c.png\" title=\"322a08f547174e1080907ee3aacc6a0c.png\" alt=\"image.png\" style=\"box-sizing: border-box; vertical-align: middle; border: 0px; max-width: 100%;\"/></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\"><span style=\"box-sizing: border-box;\">如果不喜欢安装服务占用资源</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">,&nbsp;<span style=\"box-sizing: border-box;\">也可以安装</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">SAMPP</span>&nbsp;<span style=\"box-sizing: border-box;\">集成版</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">解压即用的绿色版</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">必须解压到某个分区的根目录。不过集成的数据库实际是</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">MariaDB,MySQL</span>&nbsp;<span style=\"box-sizing: border-box;\">之父的非商业版的分支。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><a href=\"https://www.apachefriends.org/download.html\" rel=\"nofollow\" style=\"box-sizing: border-box; text-decoration-line: none; color: rgb(14, 144, 210);\"><span style=\"box-sizing: border-box; text-decoration-line: underline;\"><span style=\"box-sizing: border-box; font-family: Calibri; color: rgb(5, 99, 193);\">https://www.apachefriends.org/download.html</span></span></a></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><img src=\"http://www.javatree.cn/file-server/c/298557971fe24c5e8f51c80b06c3f439.png\" title=\"298557971fe24c5e8f51c80b06c3f439.png\" alt=\"image.png\" style=\"box-sizing: border-box; vertical-align: middle; border: 0px; max-width: 100%;\"/></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\"><span style=\"box-sizing: border-box;\">解压根目录</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">后运行</span>xampp-control.exe,&nbsp;<span style=\"box-sizing: border-box;\">例如</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">:E:/xampp/xampp-control.exe</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><img src=\"http://www.javatree.cn/file-server/c/f08d1364e26049d8abdc4f157eaeecf1.png\" title=\"f08d1364e26049d8abdc4f157eaeecf1.png\" alt=\"image.png\" style=\"box-sizing: border-box; vertical-align: middle; border: 0px; max-width: 100%;\"/>&nbsp;<img src=\"http://www.javatree.cn/file-server/c/df847c4349824b988dcfb4edee27389c.png\" title=\"df847c4349824b988dcfb4edee27389c.png\" alt=\"image.png\" style=\"box-sizing: border-box; vertical-align: middle; border: 0px; max-width: 100%;\"/></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-size: 14px;\">MySQL<span style=\"box-sizing: border-box;\">启动后</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">默认的帐号是</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">root,&nbsp;</span><span style=\"box-sizing: border-box;\">密码为空</span></span></p><p><br/></p><h3 style=\"box-sizing: border-box; margin: 0px 0px 1.6rem; font-size: 16px; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><strong style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 21px;\">1.2&nbsp;</span></strong><strong style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 21px;\">&nbsp;MySQL<span style=\"box-sizing: border-box;\">客户端工具</span></span></strong></h3><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255); text-indent: 28px;\"><span style=\"box-sizing: border-box; font-size: 14px;\">MySQL<span style=\"box-sizing: border-box;\">是个服务器</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">我们需要个客户端去连接操作数据库。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255); text-indent: 28px;\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\"><span style=\"box-sizing: border-box;\">如果你不嫌弃麻烦可以也有</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">MySQL SQL<span style=\"box-sizing: border-box;\">命令基础</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">可以用</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">E:/xampp/mysql/bin/mysql.exe</span>&nbsp;<span style=\"box-sizing: border-box;\">去连。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-size: 14px;\">&nbsp;&nbsp;<span style=\"box-sizing: border-box;\">如果想可视化去操作，</span>&nbsp;<span style=\"box-sizing: border-box;\">可以下载官方的客户端工具</span>mysqlworkbench,&nbsp;<span style=\"box-sizing: border-box;\">但需要安装</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">.net framework</span>&nbsp;<span style=\"box-sizing: border-box;\">和必要的</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">vc</span>&nbsp;<span style=\"box-sizing: border-box;\">发行包。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><a href=\"https://dev.mysql.com/downloads/workbench/\" rel=\"nofollow\" style=\"box-sizing: border-box; background-color: transparent; text-decoration-line: none; color: rgb(14, 144, 210);\"><span style=\"box-sizing: border-box; text-decoration-line: underline;\"><span style=\"box-sizing: border-box; font-family: Calibri; color: rgb(5, 99, 193);\">https://dev.mysql.com/downloads/workbench/</span></span></a></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><img src=\"http://www.javatree.cn/file-server/c/a2bdce6369224d61a762cca6aa7a479d.png\" title=\"a2bdce6369224d61a762cca6aa7a479d.png\" alt=\"image.png\" style=\"box-sizing: border-box; vertical-align: middle; border: 0px; max-width: 100%;\"/>&nbsp;<img src=\"http://www.javatree.cn/file-server/c/fda86942e9c0482d8b00679808ee1f96.png\" title=\"fda86942e9c0482d8b00679808ee1f96.png\" alt=\"image.png\" style=\"box-sizing: border-box; vertical-align: middle; border: 0px; max-width: 100%;\"/></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><img src=\"http://www.javatree.cn/file-server/c/e25497485570406f8d4fa639f61f6adf.png\" title=\"e25497485570406f8d4fa639f61f6adf.png\" alt=\"image.png\" style=\"box-sizing: border-box; vertical-align: middle; border: 0px; max-width: 100%;\"/></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\"><span style=\"box-sizing: border-box;\">安装好之后建立新连接</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">,<span style=\"box-sizing: border-box;\">帐号</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">root,</span>&nbsp;<span style=\"box-sizing: border-box;\">空密码</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span></span><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">“Test Connection”<span style=\"box-sizing: border-box;\">是否连通</span>&nbsp;<span style=\"box-sizing: border-box;\">,</span>&nbsp;<span style=\"box-sizing: border-box;\">有警告也继续。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><img src=\"http://www.javatree.cn/file-server/c/dcc16c934d044db89b6210e7eae0f6d3.png\" title=\"dcc16c934d044db89b6210e7eae0f6d3.png\" alt=\"image.png\" style=\"box-sizing: border-box; vertical-align: middle; border: 0px; max-width: 100%;\"/></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\"><span style=\"box-sizing: border-box;\">登进去之后我们可以看到左边有个</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">test<span style=\"box-sizing: border-box;\">的数据库</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">我们现在新建立一个数据库。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">CREATE DATABASE `sample` DEFAULT CHARACTER SET utf8 COLLATE utf8_bin;</span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><img src=\"http://www.javatree.cn/file-server/c/2bd1ae5ae4aa4903ae0c4ae0412bd046.png\" title=\"2bd1ae5ae4aa4903ae0c4ae0412bd046.png\" alt=\"image.png\" style=\"box-sizing: border-box; vertical-align: middle; border: 0px; max-width: 100%;\"/></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">Navigation<span style=\"box-sizing: border-box;\">右键</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">refresh all<span style=\"box-sizing: border-box;\">可以看到新建的</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">sample</span>&nbsp;<span style=\"box-sizing: border-box;\">数据库</span></span></p><p><br/></p><p><span class=\"zrd-lineblock zrd-chap-as-h\" style=\"box-sizing: border-box; display: inline-block; font-size: 24px; margin-top: 15px;\">1. MySQL&amp;工具安装</span></p><hr class=\"am-divider am-divider-default\" style=\"box-sizing: content-box; margin: 1.5rem auto; padding: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; border-image: initial; height: 0px; border-top-style: solid; border-top-color: rgb(221, 221, 221); clear: both;\"/><h3 style=\"box-sizing: border-box; margin: 0px 0px 1.6rem; font-size: 16px;\"><strong style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 21px;\">1.3&nbsp;</span></strong><strong style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 21px;\">&nbsp;MySQL JDBC<span style=\"box-sizing: border-box;\">驱动</span></span></strong></h3><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><a href=\"https://dev.mysql.com/downloads/connector/j/\" rel=\"nofollow\" style=\"box-sizing: border-box; text-decoration-line: none; color: rgb(14, 144, 210);\"><span style=\"box-sizing: border-box; text-decoration-line: underline;\"><span style=\"box-sizing: border-box; font-family: Calibri; color: rgb(5, 99, 193);\">https://dev.mysql.com/downloads/connector/j/</span></span></a></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><img src=\"http://www.javatree.cn/file-server/c/38e7d9a526284a5d966e83956018850d.png\" title=\"38e7d9a526284a5d966e83956018850d.png\" alt=\"image.png\" style=\"box-sizing: border-box; vertical-align: middle; border: 0px; max-width: 100%;\"/>&nbsp;<img src=\"http://www.javatree.cn/file-server/c/9359bf3bf9ce4bc384aeca61197df54b.png\" title=\"9359bf3bf9ce4bc384aeca61197df54b.png\" alt=\"image.png\" style=\"box-sizing: border-box; vertical-align: middle; border: 0px; max-width: 100%;\"/></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\"><span style=\"box-sizing: border-box;\">解压下载的</span>mysql-connector-java-5.1.43.zip,&nbsp;<span style=\"box-sizing: border-box;\">找到里面的</span>&nbsp;<span style=\"box-sizing: border-box;\">mysql-connector-java-5.1.43-bin.jar</span>&nbsp;<span style=\"box-sizing: border-box;\">，</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\"><span style=\"box-sizing: border-box;\">拷贝到我们之前的例子</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">/servlet-sample/WebContent/WEB-INF/lib<span style=\"box-sizing: border-box;\">下</span></span></p><p><br/></p>',1529484594,1,'',0,10,'','',44),(61,'','1. MVC介绍','<p><span class=\"zrd-lineblock zrd-chap-as-h\" style=\"box-sizing: border-box; display: inline-block; font-size: 24px; margin-top: 15px;\">1. MVC介绍</span></p><hr class=\"am-divider am-divider-default\" style=\"box-sizing: content-box; margin: 1.5rem auto; padding: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; border-image: initial; height: 0px; border-top-style: solid; border-top-color: rgb(221, 221, 221); clear: both;\"/><p>To be continued</p><p><br/></p>',1529484659,1,'',0,10,'','',47),(62,'','1. Java技术概要介绍','<p><span class=\"zrd-lineblock zrd-chap-as-h\" style=\"box-sizing: border-box; display: inline-block; font-size: 24px; margin-top: 15px;\">1. Java技术概要介绍</span></p><hr class=\"am-divider am-divider-default\" style=\"box-sizing: content-box; margin: 1.5rem auto; padding: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; border-image: initial; height: 0px; border-top-style: solid; border-top-color: rgb(221, 221, 221); clear: both;\"/><h3 style=\"box-sizing: border-box; margin: 0px 0px 1.6rem; font-size: 16px;\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 21px;\">1.1&nbsp;</span>&nbsp;<strong style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 21px;\">Java<span style=\"box-sizing: border-box;\">技术即是一门编程语言</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,</span>&nbsp;<span style=\"box-sizing: border-box;\">也是一个平台</span></span></strong></h3><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-size: 14px;\">Java<span style=\"box-sizing: border-box;\">编程语言具有以下流行的特性。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">简单</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">面向对象</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">分布式</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">多线程</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">动态</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">体系结构中立</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">便携</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">高性能</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">稳健性</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">安全</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">在</span>java<span style=\"box-sizing: border-box;\">编程语言里</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">所有的源代码都会保存在</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">.java</span>&nbsp;<span style=\"box-sizing: border-box;\">后缀名的纯文本文件里面。这些源码会被</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">javac</span>&nbsp;<span style=\"box-sizing: border-box;\">编译器编译成为</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">.class</span>&nbsp;<span style=\"box-sizing: border-box;\">文件。一个</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">.class</span>&nbsp;<span style=\"box-sizing: border-box;\">文件并不包含本地处理器的原生代码</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">, &nbsp;</span>&nbsp;<span style=\"box-sizing: border-box;\">而是包含</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">bytecodes</span>&nbsp;<span style=\"box-sizing: border-box;\">字节码</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">是</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">Java Virtual Machine</span>&nbsp;<span style=\"box-sizing: border-box;\">虚拟机的机器语言。 而</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">java</span>&nbsp;<span style=\"box-sizing: border-box;\">启动工具可以作为</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">JVM</span>&nbsp;<span style=\"box-sizing: border-box;\">的一个实例启动我们编写的</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">java</span>&nbsp;<span style=\"box-sizing: border-box;\">应用程序。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><img src=\"http://www.javatree.cn/file-server/c/9f1671b90d3b4f1d820c1be2984af507.png\" title=\"9f1671b90d3b4f1d820c1be2984af507.png\" alt=\"image.png\" style=\"box-sizing: border-box; vertical-align: middle; border: 0px; max-width: 100%;\"/></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-size: 14px;\">JVM<span style=\"box-sizing: border-box;\">可以用在许多不同的操作系统</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">同一个</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">.class</span>&nbsp;<span style=\"box-sizing: border-box;\">文件可以在</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">Windows, Solaris, Linux, Mac OS</span>&nbsp;<span style=\"box-sizing: border-box;\">等。一些虚拟机</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">例如</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">Java SE HotSpot at a Glance,&nbsp;</span><span style=\"box-sizing: border-box;\">在运行期会执行更多的步骤和操作以提升应用性能</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">这包括一系列的任务例如查找性能瓶颈</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,</span>&nbsp;<span style=\"box-sizing: border-box;\">常用代码再编译为本地代码。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><img src=\"http://www.javatree.cn/file-server/c/04ff6088c25549208fc6a7d13c0b13b6.png\" title=\"04ff6088c25549208fc6a7d13c0b13b6.png\" alt=\"image.png\" style=\"box-sizing: border-box; vertical-align: middle; border: 0px; max-width: 100%;\"/></p><p><br/></p><h3 style=\"box-sizing: border-box; margin: 0px 0px 1.6rem; font-size: 16px; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><strong style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 21px;\">1.2 Java<span style=\"box-sizing: border-box;\">平台</span></span></strong></h3><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">平台是指一个程序运行的硬件或软件的环境。我们常见的微软</span>Windows, Solaris, Linux, Mac OS<span style=\"box-sizing: border-box;\">等大多是底层硬件和操作系统的整合。而</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">Java</span>&nbsp;<span style=\"box-sizing: border-box;\">平台只是运行在硬件平台的一个软件平台。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-size: 14px;\">Java<span style=\"box-sizing: border-box;\">平台包括两个组件</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">:</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-size: 14px;\">Java<span style=\"box-sizing: border-box;\">虚拟机</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-size: 14px;\">Java<span style=\"box-sizing: border-box;\">应用编程接口</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">(API)</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-size: 14px;\">API<span style=\"box-sizing: border-box;\">是一系列的现成的软件组件</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,</span>&nbsp;<span style=\"box-sizing: border-box;\">可提供许多便利的功能。这些库按照接口或类归类</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">这些库通常就是我们使用的包</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">(packages)</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><img src=\"http://www.javatree.cn/file-server/c/e75244ee31854e9d916058f45f218b30.png\" title=\"e75244ee31854e9d916058f45f218b30.png\" alt=\"image.png\" style=\"box-sizing: border-box; vertical-align: middle; border: 0px; max-width: 100%;\"/></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">作为独立于平台的运行环境</span>, Java<span style=\"box-sizing: border-box;\">平台会比原生代码稍慢一些</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">但是编译器和虚拟机的不断优化</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">Java</span>&nbsp;<span style=\"box-sizing: border-box;\">代码可以接近原生代码且不影响其跨平台和便携性。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-size: 14px;\">JVM(Java Virtual Machine)<span style=\"box-sizing: border-box;\">我们简写为</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">Java</span>&nbsp;<span style=\"box-sizing: border-box;\">平台的一个虚拟机。</span></span></p><p><br/></p><h3 style=\"box-sizing: border-box; margin: 0px 0px 1.6rem; font-size: 16px; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><strong style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 21px;\">1.3 Java<span style=\"box-sizing: border-box;\">技术能够干什么</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">?</span></span></strong></h3><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-size: 14px;\">Java<span style=\"box-sizing: border-box;\">作为高级编程语言是一个功能强大的软件平台，完整的</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">Java</span>&nbsp;<span style=\"box-sizing: border-box;\">平台可以我们以下功能：</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; margin-left: 28px; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-family: Wingdings; font-size: 14px;\">l&nbsp;</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">开发工具</span>:&nbsp;<span style=\"box-sizing: border-box;\">包含编译，运行，监控，调试和文档生成。作为新开发者，主要的编译工具是</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">javac, java</span>&nbsp;<span style=\"box-sizing: border-box;\">启动器和</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">javadoc</span>&nbsp;<span style=\"box-sizing: border-box;\">文档工具。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; margin-left: 28px; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-family: Wingdings; font-size: 14px;\">l&nbsp;</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">应用编程接口</span>API: &nbsp;API<span style=\"box-sizing: border-box;\">提供了</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">Java</span>&nbsp;<span style=\"box-sizing: border-box;\">编程语言的核心功能</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">它包含基本对象</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">网络</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">安全</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">数据库采访等需要大量的功能。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; margin-left: 28px; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-family: Wingdings; font-size: 14px;\">l&nbsp;</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">部署技术</span>: JDK(Java<span style=\"box-sizing: border-box;\">开发工具集</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">)</span>&nbsp;<span style=\"box-sizing: border-box;\">提供了应用部署的标准</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">例如</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">Java Web Start,&nbsp;</span><span style=\"box-sizing: border-box;\">和</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">Java</span>&nbsp;<span style=\"box-sizing: border-box;\">插件</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; margin-left: 28px; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-family: Wingdings; font-size: 14px;\">l&nbsp;</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">用户接口工具集</span>: JavaFX, Java 2D<span style=\"box-sizing: border-box;\">提供了负责</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">GUI</span>&nbsp;<span style=\"box-sizing: border-box;\">处理</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; margin-left: 28px; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-family: Wingdings; font-size: 14px;\">l&nbsp;</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">统一的库</span>:&nbsp;<span style=\"box-sizing: border-box;\">包含</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">Java IDL, JDBC, JNDI, Java RMI, RMI-IIOP,&nbsp;</span><span style=\"box-sizing: border-box;\">库的接口统一</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">而厂商可以按照库接口各自实现具体的库。</span></span></p><p><br/></p><h3 style=\"box-sizing: border-box; margin: 0px 0px 1.6rem; font-size: 16px; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><strong style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 21px;\">1.4 Java<span style=\"box-sizing: border-box;\">技术如何改变我们的生活</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">?</span></span></strong></h3><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255); text-indent: 28px;\"><span style=\"box-sizing: border-box; font-size: 14px;\">Java<span style=\"box-sizing: border-box;\">语言是全球最流行的编程语言</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,</span>&nbsp;<span style=\"box-sizing: border-box;\">在企业信息化</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,</span>&nbsp;<span style=\"box-sizing: border-box;\">互联网</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,</span>&nbsp;<span style=\"box-sizing: border-box;\">手机端</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,</span>&nbsp;<span style=\"box-sizing: border-box;\">大数据等方面都有着广泛的应用。</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">Java</span>&nbsp;<span style=\"box-sizing: border-box;\">端的开源技术和框架页十分广泛</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">, android</span>&nbsp;<span style=\"box-sizing: border-box;\">的流行</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,JDK9</span>&nbsp;<span style=\"box-sizing: border-box;\">的持续进化</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">都证明</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">Java</span>&nbsp;<span style=\"box-sizing: border-box;\">语言有着广泛的前景</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">学好</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">Java</span>&nbsp;<span style=\"box-sizing: border-box;\">技术很有必要。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255); text-indent: 28px;\"><span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">就开发语言自身而言</span>,<span style=\"box-sizing: border-box;\">使用</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">Java</span>&nbsp;<span style=\"box-sizing: border-box;\">相对易用一些</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">付出少一些的工作</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">也可以编写出好的程序。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; margin-left: 28px; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-family: Wingdings; font-size: 14px;\">l&nbsp;</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">入门简单快速</span>: Java<span style=\"box-sizing: border-box;\">入门简单</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">语法与</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">C/C++</span>&nbsp;<span style=\"box-sizing: border-box;\">相似</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">有编程基础的人学习入门很快。</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">代码精简</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">:&nbsp;</span><span style=\"box-sizing: border-box; font-size: 14px;\">相同的程序</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px; font-family: Calibri;\">, Java</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">实现的代码要比</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px; font-family: Calibri;\">C++</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">代码少</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px; font-family: Calibri;\">4</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">倍。</span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; margin-left: 28px; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-family: Wingdings; font-size: 14px;\">l&nbsp;</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">稳健的代码</span>: Java<span style=\"box-sizing: border-box;\">编程语言鼓励好的编码实践，自动垃圾回收有效防止内存泄漏。面向</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">对象的技术</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">, JavaBean</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">的组件架构，广泛的易扩展的</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px; font-family: Calibri;\">API</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">，让我们更好的重用代码，测试代码和减少代码</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px; font-family: Calibri;\">bugs.</span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; margin-left: 28px; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-family: Wingdings; font-size: 14px;\">l&nbsp;</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">快速开发</span>: Java<span style=\"box-sizing: border-box;\">比</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">C++</span>&nbsp;<span style=\"box-sizing: border-box;\">要简单</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,</span>&nbsp;<span style=\"box-sizing: border-box;\">编码速度比</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">C++</span>&nbsp;<span style=\"box-sizing: border-box;\">快两倍且需要更少的代码。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; margin-left: 28px; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-family: Wingdings; font-size: 14px;\">l&nbsp;</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">避免平台依赖</span>:&nbsp;<span style=\"box-sizing: border-box;\">避免使用其他语言的库</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">, Java</span>&nbsp;<span style=\"box-sizing: border-box;\">可保证其便携性。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; margin-left: 28px; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-family: Wingdings; font-size: 14px;\">l&nbsp;</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">一次编写</span>,<span style=\"box-sizing: border-box;\">跨平台运行： 因为</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">Java</span>&nbsp;<span style=\"box-sizing: border-box;\">编译为字节码</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">所以可以一致的运行在各个</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">Java</span>&nbsp;<span style=\"box-sizing: border-box;\">环境上。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; margin-left: 28px; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-family: Wingdings; font-size: 14px;\">l&nbsp;</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">更容易分发软件</span>&nbsp;: Java web start<span style=\"box-sizing: border-box;\">等自动版本检查更新</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">可保证应用自动升级安装。</span></span></p><p><br/></p>',1529484775,1,'href=\"/the/ip/kp/50.M\"',0,10,'','',50),(63,'','1. 什么是对象?','<p><span class=\"zrd-lineblock zrd-chap-as-h\" style=\"box-sizing: border-box; display: inline-block; font-size: 24px; margin-top: 15px;\">1. 什么是对象?</span></p><hr class=\"am-divider am-divider-default\" style=\"box-sizing: content-box; margin: 1.5rem auto; padding: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; border-image: initial; height: 0px; border-top-style: solid; border-top-color: rgb(221, 221, 221); clear: both;\"/><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1.6rem;\">对象是一个相关状态和行为的软件包, 软件对象通常是对真实世界的一个建模。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">对象是面向对象技术的关键。现实生活中我们可以找到很多对象，你的狗，凳子，电视机或自行车。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">现实生活的对象有两个显著的特点,都拥有状态和行为。狗拥有状态 ( 名字，颜色，种类，饥饿 ) ， 拥有行为 ( 吠叫 , 奔跑，摇尾巴等 ) 。自行车拥有踏板，齿轮，速度等状态属性，拥有齿轮变速，改变踏板节奏，刹车等行为。这些状态和行为是面向对象编程的好的学习例子。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">花几分钟观察下现实生活中的对象。问自己两个问题，这个对象可能拥有什么的状态? 这个对象能执行什么动作和行为 ? 现实生活中的对象是复杂的，桌子上的灯拥有开和关两种状态 , 可能就拥有开和关两种动作。收音机可能拥有更多的状态 ( 开，关，当前音量，当前频道 ) 和行为 ( 开，关，增加音量，减少音量，搜索，扫描，调频 )</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><img src=\"http://www.javatree.cn/file-server/c/0d893cf3a5954bf7b42c96a5d17cf788.png\" title=\"0d893cf3a5954bf7b42c96a5d17cf788.png\" alt=\"image.png\" style=\"box-sizing: border-box; vertical-align: middle; border: 0px; max-width: 100%;\"/></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">软件对象在概念上和实际世界的对象类似。一个对象使用成员属性Field(其它语言或成为变量 ) 存储状态 , 使用方法 Method( 其它语言或成为函数 ) 表示对象的行为。 方法的用于操作对象的内部状态，是对象和对象通信的主要机制。隐藏对象的内部状态而只通过方法采访状态和交互我们称为数据的封装，这是面向对象的一个基本的原则。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; text-indent: 28px;\"><span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\"><img src=\"http://www.javatree.cn/file-server/c/63da201171b040ef9a6c0aac01addad5.png\" title=\"63da201171b040ef9a6c0aac01addad5.png\" alt=\"image.png\" style=\"box-sizing: border-box; vertical-align: middle; border: 0px; max-width: 100%;\"/></span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; text-indent: 28px;\"><span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\"></span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">一个对象可以设置属性和通过方法改变状态, 但对象仍保留了外部如何采访状态的控制。例如，自行车可 6 个齿轮，自行车对象提供了修改齿轮的方法，但拒绝不合法的齿轮值（小于 1 或大于 6 ） .</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">将一系列的代码抽取为单独的软件对象有以下的好处：</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp; 模块化: 抽取为对象的代码能独立编写和维护，一旦编写好，可以很容易传递给系统使用。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp; 信息隐藏： 只使用对象方法交互, 内部如何实现的细节对外部隐藏。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp; 代码重用： 如果一个对象已经存在(可能是另外一个软件的作者编写 ) ，在你的程序中你可以重用这个对象。一些技术专家实现的复杂的，面向任务处理的对象，我们就可以不造车轮拿来使用。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp; 插件化和调试便利: 如果系统中的一个对象有问题，我们就可以把它替换另外一个可用的对象，而不是替换整个系统。</p><p><br/></p>',1529484816,1,'',0,10,'','',53),(64,'','1. java变量','<p><span class=\"zrd-lineblock zrd-chap-as-h\" style=\"box-sizing: border-box; display: inline-block; font-size: 24px; margin-top: 15px;\">1. java变量</span></p><hr class=\"am-divider am-divider-default\" style=\"box-sizing: content-box; margin: 1.5rem auto; padding: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; border-image: initial; height: 0px; border-top-style: solid; border-top-color: rgb(221, 221, 221); clear: both;\"/><h3 style=\"box-sizing: border-box; margin: 0px 0px 1.6rem; font-size: 16px;\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 21px;\">1.1&nbsp;</span>&nbsp;<strong style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 21px;\"><span style=\"box-sizing: border-box;\">变量</span></span></strong></h3><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">从上章节学习, 以下是Bicycle类的成员变量（Field）,类通过成员属性保存对象的状态。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">int cadence = 0;</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">int speed = 0;</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">int gear = 1;</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">那有什么规则或惯例去定义这些成员变量的呢？除了整型int, 还有其它数据类型吗？成员变量声明的时候需要初始化吗？成员变量没做初始化的时候有默认的值吗？学习之前，有一些技术术语需要声明下，Field成员和Variable变量会同时使用，基本上它们指的是同一个东西。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">Java语言定义了以下几种变量。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">&nbsp;&nbsp;&nbsp;&nbsp;a）实例变量(非静态变量),对象通常把状态值保存在非静态(non-static)成员变量中，一个类可以有多是实例，每个实例有各自的实例变量值。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">&nbsp;&nbsp;&nbsp;&nbsp;b)类变量（静态成员）：类的变量是以关键字static声明的，无论类的实例创建多少次，类变量只存在一份值。例如static int numGears = 6;定义了所有的自行车有6个齿轮，额外的final关键字可限制变量值不可修改, static final int numGears = 6;定义所有的自行车有且只有6个齿轮。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">&nbsp;&nbsp;&nbsp;&nbsp;c) 局部变量: 方法内部经常需要保存临时变量和状态，声明局部变量的语法和声明类成员变量类似，例如int count = 0; 而局部变量的生命周期取决于它所在的{}大括号对， 它只在最靠近的大括号对内可见。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">&nbsp;&nbsp;&nbsp;&nbsp;d) 参数: 在以上例子main函数, public static void main(String[] args), args就是main函数的入参, 重要的一点是我们只是把参数归类为变量, 而不是Field成员。</p><p><br/></p>',1529484844,1,'',0,10,'','',58);
INSERT INTO `e_new` VALUES (65,'','1. Java类','<p><span class=\"zrd-lineblock zrd-chap-as-h\" style=\"box-sizing: border-box; display: inline-block; font-size: 24px; margin-top: 15px;\">1. Java类</span></p><hr class=\"am-divider am-divider-default\" style=\"box-sizing: content-box; margin: 1.5rem auto; padding: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; border-image: initial; height: 0px; border-top-style: solid; border-top-color: rgb(221, 221, 221); clear: both;\"/><h3 style=\"box-sizing: border-box; margin: 0px 0px 1.6rem; font-size: 16px;\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 21px;\">1.1&nbsp;</span>&nbsp;<strong style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 21px;\"><span style=\"box-sizing: border-box;\">自行车类例子</span></span></strong></h3><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">面向对象的章节我们介绍了自行车Bicycle, 它还有山地车，比赛自行车等子类。以下是自行车的具体实现，我们可以看下具体的成员Field和方法Method,接下来我们一步步的具体学习。</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, FontAwesome, monospace; font-size: 1.3rem; margin-top: 1rem; margin-bottom: 1rem; padding: 1rem; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: rgb(85, 85, 85); border: 1px solid rgb(222, 222, 222); border-radius: 0px;\">public&nbsp;class&nbsp;Bicycle&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;the&nbsp;Bicycle&nbsp;class&nbsp;has\r\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;three&nbsp;fields\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;int&nbsp;cadence;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;int&nbsp;gear;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;int&nbsp;speed;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;the&nbsp;Bicycle&nbsp;class&nbsp;has\r\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;one&nbsp;constructor\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;Bicycle(int&nbsp;startCadence,&nbsp;int&nbsp;startSpeed,&nbsp;int&nbsp;startGear)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gear&nbsp;=&nbsp;startGear;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cadence&nbsp;=&nbsp;startCadence;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;speed&nbsp;=&nbsp;startSpeed;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;the&nbsp;Bicycle&nbsp;class&nbsp;has\r\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;four&nbsp;methods\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;setCadence(int&nbsp;newValue)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cadence&nbsp;=&nbsp;newValue;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;setGear(int&nbsp;newValue)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gear&nbsp;=&nbsp;newValue;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;applyBrake(int&nbsp;decrement)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;speed&nbsp;-=&nbsp;decrement;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;speedUp(int&nbsp;increment)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;speed&nbsp;+=&nbsp;increment;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n}</pre><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">而山地车的具体实现代码如下:</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, FontAwesome, monospace; font-size: 1.3rem; margin-top: 1rem; margin-bottom: 1rem; padding: 1rem; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: rgb(85, 85, 85); border: 1px solid rgb(222, 222, 222); border-radius: 0px;\">public&nbsp;class&nbsp;MountainBike&nbsp;extends&nbsp;Bicycle&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;the&nbsp;MountainBike&nbsp;subclass&nbsp;has\r\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;one&nbsp;field\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;int&nbsp;seatHeight;\r\n&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;the&nbsp;MountainBike&nbsp;subclass&nbsp;has\r\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;one&nbsp;constructor\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;MountainBike(int&nbsp;startHeight,&nbsp;int&nbsp;startCadence,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;startSpeed,&nbsp;int&nbsp;startGear)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;super(startCadence,&nbsp;startSpeed,&nbsp;startGear);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;seatHeight&nbsp;=&nbsp;startHeight;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;the&nbsp;MountainBike&nbsp;subclass&nbsp;has\r\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;one&nbsp;method\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;setHeight(int&nbsp;newValue)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;seatHeight&nbsp;=&nbsp;newValue;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;\r\n&nbsp;\r\n}</pre><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">MountainBike继承于Bicycle， 还额外增加了seatHeiht的属性和对应的setHeight方法，因为山地车可以调整座位的高低。</p><p><br/></p>',1529484891,1,'',0,10,'','',62),(66,'','1. 注解介绍','<p><span class=\"zrd-lineblock zrd-chap-as-h\" style=\"box-sizing: border-box; display: inline-block; font-size: 24px; margin-top: 15px;\">1. 注解介绍</span></p><hr class=\"am-divider am-divider-default\" style=\"box-sizing: content-box; margin: 1.5rem auto; padding: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; border-image: initial; height: 0px; border-top-style: solid; border-top-color: rgb(221, 221, 221); clear: both;\"/><h3 style=\"box-sizing: border-box; margin: 0px 0px 1.6rem; font-size: 16px;\"><strong style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 21px;\">1.1&nbsp;<span style=\"box-sizing: border-box;\">注解的格式</span></span></strong></h3><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">简单的形式，一个注解类似下例子</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, FontAwesome, monospace; font-size: 1.3rem; margin-top: 1rem; margin-bottom: 1rem; padding: 1rem; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: rgb(85, 85, 85); border: 1px solid rgb(222, 222, 222); border-radius: 0px;\">@Entity</pre><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">字符@告诉编译器后面跟着一个注解。下一个例子注解的名字是Override</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, FontAwesome, monospace; font-size: 1.3rem; margin-top: 1rem; margin-bottom: 1rem; padding: 1rem; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: rgb(85, 85, 85); border: 1px solid rgb(222, 222, 222); border-radius: 0px;\">@Override\r\nvoid&nbsp;mySuperMethod()&nbsp;{&nbsp;...&nbsp;}</pre><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">注解可以包含元素，类似键值对，每个元素都有对应的值。</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, FontAwesome, monospace; font-size: 1.3rem; margin-top: 1rem; margin-bottom: 1rem; padding: 1rem; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: rgb(85, 85, 85); border: 1px solid rgb(222, 222, 222); border-radius: 0px;\">@Author(\r\n&nbsp;&nbsp;&nbsp;name&nbsp;=&nbsp;&quot;Benjamin&nbsp;Franklin&quot;,\r\n&nbsp;&nbsp;&nbsp;date&nbsp;=&nbsp;&quot;3/27/2003&quot;\r\n)\r\nclass&nbsp;MyClass()&nbsp;{&nbsp;...&nbsp;}</pre><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">或</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, FontAwesome, monospace; font-size: 1.3rem; margin-top: 1rem; margin-bottom: 1rem; padding: 1rem; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: rgb(85, 85, 85); border: 1px solid rgb(222, 222, 222); border-radius: 0px;\">@SuppressWarnings(value&nbsp;=&nbsp;&quot;unchecked&quot;)\r\nvoid&nbsp;myMethod()&nbsp;{&nbsp;...&nbsp;}</pre><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">如果只有一个元素，且元素名为value， 则可以简写为</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, FontAwesome, monospace; font-size: 1.3rem; margin-top: 1rem; margin-bottom: 1rem; padding: 1rem; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: rgb(85, 85, 85); border: 1px solid rgb(222, 222, 222); border-radius: 0px;\">@SuppressWarnings(&quot;unchecked&quot;)\r\nvoid&nbsp;myMethod()&nbsp;{&nbsp;...&nbsp;}</pre><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">如果注解没有元素，那么括号也可以省略，就好像@Override的写法。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">同一个声明上可以支持多个注解。</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, FontAwesome, monospace; font-size: 1.3rem; margin-top: 1rem; margin-bottom: 1rem; padding: 1rem; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: rgb(85, 85, 85); border: 1px solid rgb(222, 222, 222); border-radius: 0px;\">@Author(name&nbsp;=&nbsp;&quot;Jane&nbsp;Doe&quot;)\r\n@EBook\r\nclass&nbsp;MyClass&nbsp;{&nbsp;...&nbsp;}</pre><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">如果注解存在重复的类型，那么称之为可重复的注解。</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, FontAwesome, monospace; font-size: 1.3rem; margin-top: 1rem; margin-bottom: 1rem; padding: 1rem; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: rgb(85, 85, 85); border: 1px solid rgb(222, 222, 222); border-radius: 0px;\">@Author(name&nbsp;=&nbsp;&quot;Jane&nbsp;Doe&quot;)\r\n@Author(name&nbsp;=&nbsp;&quot;John&nbsp;Smith&quot;)\r\nclass&nbsp;MyClass&nbsp;{&nbsp;...&nbsp;}</pre><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">可重复的注解JDK1.8后开始支持。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">注解类型主要在java.lang或java.lang.annotation包中定义。以上的例子中，Override和SuppressWarnings是Java预定义的注解，我们也可以定义自己的注解。上面例子的EBook和Author都是自定义的注解。</p><p><br/></p>',1529484921,1,'',0,10,'','',67),(67,'','1. 接口的定义和实现','<p><span class=\"zrd-lineblock zrd-chap-as-h\" style=\"box-sizing: border-box; display: inline-block; font-size: 24px; margin-top: 15px;\">1. 接口的定义和实现</span></p><hr class=\"am-divider am-divider-default\" style=\"box-sizing: content-box; margin: 1.5rem auto; padding: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; border-image: initial; height: 0px; border-top-style: solid; border-top-color: rgb(221, 221, 221); clear: both;\"/><h3 style=\"box-sizing: border-box; margin: 0px 0px 1.6rem; font-size: 16px;\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 21px;\">1.1&nbsp;</span>&nbsp;<strong style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 21px;\"><span style=\"box-sizing: border-box;\">接口介绍</span></span></strong></h3><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">在软件工程里面有很多场景和情况，有一点很重要的是，对于多个群组的编程者，他们都需要赞同使用一种“合同”规范去阐明软件是如何交互的。每个群组的人在不需要知道其它群组的代码的如何编写，也能够很好的编写自己的代码。通常，接口就是这里说的合同规范。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">例如，假设未来社会的自动驾驶，无需人工司机的参与，计算机控制的自动驾驶汽车将能带领乘客穿梭街道。汽车制造商编写软件控制汽车的停车，发动，加速，拐弯等。另外一个工业群组，电子导航设备制造商，制造电脑系统接收GPS位置数据，无线传输交通的状况，根据路况自动驾驶。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">自动化的制造商必须发布工业标准的接口和细节，阐明车辆驾驶的时候什么方法会被调用。导航制造商才编写软件调用这些接口去实现控制车辆的运行。任何一方的工业组，都不需要知道其它组的软件如何实现。 实际上，每个组都会考虑各自软件的专利权，保持权利去修改自己的软件， 持续的发布自己的接口。</p><h3 style=\"box-sizing: border-box; margin: 0px 0px 1.6rem; font-size: 16px; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><strong style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 21px;\">1.2 Java<span style=\"box-sizing: border-box;\">的接口</span></span></strong></h3><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">在Java语言里, 接口是引用类型，和类类似。接口只能包含常量，方法签名，默认方法，静态方法和嵌套类型。方法体只有在默认方法和静态方法的时候才存在。接口不能被实例化， 接口只能被类去实现，或者被其它接口继承。定义一个接口和创建新类相似。</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, FontAwesome, monospace; font-size: 1.3rem; margin-top: 1rem; margin-bottom: 1rem; padding: 1rem; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: rgb(85, 85, 85); border: 1px solid rgb(222, 222, 222); border-radius: 0px;\">public&nbsp;interface&nbsp;OperateCar&nbsp;{\r\n&nbsp;\r\n&nbsp;&nbsp;&nbsp;//&nbsp;constant&nbsp;declarations,&nbsp;if&nbsp;any\r\n&nbsp;\r\n&nbsp;&nbsp;&nbsp;//&nbsp;method&nbsp;signatures\r\n&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;//&nbsp;An&nbsp;enum&nbsp;with&nbsp;values&nbsp;RIGHT,&nbsp;LEFT\r\n&nbsp;&nbsp;&nbsp;int&nbsp;turn(Direction&nbsp;direction,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;double&nbsp;radius,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;double&nbsp;startSpeed,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;double&nbsp;endSpeed);\r\n&nbsp;&nbsp;&nbsp;int&nbsp;changeLanes(Direction&nbsp;direction,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;double&nbsp;startSpeed,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;double&nbsp;endSpeed);\r\n&nbsp;&nbsp;&nbsp;int&nbsp;signalTurn(Direction&nbsp;direction,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;boolean&nbsp;signalOn);\r\n&nbsp;&nbsp;&nbsp;int&nbsp;getRadarFront(double&nbsp;distanceToCar,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;double&nbsp;speedOfCar);\r\n&nbsp;&nbsp;&nbsp;int&nbsp;getRadarRear(double&nbsp;distanceToCar,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;double&nbsp;speedOfCar);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;......\r\n&nbsp;&nbsp;&nbsp;//&nbsp;more&nbsp;method&nbsp;signatures\r\n}</pre><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">注意到一般情况下，接口方法签名后没有大括号方法体，跟着分号就结束了。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">要使用接口，我们就需要写一个类实现这个接口，实现接口的方法的逻辑。</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, FontAwesome, monospace; font-size: 1.3rem; margin-top: 1rem; margin-bottom: 1rem; padding: 1rem; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: rgb(85, 85, 85); border: 1px solid rgb(222, 222, 222); border-radius: 0px;\">public&nbsp;class&nbsp;OperateBMW760i&nbsp;implements&nbsp;OperateCar&nbsp;{\r\n&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;the&nbsp;OperateCar&nbsp;method&nbsp;signatures,&nbsp;with&nbsp;implementation&nbsp;--\r\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;for&nbsp;example:\r\n&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;signalTurn(Direction&nbsp;direction,&nbsp;boolean&nbsp;signalOn)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;code&nbsp;to&nbsp;turn&nbsp;BMW&#39;s&nbsp;LEFT&nbsp;turn&nbsp;indicator&nbsp;lights&nbsp;on\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;code&nbsp;to&nbsp;turn&nbsp;BMW&#39;s&nbsp;LEFT&nbsp;turn&nbsp;indicator&nbsp;lights&nbsp;off\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;code&nbsp;to&nbsp;turn&nbsp;BMW&#39;s&nbsp;RIGHT&nbsp;turn&nbsp;indicator&nbsp;lights&nbsp;on\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;code&nbsp;to&nbsp;turn&nbsp;BMW&#39;s&nbsp;RIGHT&nbsp;turn&nbsp;indicator&nbsp;lights&nbsp;off\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;other&nbsp;members,&nbsp;as&nbsp;needed&nbsp;--&nbsp;for&nbsp;example,&nbsp;helper&nbsp;classes&nbsp;not&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;visible&nbsp;to&nbsp;clients&nbsp;of&nbsp;the&nbsp;interface\r\n}</pre><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">在自动驾驶汽车的例子里，汽车制造商要实现各自的接口。Chevrolet雪佛兰公司具体的实现肯定和Toyota丰田的不一样，但都是相同的OperateCar接口。导航制造上就是这些接口的使用者和客户，他们会构造系统使用GPS数据定义车的位置，街道数字地图和交通状况数据去驾驶车辆，导航系统将会调用这些接口方法:run,brake,turn等。</p><p><br/></p>',1529484965,1,'',0,10,'','',72),(68,'','1. 数字类介绍','<p><span class=\"zrd-lineblock zrd-chap-as-h\" style=\"box-sizing: border-box; display: inline-block; font-size: 24px; margin-top: 15px;\">1. 数字类介绍</span></p><hr class=\"am-divider am-divider-default\" style=\"box-sizing: content-box; margin: 1.5rem auto; padding: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; border-image: initial; height: 0px; border-top-style: solid; border-top-color: rgb(221, 221, 221); clear: both;\"/><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1.6rem;\">学习数字，大多的时候我们用到的是原生数据类型。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">int i = 500;</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">float gpa = 3.65f;</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">byte mask = 0xff;</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">但有一些原因我们使用数字类取代原生数据类型，Java平台为每个原生数据类型都提供了wrapper包装类，这些类包装原生数据类型到对象里面。很多时候，是通过编译器完成包装。我们把原生数据类型赋值给数字对象的时候，编译器会原生数据类型装箱(box)为包装类。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">我们把数字对象赋值给原生数据类型，编译器会把数字对象拆箱(unbox)为原生数字类型。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">具体细节我们在稍后的自动装箱拆箱中讲解。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">所有数字类型的包装类结构如下：</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">&nbsp;<img src=\"http://www.javatree.cn/file-server/c/9d8b003c53e844eea1f163c7ed297493.png\" title=\"9d8b003c53e844eea1f163c7ed297493.png\" alt=\"image.png\" style=\"box-sizing: border-box; vertical-align: middle; border: 0px; max-width: 100%;\"/></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">注意：有4中Number的子类我们没在这里讨论，BigDecimal和BigInteger用于高精度计算，AtomicInteger和AtomicLong用于多线程应用。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">以下场景考虑使用Number类而不是原生数据类型：</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">a）方法需要一个对象作为参数（经常用在操作数字的集合）。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">b）为了使用类中定义的常量，例如MIN_VALUE和MAX_VALUE, 它提供数字类型的上下边界值。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">c）使用类的方法转换用于字符串和数字的相互转换，数字类型相互转换。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">Number的子类实现的方法</p><table width=\"568\"><tbody style=\"box-sizing: border-box;\"><tr class=\"firstRow\" style=\"box-sizing: border-box;\"><td width=\"253\" style=\"box-sizing: border-box; padding: 4px; border-style: outset; border-color: windowtext;\"><p style=\"box-sizing: border-box; margin-bottom: 1.6rem;\"><strong style=\"box-sizing: border-box;\">方法</strong></p></td><td width=\"314\" style=\"box-sizing: border-box; padding: 4px; border-left: none;\"><p style=\"box-sizing: border-box; margin-bottom: 1.6rem;\"><strong style=\"box-sizing: border-box;\">描述</strong></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"253\" style=\"box-sizing: border-box; padding: 4px; border-top: none; border-right-style: outset; border-right-color: windowtext; border-left-style: outset; border-left-color: windowtext;\"><p style=\"box-sizing: border-box; margin-bottom: 1.6rem;\">byte byteValue()<br style=\"box-sizing: border-box;\"/>short shortValue()<br style=\"box-sizing: border-box;\"/>int intValue()<br style=\"box-sizing: border-box;\"/>long longValue()<br style=\"box-sizing: border-box;\"/>float floatValue()<br style=\"box-sizing: border-box;\"/>double doubleValue()</p></td><td width=\"314\" style=\"box-sizing: border-box; padding: 4px; border-left: none;\"><p style=\"box-sizing: border-box; margin-bottom: 1.6rem;\">转换Number对象值为原生数据类型</p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"253\" style=\"box-sizing: border-box; padding: 4px; border-top: none; border-right-style: outset; border-right-color: windowtext; border-left-style: outset; border-left-color: windowtext;\"><p style=\"box-sizing: border-box; margin-bottom: 1.6rem;\">int compareTo(Byte anotherByte)<br style=\"box-sizing: border-box;\"/>int compareTo(Double anotherDouble)<br style=\"box-sizing: border-box;\"/>int compareTo(Float anotherFloat)<br style=\"box-sizing: border-box;\"/>int compareTo(Integer anotherInteger)<br style=\"box-sizing: border-box;\"/>int compareTo(Long anotherLong)<br style=\"box-sizing: border-box;\"/>int compareTo(Short anotherShort)</p></td><td width=\"314\" style=\"box-sizing: border-box; padding: 4px; border-left: none;\"><p style=\"box-sizing: border-box; margin-bottom: 1.6rem;\">与另外一个Number对象比较值</p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"253\" style=\"box-sizing: border-box; padding: 4px; border-top: none; border-right-style: outset; border-right-color: windowtext; border-left-style: outset; border-left-color: windowtext;\"><p style=\"box-sizing: border-box; margin-bottom: 1.6rem;\">boolean equals(Object obj)</p></td><td width=\"314\" style=\"box-sizing: border-box; padding: 4px; border-left: none;\"><p style=\"box-sizing: border-box; margin-bottom: 1.6rem;\">决定当前Number对象是否与传入的对象相等。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">传入对象非null且与当前Number类型相同，有相同的值时方法返回true.</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">浮点数包装类则还有其它比较要求需要参考Java Doc</p></td></tr></tbody></table><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">每个具体的Number实现类都提供了很多转换的方法，如下表格java.lang.Integer的方法：</p><table width=\"568\"><tbody style=\"box-sizing: border-box;\"><tr class=\"firstRow\" style=\"box-sizing: border-box;\"><td width=\"257\" style=\"box-sizing: border-box; padding: 4px; border-style: outset; border-color: windowtext;\"><p style=\"box-sizing: border-box; margin-bottom: 1.6rem;\"><strong style=\"box-sizing: border-box;\">方法</strong></p></td><td width=\"310\" style=\"box-sizing: border-box; padding: 4px; border-left: none;\"><p style=\"box-sizing: border-box; margin-bottom: 1.6rem;\"><strong style=\"box-sizing: border-box;\">描述</strong></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"257\" style=\"box-sizing: border-box; padding: 4px; border-top: none; border-right-style: outset; border-right-color: windowtext; border-left-style: outset; border-left-color: windowtext;\"><p style=\"box-sizing: border-box; margin-bottom: 1.6rem;\">static Integer decode(String s)</p></td><td width=\"310\" style=\"box-sizing: border-box; padding: 4px; border-left: none;\"><p style=\"box-sizing: border-box; margin-bottom: 1.6rem;\">&nbsp;字符串解码为整数, 可接受16进制，8进制，小数作为输入</p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"257\" style=\"box-sizing: border-box; padding: 4px; border-top: none; border-right-style: outset; border-right-color: windowtext; border-left-style: outset; border-left-color: windowtext;\"><p style=\"box-sizing: border-box; margin-bottom: 1.6rem;\">static int parseInt(String s)</p></td><td width=\"310\" style=\"box-sizing: border-box; padding: 4px; border-left: none;\"><p style=\"box-sizing: border-box; margin-bottom: 1.6rem;\">返回一个整数&nbsp;(支持小数字符串).</p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"257\" style=\"box-sizing: border-box; padding: 4px; border-top: none; border-right-style: outset; border-right-color: windowtext; border-left-style: outset; border-left-color: windowtext;\"><p style=\"box-sizing: border-box; margin-bottom: 1.6rem;\">static int parseInt(String s, int radix)</p></td><td width=\"310\" style=\"box-sizing: border-box; padding: 4px; border-left: none;\"><p style=\"box-sizing: border-box; margin-bottom: 1.6rem;\">返回整数，radix是表示字符串是几进制. (10, 2, 8, 或16)</p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"257\" style=\"box-sizing: border-box; padding: 4px; border-top: none; border-right-style: outset; border-right-color: windowtext; border-left-style: outset; border-left-color: windowtext;\"><p style=\"box-sizing: border-box; margin-bottom: 1.6rem;\">String toString()</p></td><td width=\"310\" style=\"box-sizing: border-box; padding: 4px; border-left: none;\"><p style=\"box-sizing: border-box; margin-bottom: 1.6rem;\">返回字符串表示整数值</p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"257\" style=\"box-sizing: border-box; padding: 4px; border-top: none; border-right-style: outset; border-right-color: windowtext; border-left-style: outset; border-left-color: windowtext;\"><p style=\"box-sizing: border-box; margin-bottom: 1.6rem;\">static String toString(int i)</p></td><td width=\"310\" style=\"box-sizing: border-box; padding: 4px; border-left: none;\"><p style=\"box-sizing: border-box; margin-bottom: 1.6rem;\">返回一个字符串表示传入整数的值</p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"257\" style=\"box-sizing: border-box; padding: 4px; border-top: none; border-right-style: outset; border-right-color: windowtext; border-left-style: outset; border-left-color: windowtext;\"><p style=\"box-sizing: border-box; margin-bottom: 1.6rem;\">static Integer valueOf(int i)</p></td><td width=\"310\" style=\"box-sizing: border-box; padding: 4px; border-left: none;\"><p style=\"box-sizing: border-box; margin-bottom: 1.6rem;\">原生数据类型转换为包装类</p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"257\" style=\"box-sizing: border-box; padding: 4px; border-top: none; border-right-style: outset; border-right-color: windowtext; border-left-style: outset; border-left-color: windowtext;\"><p style=\"box-sizing: border-box; margin-bottom: 1.6rem;\">static Integer valueOf(String s)</p></td><td width=\"310\" style=\"box-sizing: border-box; padding: 4px; border-left: none;\"><p style=\"box-sizing: border-box; margin-bottom: 1.6rem;\">字符串转为包装类</p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"257\" style=\"box-sizing: border-box; padding: 4px; border-top: none; border-right-style: outset; border-right-color: windowtext; border-left-style: outset; border-left-color: windowtext;\"><p style=\"box-sizing: border-box; margin-bottom: 1.6rem;\">static Integer valueOf(String s, int radix)</p></td><td width=\"310\" style=\"box-sizing: border-box; padding: 4px; border-left: none;\"><p style=\"box-sizing: border-box; margin-bottom: 1.6rem;\">字符串转为包装类且指定进制.</p></td></tr></tbody></table><p><br/></p>',1529484998,1,'',0,10,'','',84),(69,'','1. 泛型简介和类型','<p><span class=\"zrd-lineblock zrd-chap-as-h\" style=\"box-sizing: border-box; display: inline-block; font-size: 24px; margin-top: 15px;\">1. 泛型简介和类型</span></p><hr class=\"am-divider am-divider-default\" style=\"box-sizing: content-box; margin: 1.5rem auto; padding: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; border-image: initial; height: 0px; border-top-style: solid; border-top-color: rgb(221, 221, 221); clear: both;\"/><h3 style=\"box-sizing: border-box; margin: 0px 0px 1.6rem; font-size: 16px;\"><strong style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 21px;\">1.1&nbsp;<span style=\"box-sizing: border-box;\">为什么使用泛型？</span></span></strong></h3><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">简言而之，定义类，接口，方法的时候泛型允许数据类型（类和接口）作为参数。就像方法声明的正式参数一样，类型参数在不同的输入的情况下提供了重用相同代码的能力。区别是方法的正式参数的输入是值，而类型参数的输入是数据类型。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">使用泛型的好处</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">a）在编译期更强的类型检查。Java编译器会开启强类型检查，如果类型有误则报错。修复编译期的错误要比修复运行期的错误要简单，运行期的错误较难定位。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">b）减少类型转换</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">以下代码</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">List list = new ArrayList();</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">list.add(&quot;hello&quot;);</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">String s = (String) list.get(0);</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">使用泛型重写，代码就不需要类型转换</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">List&lt;String&gt; list = new ArrayList&lt;String&gt;();</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">list.add(&quot;hello&quot;);</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">String s = list.get(0); &nbsp;&nbsp;// no cast</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">c）允许开发者实现通用的算法。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">使用泛型，开发者可以实现在不同数据类型都通用的算法，可定制化，类型安全，代码也容易</p><p><br/></p>',1529485035,1,'',0,10,'','',93),(70,'','1. 创建package','<p><span class=\"zrd-lineblock zrd-chap-as-h\" style=\"box-sizing: border-box; display: inline-block; font-size: 24px; margin-top: 15px;\">1. 创建package</span></p><hr class=\"am-divider am-divider-default\" style=\"box-sizing: content-box; margin: 1.5rem auto; padding: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; border-image: initial; height: 0px; border-top-style: solid; border-top-color: rgb(221, 221, 221); clear: both;\"/><h3 style=\"box-sizing: border-box; margin: 0px 0px 1.6rem; font-size: 16px;\"><strong style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 21px;\">1.1 package<span style=\"box-sizing: border-box;\">简介</span></span></strong></h3><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">为了让类型容易查找和使用，避免命名冲突，控制权限采访，我们可以打包相关的类型到package里面。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">定义：package是一组相关的类型的集合，可提供采访保护和命名空间的管理。这里的类型涉及到类，接口，枚举，注解。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">类型是Java平台的一部分，主要根据功能打为不同的包。基础类可以在java.lang中找到，读写类可以在java.io中找到。我们也可以把自己编写的类打包。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">假设我们编写了一组图形对象。</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, FontAwesome, monospace; font-size: 1.3rem; margin-top: 1rem; margin-bottom: 1rem; padding: 1rem; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: rgb(85, 85, 85); border: 1px solid rgb(222, 222, 222); border-radius: 0px;\">//in&nbsp;the&nbsp;Draggable.java&nbsp;file\r\npublic&nbsp;interface&nbsp;Draggable&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;...\r\n}\r\n&nbsp;\r\n//in&nbsp;the&nbsp;Graphic.java&nbsp;file\r\npublic&nbsp;abstract&nbsp;class&nbsp;Graphic&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;...\r\n}\r\n&nbsp;\r\n//in&nbsp;the&nbsp;Circle.java&nbsp;file\r\npublic&nbsp;class&nbsp;Circle&nbsp;extends&nbsp;Graphic\r\n&nbsp;&nbsp;&nbsp;&nbsp;implements&nbsp;Draggable&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;.&nbsp;.&nbsp;.\r\n}\r\n&nbsp;\r\n//in&nbsp;the&nbsp;Rectangle.java&nbsp;file\r\npublic&nbsp;class&nbsp;Rectangle&nbsp;extends&nbsp;Graphic\r\n&nbsp;&nbsp;&nbsp;&nbsp;implements&nbsp;Draggable&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;.&nbsp;.&nbsp;.\r\n}\r\n&nbsp;\r\n//in&nbsp;the&nbsp;Point.java&nbsp;file\r\npublic&nbsp;class&nbsp;Point&nbsp;extends&nbsp;Graphic\r\n&nbsp;&nbsp;&nbsp;&nbsp;implements&nbsp;Draggable&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;.&nbsp;.&nbsp;.\r\n}\r\n&nbsp;\r\n//in&nbsp;the&nbsp;Line.java&nbsp;file\r\npublic&nbsp;class&nbsp;Line&nbsp;extends&nbsp;Graphic\r\n&nbsp;&nbsp;&nbsp;&nbsp;implements&nbsp;Draggable&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;.&nbsp;.&nbsp;.\r\n}</pre><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">我们打包类或接口的一些原因。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">a） 自己或其它开发者可以很容易的确定哪些类型是相关的。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">b）&nbsp;本例中，自己或其它开发者可以快速找到图形相关的类型。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">c）&nbsp;自己包下的创建的类型名称不会和其它包下的名字冲突。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">d）&nbsp;包下的类型可以互相无限制的采访，但又可让其它包的类型提供有限制的采访。</p><p><br/></p>',1529485129,1,'',0,10,'','',100),(71,'','1. 进程和线程','<h1 class=\"postTitle\" style=\"margin: 0px 0px 20px; padding: 0px; font-size: 28px; font-weight: 400; line-height: 1.8; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><a id=\"cb_post_title_url\" class=\"postTitle2\" href=\"https://www.cnblogs.com/fuchongjundream/p/3829508.html\" style=\"margin: 0px; padding: 0px; color: rgb(51, 51, 51); text-decoration-line: none;\">进程、线程、多线程相关总结</a></h1><p style=\"text-align:center;margin: 10px auto; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; font-size: 15px;\"><strong style=\"margin: 0px; padding: 0px; line-height: 1.5;\">一、</strong><strong style=\"margin: 0px; padding: 0px; line-height: 1.5;\">说说概念</strong></span></p><p style=\"text-align:left;margin: 10px auto; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; font-size: 15px;\"><strong style=\"margin: 0px; padding: 0px;\">1</strong><strong style=\"margin: 0px; padding: 0px;\">、进程（process</strong><strong style=\"margin: 0px; padding: 0px;\">）</strong></span></p><p style=\"text-align:left;margin: 10px auto; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; font-size: 15px;\"><strong style=\"margin: 0px; padding: 0px;\">狭义定义：</strong>进程就是一段程序的执行过程。</span></p><p style=\"text-align:left;margin: 10px auto; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; font-size: 15px;\"><strong style=\"margin: 0px; padding: 0px;\">广义定义：</strong>进程是一个具有一定独立功能的程序关于某个数据集合的一次运行活动。它是操作系统动态执行的基本单元，在传统的操作系统中，进程既是基本的分配单元，也是基本的执行单元。</span></p><p style=\"text-align:left;margin: 10px auto; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; font-size: 15px;\"><strong style=\"margin: 0px; padding: 0px;\">简单的来讲进程的概念主要有两点</strong>：<strong style=\"margin: 0px; padding: 0px;\">第一</strong>，进程是一个实体。每一个进程都有它自己的地址空间，一般情况下，包括文本区域（text region）、数据区域（data region）和堆栈（stack region）。文本区域存储处理器执行的代码；数据区域存储变量和进程执行期间使用的动态分配的内存；堆栈区域存储着活动过程调用的指令和本地变量。<strong style=\"margin: 0px; padding: 0px;\">第二</strong>，进程是一个“执行中的程序”。程序是一个没有生命的实体，只有处理器赋予程序生命时，它才能成为一个活动的实体，我们称其为进程。</span></p><p style=\"text-align:left;margin: 10px auto; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; font-size: 15px;\"><strong style=\"margin: 0px; padding: 0px;\">进程状态：</strong>进程有三个状态，就绪、运行和阻塞。就绪状态其实就是获取了出cpu外的所有资源，只要处理器分配资源就可以马上执行。就绪状态有排队序列什么的，排队原则不再赘述。运行态就是获得了处理器分配的资源，程序开始执行。阻塞态，当程序条件不够时候，需要等待条件满足时候才能执行，如等待i/o操作时候，此刻的状态就叫阻塞态。</span></p><p style=\"text-align:left;margin: 10px auto; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; font-size: 15px;\"><strong style=\"margin: 0px; padding: 0px;\">2</strong><strong style=\"margin: 0px; padding: 0px;\">、程序</strong></span></p><p style=\"text-align:left;margin: 10px auto; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; font-size: 15px;\">说起进程，就不得不说下程序。先看定义：程序是指令和数据的有序集合，其本身没有任何运行的含义，是一个静态的概念。而进程则是在处理机上的一次执行过程，它是一个动态的概念。这个不难理解，其实进程是包含程序的，进程的执行离不开程序，进程中的文本区域就是代码区，也就是程序。</span></p><p style=\"text-align:left;margin: 10px auto; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; font-size: 15px;\"><strong style=\"margin: 0px; padding: 0px;\">3</strong><strong style=\"margin: 0px; padding: 0px;\">、线程</strong></span></p><p style=\"text-align:left;margin: 10px auto; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; font-size: 15px;\">通常在一个进程中可以包含若干个线程，当然一个进程中至少有一个线程，不然没有存在的意义。线程可以利用进程所拥有的资源，在引入线程的操作系统中，通常都是把进程作为分配资源的基本单位，而把线程作为独立运行和独立调度的基本单位，由于线程比进程更小，基本上不拥有系统资源，故对它的调度所付出的开销就会小得多，能更高效的提高系统多个程序间并发执行的程度。</span></p><p style=\"text-align:left;margin: 10px auto; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; font-size: 15px;\"><strong style=\"margin: 0px; padding: 0px;\">4</strong><strong style=\"margin: 0px; padding: 0px;\">、多线程</strong></span></p><p style=\"text-align:left;margin: 10px auto; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; font-size: 15px;\">在一个程序中，这些独立运行的程序片段叫作“线程”（Thread），利用它编程的概念就叫作“多线程处理”。多线程是为了同步完成多项任务，不是为了提高运行效率，而是为了提高资源使用效率来提高系统的效率。线程是在同一时间需要完成多项任务的时候实现的。</span></p><p style=\"text-align:left;margin: 10px auto; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; font-size: 15px;\">最简单的比喻多线程就像火车的每一节车厢，而进程则是火车。车厢离开火车是无法跑动的，同理火车也不可能只有一节车厢。多线程的出现就是为了提高效率。</span></p><p style=\"text-align:left;margin: 10px auto; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; font-size: 15px;\"><strong style=\"margin: 0px; padding: 0px;\">二、</strong><strong style=\"margin: 0px; padding: 0px;\">说说区别</strong></span></p><p style=\"text-align:left;margin: 10px auto; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; font-size: 15px;\"><strong style=\"margin: 0px; padding: 0px;\">1</strong><strong style=\"margin: 0px; padding: 0px;\">、进程与线程的区别：</strong></span></p><p style=\"text-align:left;margin: 10px auto; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; font-size: 15px;\">进程和线程的主要差别在于它们是不同的操作系统资源管理方式。进程有独立的地址空间，一个进程崩溃后，在保护模式下不会对其它进程产生影响，而线程只是一个进程中的不同执行路径。线程有自己的堆栈和局部变量，但线程之间没有单独的地址空间，<strong style=\"margin: 0px; padding: 0px;\">一个线程死掉就等于整个进程死掉</strong>，<strong style=\"margin: 0px; padding: 0px;\">所以多进程的程序要比多线程的程序健壮</strong>，但在进程切换时，耗费资源较大，效率要差一些。但对于一些要求同时进行并且又要共享某些变量的并发操作，只能用线程，不能用进程。</span></p><p style=\"text-align:left;margin: 10px auto; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; font-size: 15px;\">1) 简而言之,一个程序至少有一个进程,一个进程至少有一个线程.</span></p><p style=\"text-align:left;margin: 10px auto; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; font-size: 15px;\">2) 线程的划分尺度小于进程，使得多线程程序的并发性高。</span></p><p style=\"text-align:left;margin: 10px auto; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; font-size: 15px;\">3) 另外，进程在执行过程中拥有独立的内存单元，而多个线程共享内存，从而极大地提高了程序的运行效率。</span></p><p style=\"text-align:left;margin: 10px auto; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; font-size: 15px;\">4) 线程在执行过程中与进程还是有区别的。每个独立的线程有一个程序运行的入口、顺序执行序列和程序的出口。但是线程不能够独立执行，必须依存在应用程序中，由应用程序提供多个线程执行控制。</span></p><p style=\"text-align:left;margin: 10px auto; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; font-size: 15px;\">5) 从逻辑角度来看，多线程的意义在于一个应用程序中，有多个执行部分可以同时执行。但操作系统并没有将多个线程看做多个独立的应用，来实现进程的调度和管理以及资源分配。这就是进程和线程的重要区别。</span></p><p style=\"text-align:left;margin: 10px auto; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; font-size: 15px;\"><strong style=\"margin: 0px; padding: 0px;\">三、说说优缺点</strong></span></p><p style=\"text-align:left;margin: 10px auto; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; font-size: 15px;\">线程和进程在使用上各有优缺点：线程执行开销小，但不利于资源的管理和保护；而进程正相反。同时，线程适合于在SMP(多核处理机)机器上运行，而进程则可以跨机器迁移。</span></p><p style=\"text-align:left;margin: 10px auto; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; font-size: 15px;\"><strong style=\"margin: 0px; padding: 0px;\">四、总结</strong></span></p><p style=\"text-align:left;margin: 10px auto; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; font-size: 15px;\">入职第一天闲的无聊，参考下别人的总结自己也简单总结了下。知道以上的基本面试够用了，至于进程、线程的细节，底层构成，调度等问题是操作系统的东西。我就不详述了。</span></p><p style=\"text-align:left;margin: 10px auto; padding: 0px;\"><strong style=\"margin: 0px; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; font-size: 15.2381px; line-height: 20.9524px;\">五、实例</span></strong></p><p style=\"text-align:left;margin: 10px auto; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; font-size: 15.2381px; line-height: 20.9524px;\">1、多线程写日志，涉及到单例模式，异步写</span></p><p><br/></p>',1529485260,1,'',0,10,'','',110),(72,'','1. IO流常用类','<h1 style=\"margin: 10px 0px; padding: 0px; font-size: 28px; line-height: 1.5; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; background-color: rgb(51, 204, 204);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(255, 255, 255);\">一、IO流的分类</span>　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　</span></h1><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\">　　　　1.1、按数据流的方向分为&nbsp;<span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(255, 0, 0); font-size: 16px;\">输入流</span>、<span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\">输出流</span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\">　　　　　　　　此输入、输出是相对于我们写的代码程序而言，</p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\">　　　　　　　　输入流：从别的地方(本地文件，网络上的资源等)获取资源&nbsp;<span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(255, 0, 0);\">输入</span>到 我们的程序中</p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\">　　　　　　　　输出流：从我们的程序中 输出到 别的地方(本地文件)， 将一个字符串保存到本地文件中，就需要使用输出流。</p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\">　　　　1.2、按处理数据单位不同分为&nbsp;<span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\">字节流</span>、<span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\">字符流&nbsp;&nbsp;<br style=\"margin: 0px; padding: 0px;\"/></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\">　　　　　　　　　1字符 = 2字节 、 1字节(byte) = 8位(bit)&nbsp; 、 一个汉字占两个字节长度</span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\">　　　　　　　<span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\">字节流：每次读取(写出)一个字节，当传输的资源文件有中文时，就会出现乱码，</span></span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\">　　　　　　　　字符流：每次读取(写出)两个字节，有中文时，使用该流就可以正确传输显示中文。</span></span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\">　　　　1.3、按功能不同分为&nbsp;<span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(255, 0, 0); font-size: 16px;\">节点流</span>、<span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\">处理流</span></span></span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\">　　　　　　　<span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\">节点流：以从或向一个特定的地方（节点）读写数据。如FileInputStream　</span></span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\">　　　　　　　&nbsp;&nbsp; 处理流：是对一个已存在的流的连接和封装，通过所封装的流的功能调用实现数据读写。如BufferedReader。处理流的构造方法总是要带一个其他的流对象做参数。一个流对象经过其他流的多次包装</span>，</span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\">　　　　　　　这里就涉及到了</span></span><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(255, 0, 0);\">装饰者模式</span><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\">，在后面会详细讲解该模式在IO中的体现。</span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\">&nbsp;</p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\">　　　　1.4、4个基本的抽象流类型，所有的流都继承这四个。</span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\">　　　　　　　　　　　输入流　　　　　　输出流</span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\">　　　　　　字节流　　InputStream　　outputStream</span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\">　　　　　　字符流　　Reader　　　　　　Writer</span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\">　　　　　　inputStream：字节输入流</span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\">　　　　　　outputStream：字节输出流</span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\">　　　　　　Reader：字符输入流</span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\">　　　　　　Writer：字符输出流</span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\">　　　　　</span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\">　　　　<span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\">1.5、总结流的分类</span></span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\">　　　　　　　　看上面的几个分类，可能对于初次学io的同学会感觉到有些混乱，那什么时候用字节流，什么时候该用输出流呢？其实非常简单，举一个例子就学会了，</span></span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\">　　　　　　　　1、首先自己要知道是选择输入流还是输出流，这就要根据自己的情况而定，如果你想从程序写东西到别的地方，那么就选择输出流，反之用输入流</span></span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\">　　　　　　　　2、然后考虑你传输数据时，是选择使用字节流传输还是字符流，也就是每次传1个字节还是2个字节，有中文肯定就选择字符流了。</span></span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\">　　　　　　　　3、前面两步就可以选出一个合适的节点流了，比如字节输入流inputStream，如果要在此基础上增强功能，那么就在处理流中选择一个合适的即可。</span></span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\">&nbsp;</p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 18pt; color: rgb(255, 0, 0); background-color: rgb(51, 204, 204);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(255, 255, 255);\">二、4个基本抽象类的继承关系分析</span>　　　　　　　　　　　　　　　　　　　　　　　　　　　　</span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\">　　　　　<span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(255, 0, 0); font-size: 16px;\">2.1、InputStream 字节输入流</span><br style=\"margin: 0px; padding: 0px;\"/></span></span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\">　　　　　　　　　　<img src=\"https://images2015.cnblogs.com/blog/874710/201705/874710-20170530112251336-478728150.png\" alt=\"\" width=\"532\" height=\"207\" style=\"margin: 0px; padding: 0px; border: 0px; max-width: 900px;\"/></span></span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\">　　　　　　　2.1.1、认识每个类的功能即作用</span></span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\">　　　　　　　　　　　现在就认识一下即可，详细的功能会在后面的博客中写出来。</span></span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\">　　　　　　　　　ByteArrayInputStream：字节数组输入流，该类的功能就是从字节数组(<span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 255);\">byte<span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\">[])中进行以字节为单位的读取，也就是将资源文件都以字节的形式存入到该类中的字节数组中去，我们拿也是从这个字节数组中拿</span></span></span></span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 255);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\">　　　　　　　　　PipedInputStream：管道字节输入流，<span style=\"margin: 0px; padding: 0px; line-height: 1.5;\">它和PipedOutputStream一起使用，能实现多线程间的管道通信</span></span></span></span></span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 255);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5;\">　　　　　　　　　FilterInputStream ：装饰者模式中处于装饰者，具体的装饰者都要继承它，所以在该类的子类下都是用来装饰别的流的，也就是处理类。具体装饰者模式在下面会讲解到，到时就明白了</span></span></span></span></span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 255);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5;\">　　　　　　　　　　　　　　BufferedInputStream：缓冲流，对处理流进行装饰，增强，内部会有一个缓存区，用来存放字节，每次都是将缓存区存满然后发送，而不是一个字节或两个字节这样发送。效率更高</span></span></span></span></span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 255);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5;\">　　　　　　　　　　　　　　DataInputStream：数据输入流，<span style=\"margin: 0px; padding: 0px; line-height: 1.5;\">它是用来装饰其它输入流，它“允许应用程序以与机器无关方式从底层输入流中读取基本 Java 数据类型”</span></span></span></span></span></span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 255);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5;\">　　　　　　　　　FileInputSream：<span style=\"margin: 0px; padding: 0px; line-height: 1.5;\">文件输入流。它通常用于对文件进行读取操作</span></span></span></span></span></span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 255);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5;\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5;\">　　　　　　　　　　　　File：对指定目录的文件进行操作，具体可以查看讲解File的博文。注意，该类虽然是在IO包下，但是并不继承自四大基础类。</span></span></span></span></span></span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\">&nbsp;　　　　　　&nbsp; 　　ObjectInputStream：对象输入流，<span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\">用来提供对“基本数据或对象”的持久存储。通俗点讲，也就是能直接传输对象，</span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\">&nbsp;</p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\">　　　　　　<span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(255, 0, 0); font-size: 16px;\">2.2、OutputStream 字节输出流</span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\">　　　　　　　　　　　　　　<img src=\"https://images2015.cnblogs.com/blog/874710/201705/874710-20170530121318274-160516931.png\" alt=\"\" width=\"544\" height=\"271\" style=\"margin: 0px; padding: 0px; border: 0px; max-width: 900px;\"/></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\">　　　　　　　　　　具体分析在上面分析过了，只不过和inputStream是相对的，但作用是相同的。</span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\">　　　　　　<span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(255, 0, 0); font-size: 16px;\">2.3、Reader 字符输入流</span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\">　　　　　　　　　　　　　　　　<img src=\"https://images2015.cnblogs.com/blog/874710/201705/874710-20170530121521321-799067835.png\" alt=\"\" width=\"520\" height=\"210\" style=\"margin: 0px; padding: 0px; border: 0px; max-width: 900px;\"/></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\">　　　　　　　　　　　功能也差不多，类似。这里分析一个。</span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\">　　　　　　　　　　　InputStreamReader：转换流&nbsp; 将 字节输入流&nbsp; 转换为&nbsp; 字符输入流。<span style=\"margin: 0px; padding: 0px; line-height: 1.5;\">它是字节流通向字符流的桥梁</span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5;\">　　　　　　<span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(255, 0, 0); font-size: 16px;\">2.4、Writer 字符输出流</span></span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5;\">　　　　　　　　　　　　　　　　　<img src=\"https://images2015.cnblogs.com/blog/874710/201705/874710-20170530121746211-57243059.png\" alt=\"\" width=\"525\" height=\"234\" style=\"margin: 0px; padding: 0px; border: 0px; max-width: 900px;\"/>　</span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 18pt; background-color: rgb(51, 204, 204);\">&nbsp;<span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(255, 255, 255);\">三、装饰者模式的运用</span>　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　<br style=\"margin: 0px; padding: 0px;\"/></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\">　　　　　　<span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\">3.1、什么是装饰者模式？</span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\">　　　　　　　　　　　　推荐一篇博文，<a title=\"http://blog.csdn.net/jason0539/article/details/22713711\" href=\"http://blog.csdn.net/jason0539/article/details/22713711\" target=\"_blank\" style=\"margin: 0px; padding: 0px; color: rgb(7, 93, 179);\">http://blog.csdn.net/jason0539/article/details/22713711</a>&nbsp; 就详细说明了什么是装饰者模式？用我自己的话来说，就是往一个添加更多的功能，而我们首先想到的是继承，继承就很好的符合了我们的要求，不管你想加多少层的功能，都可以使用继承一层层的实现，但是这带来了一个问题，一旦我需要改变我的需求，那么我就需要往源码中改东西，再就是在这个继承链中某个类做一些修改，这不符合我们的设计模式思想，所以就有了装饰者模式，装饰者中拥有被装饰者的实例，然后有什么具体的装饰我们都另写一个类来继承该装饰者，当我们需要该装饰时，就new出该类来，然后将其被装饰者当作参数传递进去。</span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\">&nbsp;　　　　　　　　　　　　　　　　　　<img src=\"https://images2015.cnblogs.com/blog/874710/201705/874710-20170530152826571-1924640286.png\" alt=\"\" width=\"625\" height=\"418\" style=\"margin: 0px; padding: 0px; border: 0px; max-width: 900px;\"/></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\">　　　　　　　　　　关说可能没理解那么清楚，现在来看看一个具体的实例。比如，我们需要制作一份鸡腿堡，流程是怎样的呢？看下图</p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\">　　　　　　　　　　　　　　1、先有基本原料，也就是两块面包，这是不管做什么汉堡都需要的，</p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\">　　　　　　　　　　　　　　2、做什么汉堡，取决于加什么材料，比如生菜，鸡肉等，所以根据材料来做汉堡，想做什么汉堡就加什么材料</p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\">　　　　　　　　　　　　　　3、所有材料加完之后，直接计算价格即可</p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\">　　　　　　　　　　　　这样使用装饰者模式，是不是比一直使用继承方便的多的多呢？换一种汉堡，也不需要改源码，什么也不需要，希望你能够理解清楚其中的思想。</p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\">　　　　　　　　　　　　　　　　　　　　<img src=\"https://images2015.cnblogs.com/blog/874710/201705/874710-20170530160335977-1889860348.png\" alt=\"\" width=\"812\" height=\"351\" style=\"margin: 0px; padding: 0px; border: 0px; max-width: 900px;\"/></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\">&nbsp;</p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\">　　　　　　<span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(255, 0, 0); font-size: 16px;\">3.2、io流中的装饰者模式的运用</span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\">　　　　　　　　　　　　画张图，在结合源码和自己写的代码来看。</p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\">　　　　　　　　　　　　　　　　　　<img src=\"https://images2015.cnblogs.com/blog/874710/201705/874710-20170530162636930-1288255116.png\" alt=\"\" width=\"887\" height=\"367\" style=\"margin: 0px; padding: 0px; border: 0px; max-width: 900px;\"/></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\">&nbsp;</p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\">　　　　　　　　　　到这里，应该可以对前面的处理流和节点流有所理解了把，其实处理流就是一个具体的装饰者，而节点流就是被装饰者。</p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\">&nbsp;</p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 18pt; background-color: rgb(51, 204, 204); color: rgb(255, 255, 255);\">四、总结　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　</span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\">　　　　　　　4.1、应该知道io流的各种类的结构关系，平常我们使用的io类是处于什么样的位置，是一个什么样的流(节点流还是处理流，输入流还是输出流，字节流还是字符流)</p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\">　　　　　　　4.2、装饰者模式在io流中的运用和什么是装饰者模式</p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\">　　　　　　　4.3、为什么在使用io流时会将是那样的格式进行编写，将一个流的实例放入另一个流的构造方法中？</p><p><br/></p>',1529485224,1,'',0,10,'','',117),(73,'','1. 配置工具类','<h1 class=\"postTitle\" style=\"margin: 0px; padding: 0px 64px 0px 10px; list-style-type: none; list-style-image: none; font-size: 20px; font-weight: normal; border-left: 3px solid rgb(33, 117, 188);\"><a id=\"cb_post_title_url\" class=\"postTitle2\" href=\"https://www.cnblogs.com/hwaggLee/p/5718733.html\" style=\"text-decoration-line: none; color: black;\">java-工具类-读取配置文件</a></h1><p style=\"margin: 10px auto; padding: 0px; list-style-type: none; list-style-image: none;\">&nbsp;</p><p style=\"margin: 10px auto; padding: 0px; list-style-type: none; list-style-image: none;\">&nbsp;java读取配置文件，当发现文件被修改后则重新加载</p><p style=\"margin: 10px auto; padding: 0px; list-style-type: none; list-style-image: none;\">&nbsp;</p><br/><pre style=\"margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; padding: 0px; list-style-type: none; list-style-image: none; font-family: &quot;Courier New&quot; !important;\">package&nbsp;com.zg.config;import&nbsp;java.io.File;import&nbsp;java.io.FileInputStream;import&nbsp;java.io.IOException;import&nbsp;java.io.InputStreamReader;import&nbsp;java.net.URL;import&nbsp;java.util.Properties;/**\r\n&nbsp;*&nbsp;系统配置文件读取\r\n&nbsp;*&nbsp;@author&nbsp;huage\r\n&nbsp;*&nbsp;*/public&nbsp;class&nbsp;SysConfig&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;Properties&nbsp;props&nbsp;=&nbsp;null;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;File&nbsp;configFile&nbsp;=&nbsp;null;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;long&nbsp;fileLastModified&nbsp;=&nbsp;0L;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;String&nbsp;configFileName&nbsp;=&nbsp;&quot;properties/sys/system.properties&quot;;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;void&nbsp;init()&nbsp;{&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;URL&nbsp;url&nbsp;=&nbsp;SysConfig.class.getClassLoader().getResource(configFileName);&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;configFile&nbsp;=&nbsp;new&nbsp;File(url.getFile());&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fileLastModified&nbsp;=&nbsp;configFile.lastModified();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;props&nbsp;=&nbsp;new&nbsp;Properties();&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;load();&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;void&nbsp;load()&nbsp;{&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try&nbsp;{&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;props.load(new&nbsp;InputStreamReader(new&nbsp;FileInputStream(configFile),&quot;UTF-8&quot;));&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fileLastModified&nbsp;=&nbsp;configFile.lastModified();&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;catch&nbsp;(IOException&nbsp;e)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw&nbsp;new&nbsp;RuntimeException(e);&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;String&nbsp;getConfig(String&nbsp;key)&nbsp;{&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;((configFile&nbsp;==&nbsp;null)&nbsp;||&nbsp;(props&nbsp;==&nbsp;null))&nbsp;init();&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(configFile.lastModified()&nbsp;&gt;&nbsp;fileLastModified)&nbsp;load();&nbsp;//当检测到文件被修改时重新加载配置文件\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;props.getProperty(key);&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(getConfig(&quot;sys.index.name&quot;));&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}}</pre><p><span style=\"line-height: 1.5 !important;\"><br/></span></p><p><span class=\"cnblogs_code_copy\" style=\"padding-right: 5px; line-height: 1.5 !important;\"><a title=\"复制代码\" style=\"color: rgb(51, 153, 255); border: none !important;\"></a></span></p><p><br/></p>',1529485427,1,'',0,10,'','',119);

#
# Structure for table "e_oc"
#

CREATE TABLE `e_oc` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `bb` text NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=13 DEFAULT CHARSET=utf8 COMMENT='武汉大学课程简介';

#
# Data for table "e_oc"
#

INSERT INTO `e_oc` VALUES (1,'<p>课程内容：</p><p>java分为三个平台，分别是J2SE，J2EE,J2ME。</p><p>J2SE</p><p>java标准基础应用平台，J2SE主要是一些JAVA的基础类东西和一些桌面软件的开发是和VB还有Deliph一样的东西，属于C/S架构的，不怎么使用了主要是打打基础的语言。</p><p>J2EE</p><p>企业级开发应用平台，主要的框架有Struts+Spring+Hibernate等主要框架。</p><p>J2EE是一套全然不同于传统应用开发的技术架构，包含许多组件，主要可简化且规范应用系统的开发与部署，进而提高可移植性、安全与再用价值。</p><p>J2EE核心是一组技术规范与指南，其中所包含的各类组件、服务架构及技术层次，均有共通的标准及规格，让各种依循J2EE架构的不同平台之间，存在良好的兼容性，解决过去企业后端使用的信息产品彼此之间无法兼容，导致企业内部或外部难以互通的窘境。</p><p>J2ME</p><p>微缩版开发应用平台，主要是手机类开发用的。</p><p>J2ME是一种高度优化的Java运行环境，主要针对消费类电子设备的，例如蜂窝电话和可视电话、数字机顶盒、汽车导航系统等等。J2ME技术在1999年的JavaOne Developer Conference大会上正式推出，它将Java语言的与平台无关的特性移植到小型电子设备上,允许移动无线设备之间共享应用程序。</p><p><br/></p><p>培养目标：</p><p>1、精通JavaEE平台开发的java软件工程师，能够胜任各种行业的企业级软件开发工作；</p><p>2、具备一年以上软件开发经验；</p><p>3、熟悉java软件开发流程；具备解决主要问题的能力；</p><p>4、良好的语言表达、沟通能力、工作责任心和团队意识。</p><p><br/></p>');

#
# Structure for table "e_outstandingpro_pid"
#

CREATE TABLE `e_outstandingpro_pid` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=8 DEFAULT CHARSET=utf8 COMMENT='武汉大学成员类别';

#
# Data for table "e_outstandingpro_pid"
#

INSERT INTO `e_outstandingpro_pid` VALUES (1,'指导老师'),(2,'项目组'),(3,'往届学生');

#
# Structure for table "e_outstandingprogram"
#

CREATE TABLE `e_outstandingprogram` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `pid` int(10) NOT NULL COMMENT '视频类别id',
  `name` varchar(255) NOT NULL COMMENT '简介',
  `ynum` varchar(255) NOT NULL COMMENT '标题',
  `snum` varchar(255) NOT NULL COMMENT '视频截图',
  `is_show` int(2) NOT NULL DEFAULT '1' COMMENT '1显示 0不显示',
  `sort` int(10) NOT NULL DEFAULT '10',
  `is_s` int(10) NOT NULL DEFAULT '0',
  `is_t` int(10) NOT NULL DEFAULT '0',
  `img` varchar(255) DEFAULT NULL,
  `content` text,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=112 DEFAULT CHARSET=utf8 COMMENT='武汉大学学校成员';

#
# Data for table "e_outstandingprogram"
#

INSERT INTO `e_outstandingprogram` VALUES (3,3,'秦可晨 ','本科生','qinkechen@whu.edu.cn ',1,10,1,0,'2018-06-20/5b2a1d7b39f9e.jpg','<p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><strong>秦可晨</strong><br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\">本科生<br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); text-align: justify; position: relative; left: 20px;\">邮箱:qinkechen@whu.edu.cn&nbsp;</p><p><br/></p>'),(4,3,'徐洁斌   ','本科生','xujiebin@whu.edu.cn ',1,10,1,0,'2018-06-20/5b2a1db122743.jpg','<p><span style=\"font-size: 18px;\"></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><strong>徐洁斌</strong><br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\">本科生<br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); text-align: justify; position: relative; left: 20px;\">邮箱:xujiebin@whu.edu.cn&nbsp;<br/></p><p><ul><li><p><span style=\"font-size: 18px;\"></span></p></li><br/></ul></p><p><br/></p>'),(5,3,'万瑞卿   ','本科生','wanruiqing@whu.edu.cn ',1,10,1,0,'2018-06-20/5b2a1dc5b9d60.jpg','<p><span style=\"font-size: 18px;\"></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><strong>万瑞卿</strong><br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\">本科生<br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); text-align: justify; position: relative; left: 20px;\">邮箱:wanruiqing@whu.edu.cn</p><p><ul><li><p><span style=\"font-size: 18px;\"></span></p></li><br/></ul></p><p><br/></p>'),(6,3,'杨南海   ','本科生','yangnanhai@whu.edu.cn ',1,10,1,1,'2018-06-20/5b2a1dea0f9c1.jpg','<p><span style=\"font-size: 18px;\"></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><strong>杨南海</strong><br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\">本科生<br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); text-align: justify; position: relative; left: 20px;\">邮箱:yangnanhai@whu.edu.cn</p><p><ul><li><p><span style=\"font-size: 18px;\"></span></p></li><br/></ul></p><p><br/></p>'),(7,3,'高琦     ','本科生','gaoqi@whu.edu.cn ',1,10,1,1,'2018-06-20/5b2a1e0423522.jpg','<p><span style=\"font-size: 18px;\"></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><strong>高琦</strong><br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\">本科生<br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); text-align: justify; position: relative; left: 20px;\">邮箱:gaoqi@whu.edu.cn</p><p><ul><li><p><span style=\"font-size: 18px;\"></span></p></li><br/></ul></p><p><br/></p>'),(8,3,'杨承瑞   ','本科生',' yangchengrui@whu.edu.cn ',1,10,1,1,'2018-06-20/5b2a1e30de810.jpg','<p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><strong>杨承瑞</strong><br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\">本科生<br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); text-align: justify; position: relative; left: 20px;\">邮箱:yangchengrui@whu.edu.cn&nbsp;</p><p><br/></p>'),(9,3,'刘靓雯   ','本科生','liuliangwen@whu.edu.cn ',1,10,1,1,'2018-06-20/5b2a1e4025630.jpg','<p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><strong>刘靓雯</strong><br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\">本科生<br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); text-align: justify; position: relative; left: 20px;\">邮箱:liuliangwen@whu.edu.cn</p><p><br/></p>'),(10,2,'智能制造小组','陈舜尧','',1,10,0,1,'2018-06-20/5b2a227ead027.jpg','<p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><strong>智能制造小组</strong><br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><img src=\"/ueditor/php/upload/image/20180620/1529491086215244.jpg\" title=\"1529491086215244.jpg\" alt=\"1529491086215244.jpg\" width=\"128\" height=\"128\" border=\"0\" vspace=\"0\" style=\"width: 128px; height: 128px;\"/>成员：陈舜尧<br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); text-align: justify; position: relative; left: 20px;\">开发的同泰智能数字制造平台是数控编程和工艺规划软件。 借助于计算机软硬件技术和支撑环境，利用计算机进行数值计算、逻辑判断和推理等的功能来制定零件机械加工工艺过程。 用于解决手工工艺设计效率低、一致性差、质量不稳定、不易达到优化等问题。&nbsp;</p><p><br/></p>'),(11,3,'张杨 ','研究生 ',' zhangyang@whu.edu.cn',1,10,1,1,'2018-06-20/5b2a1e4963fc5.jpg','<p><span style=\"font-size: 18px;\"></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><strong>张杨</strong><br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\">研究生<br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); text-align: justify; position: relative; left: 20px;\"><span style=\"font-size: 12px; color: rgb(0, 0, 0);\">邮箱:zhangyang@whu.edu.cn</span></p><p><ul><li><p><span style=\"font-size: 18px;\"></span></p></li><br/></ul></p><p><br/></p>'),(12,1,'韩波','副教授','hanboemail@163.com ',1,3,0,1,'2018-06-20/5b2a201bdba50.jpg','<p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><strong>韩波</strong><br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\">副教授<br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); text-align: justify; position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\">邮箱:hanboemail@163.com</span></p><p><br/></p>'),(13,1,'朱卫平','副教授','wpzhu@whu.edu.cn ',1,1,1,1,'2018-06-20/5b2a200419ad5.jpg','<p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(242, 242, 242);\"><span style=\"font-size:24px\">朱卫平博士<br/></span>副教授，楚天学子，珞珈青年学者&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(242, 242, 242);\">朱卫平博士毕业于香港理工大学电子计算学系, 硕士和本科分别毕业上海交通大学和重庆大学。在加入武汉大学之前，曾先后在香港大学任多年技术主任和在香港理工大学任博士后研究员。也曾到法国IRISA-INRIA研究所(法国国家科学研究院, 法国国立计算机及自动化研究院, 雷恩一大成立的联合研究机构)进行访问研究，取得了丰富的研究成果。2014年6月作为优秀青年学术骨干以人才引进的方式加入武汉大学, 当年评选为“珞珈青年学者”,随后入选湖北省“楚天学子”人才计划。</p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(242, 242, 242);\">主要研究兴趣为RFID与传感器网络、大数据和云计算、分布式计算。总计发表论文四十余篇，其中SCI十四篇、EI二十余篇，以第一作者在中国计算机学会推荐的A类国际顶级期刊/会议（IEEE Transactions on Parallel and Distributed Systems（TPDS）、IEEE Transactions on Computers(TC)、IEEE INFOCOM）上发表有4篇高质量论文。获得了国际会议CCBD 2014最佳论文奖,CCBD 2015最佳论文奖提名,2017年全国智能科学技术教育暨教学学术研讨会优秀论文奖。作为全球杰出青年学者之一参加了第三届海德堡获奖者论坛, 与图灵奖、阿贝尔奖、菲尔兹奖获得者等顶尖学者进行座谈。是多个国际会议如MobiSPC 2014，CCBD 2014，TENSYMP 2015，UIC/ATC 2015，Smartcomp 2016, NCSC 2017, UIC 2018的研讨会主席或技术委员会成员，和多个国际顶级或知名SCI期刊（TPDS, TC, TMC, JPDC, PPNA, PMC, IEEE Network, Ad Hoc &amp; Sensor Wireless Networks， KSII Transactions on Internet and Information Systems，Mobile Networks and Applications）的审稿人。</p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(242, 242, 242);\">目前主持国家自然科学基金青年项目1项，湖北省自然科学基金1项，国家重点实验室开发课题1项，中央高校基本业务经费项目1项，武汉大学引进人才基金项目1项，横向项目多项。其作为关键成员在曾参与过多项香港科研项目和与法国、德国的国际合作项目。其中包括香港研究资助局优配研究基金、香港创新科技署创新技术基金、法国国家研究署与香港研究资助局联合研究项目、德国/香港联合研究项目、法国/香港联合研究项目等。在应用开发上也有丰富经验，作为关键成员开发了第7届全国大学生运动会武术评分系统、香港中小学移动式电子学习平台、深圳盐田港RFID集装箱堆场系统等。获得软件著作权6项，申请专利3项。</p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(242, 242, 242);\">具有丰富的学生指导经验，每年指导毕业本科生研究生十余名，累计指导多名学生参加各类学科竞赛，包括成功申请3项国家级大学生创新创业训练项目，3项武汉大学大学生创新创业训练项目，指导获得高校物联网创新大赛三等奖等。每位团队成员均由本人亲自悉心指导。</p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(242, 242, 242);\">机会总是青睐有准备的人，欢迎计算机、软件、数学及相关专业的研究生和本科生加入课题组一起学习工作！课题组力求发表高水平论文、专利和开发高智能应用。课题组将为每一位学生提供优越的科研环境和良好的成长氛围，努力为大家创造学术交流和出国深造的机会和条件。也欢迎各位同学提前准备毕业设计、学科竞赛、学术会议投稿等项目。</p><p><img src=\"http://wh.zbsykwx.com/Public/ueditor/themes/default/images/spacer.gif\" style=\"background:url(http://wh.zbsykwx.com/Public/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/%E9%AA%91%E8%A1%8C%E8%80%85/Desktop/%E6%96%B0%E5%BB%BA%E6%96%87%E4%BB%B6%E5%A4%B9/web/web/images/stories/zhuweiping_homepage.jpg\"/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\"><a href=\"http://www.bdcclab.com/recruit.ppt\" style=\"color: rgb(51, 51, 51);\"><strong><span style=\"color:#FF0000\">学生招募信息（点击下载）</span></strong></a></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\">欢迎选修或旁观本人教授课程&nbsp;<br/>信息安全 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;地点：国软201教室&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 时间：1--18周 星期四 3-4节&nbsp;<br/>模式识别 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;地点：国软504教室&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 时间：1--18周 星期五 3-4节&nbsp;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;或者&nbsp; 地点：国软404教室&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 时间：1--18周 星期五 6-7节&nbsp;<br/>新型计算与应用模式 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;地点：国软501教室&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 时间：3--8周 &nbsp;星期三&nbsp; 6-8节</p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\"><br/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\">曾讲授课程<br/>1)商务智能与数据挖掘 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br/>2)数据库原理&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br/>3)云计算与云存储<br/>4)新型计算与应用模式 （博士课程）&nbsp;<br/>5)信息与网络安全<br/>6)软件工程&nbsp;<br/>7)软件需求分析&nbsp;<br/>8)中间件技术</p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(242, 242, 242);\">有用信息&nbsp;<br/>1)&nbsp;<a href=\"http://www.comp.polyu.edu.hk/\" target=\"new\" style=\"color: rgb(51, 51, 51);\">香港理工大学电子计算学系博士生招生计划</a>：博士研究生每年提供至少18万以上奖学金。特别优秀的申请人如果申请到香港博士研究生计划，学生每年的奖学金是36万，并免除4万2千的学费&nbsp;<br/>2)&nbsp;<a href=\"http://l.web.umkc.edu/lizhu/\" target=\"new\" style=\"color: rgb(51, 51, 51);\">University of Missouri, Kansas City，Dr. Zhu Li 博士生招募</a>：PhD Scholarships are available for 2 self-motivated students.<br/>2) 欢迎访问海德堡论坛官网：<a href=\"http://www.heidelberg-laureate-forum.org/event_2015/\" style=\"color: rgb(51, 51, 51);\">http://www.heidelberg-laureate-forum.org/event_2015</a></p><p><br/></p>'),(14,1,'杨威','博士','yangweisklse@whu.edu.cn ',1,2,0,1,'2018-06-20/5b2a2010dd4d6.jpg','<p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><strong>杨威</strong><br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\">博士<br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); text-align: justify; position: relative; left: 20px;\">邮箱:yangweisklse@whu.edu.cn&nbsp;</p><p><br/></p>'),(15,1,'崔晓辉','教授','xcui@whu.edu.cn ',1,9,1,1,'2018-06-20/5b2a1ff97eb50.jpg','<p><span style=\"font-size: 18px;\">基本信息</span></p><p><img src=\"http://www.wuhandaxue.com/Public/ueditor/themes/default/images/spacer.gif\" style=\"background:url(http://www.wuhandaxue.com/Public/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/zbsyk1001/Desktop/web/web/images/stories/cuixiaohui.jpg\"/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\"><span style=\"font-size: 18px;\"><span style=\"font-size: 24px;\">崔晓晖教授<br/>国际软件学院院长<br/>湖北省“百人计划”入选者</span><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔晓晖教授毕业于美国路易斯维尔大学，目前是经全球招聘后被选任的武汉大学国际软件学院院长。在此之前，崔教授在美国能源部橡树岭国家实验室任正研究员。同时还担任了美国路易斯维尔大学的讲座副教授，美国田纳西大学、纽约理工大学兼职教授等职务。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授长期从事计算机软件工程、集群智能以及高性能计算的理论与实践研究。崔教授领导团队用群集智能和图形加速器技术用于加速大规模城市交通模拟并进行大数据分析，该成果被用于美国多个部门采用。崔教授发展了异构型并行计算的编程模型和运行环境，提高了异构型集群并行计算的性能和能源利用效率。其成果被应用于对橡树岭实验室克雷XT5超级通用计算机，从而在2012年保住了橡树岭实验室世界最快计算机的称号。崔教授丰富的理论和项目经验可以为本项目的理论建模、方法设计、仿真系统开发提供指导。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授发表论文60多篇，其中SCI 6篇。曾承担美国5项国家重大项目，纵向课题费近300万，目前承担国家自然科学基金面上项目和湖北省自然基金重点项目各一项。崔教授是北美计算社会及组织科学协会，北美交通委员会会员，也长期担任美国国防部，能源部和空军等研究项目评委。他受邀或被遴选为国际会议报告人 50多次。崔教授的研究工作已被美国NBC电视台，时代自由周刊以及英国新科学家杂志等新闻媒体报道，并获得多个奖励，包括美国能源部杰出导师奖（2008，2009）、美国国家实验室特级贡献奖（2009），橡树岭国家实验室特别事件奖（2009)等。</span></p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">教育经历</span></h3><li><p><span style=\"font-size: 18px;\">2000/09 - 2004/06 美国路易斯维尔大学，计算机系,博士</span></p></li><li><p><span style=\"font-size: 18px;\">1997/09 -2000/06 武汉大学，计算机系，硕士</span></p></li><li><p><span style=\"font-size: 18px;\">1992/09 -1996/06 武汉测绘科技大学，光仪系，工学学士</span></p></li><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">工作经历</span></h3><li><p><span style=\"font-size: 18px;\">2013 －至今武汉大学国际软件学院院长</span></p></li><li><p><span style=\"font-size: 18px;\">2010 – 2013 美国能源部橡树岭国家实验室，计算数据分析部,研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2011 – 2013纽约理工大学，计算机系，院长助理（兼）</span></p></li><li><p><span style=\"font-size: 18px;\">2009 – 2012 路易斯维尔大学，计算机系， 副教授</span></p></li><li><p><span style=\"font-size: 18px;\">2006 – 2010 美国能源部橡树岭国家实验室， 应用软件工程部， 副研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2004 – 2006 美国能源部橡树岭国家实验室，博士后</span></p></li><li><p><span style=\"font-size: 18px;\">2000 – 2004 美国路易斯维尔大学，计算机系，研究助理</span></p></li><li><p><span style=\"font-size: 18px;\">2000 武汉测绘科技大学，副高级工程师</span></p></li><li><p><span style=\"font-size: 18px;\">1997 – 2000 武汉测绘科技大学，网络中心，副主任</span></p></li><li><p><span style=\"font-size: 18px;\">1992 – 1997武汉测绘科技大学，设备处，工程师</span></p></li></ul><p><br/></p>'),(16,1,'王志波','博士','wangzhibo@whu.edu.cn ',1,4,0,1,'2018-06-20/5b2a2026ae9d0.jpg','<p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><strong>王志波</strong><br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\">博士<br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); text-align: justify; position: relative; left: 20px;\">邮箱:wangzhibo@whu.edu.cn</p><p><br/></p>'),(17,1,'李伟','博士','lw8484654@163.com',1,5,0,1,'2018-06-20/5b2a202da7d20.jpg','<p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><strong>李伟</strong><br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\">博士<br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); text-align: justify; position: relative; left: 20px;\">邮箱:lw8484654@163.com&nbsp;</p><p><br/></p>'),(18,2,'云计算小组','熊光裕、刘佳兴、张闻','',1,10,0,0,'2018-06-20/13.jpg','<p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><strong>云计算小组</strong><br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><img src=\"/ueditor/php/upload/image/20180620/1529491573128286.jpg\" title=\"1529491573128286.jpg\" alt=\"13.jpg\"/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\">成员：熊光裕、刘佳兴、张闻<br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); text-align: justify; position: relative; left: 20px;\">云计算小组基于openstack云平台在Hadoop云系统下进行海量遥感数据的存储与处理。使用自行编写的下载器及GDAL工具辅助实现的各种图像处理方法，旨在摒弃传统GIS低效率处理的特点，于大规模集群上并行高效的进行运作。&nbsp;<br/></p><p><br/></p>'),(19,2,'大数据与人口迁移组','李汉杰、孙田润、纪煜杰','',1,10,0,1,'2018-06-20/5b2a21ffe7a84.jpg','<p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><strong style=\"font-size: 14.4px; color: rgb(0, 0, 0);\">大数据与人口迁移组</strong><br/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><img src=\"/ueditor/php/upload/image/20180620/1529491813917136.jpg\" title=\"1529491813917136.jpg\" alt=\"1529491813917136.jpg\" width=\"128\" height=\"128\" style=\"width: 128px; height: 128px;\" border=\"0\" vspace=\"0\"/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\">成员：李汉杰、孙田润、纪煜杰<br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); text-align: justify; position: relative; left: 20px;\">人口迁移组之前研究人口迁移与气候变化的关联模型（仿真），目前正在研究地图火灾后人员逃生的仿真。主要是利用angent模型，然后设计寻路算法，模拟人员的逃跑路线。仿真结果通过unity3d展示。</p><p><br/></p><p><br/></p><p><br/></p><p><br/></p><p><br/></p><p><br/></p>'),(20,2,'Halo云计算小组','李颖、胡快、李高乐','',1,10,0,1,'2018-06-20/12.jpg','<p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><strong>Halo云计算小组</strong><br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><img src=\"/ueditor/php/upload/image/20180620/1529491159847640.jpg\" title=\"1529491159847640.jpg\" alt=\"1529491159847640.jpg\" width=\"128\" height=\"128\" border=\"0\" vspace=\"0\" style=\"width: 128px; height: 128px;\"/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\">成员：李颖、<a href=\"file:///C:/Users/zbsyk1001/Desktop/web/web/members/hukuai_ch.htm\" style=\"color: rgb(51, 51, 51);\">胡快</a>、<a href=\"file:///C:/Users/zbsyk1001/Desktop/web/web/members/ligaole_ch.htm\" style=\"color: rgb(51, 51, 51);\">李高乐</a><br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); text-align: justify; position: relative; left: 20px;\">Halo云计算小组目前有三位2012级软件工程国际班的同学组成，他们以较好的英语学习水平和专业知识为背景，学习探索云计算领域的相关课题。（曾经完成过基于Openstack的教学系统设计与基于云平台的自主可控系统设计，）目前主要学习方向是遥感图像的云计算与云存储。</p><p><br/></p>'),(21,2,'移动医疗小组','卢鹏、李文雷、梁越','',1,10,0,1,'2018-06-20/11.jpg','<p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><strong>移动医疗小组</strong><br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><img src=\"/ueditor/php/upload/image/20180620/1529491272665529.jpg\" title=\"1529491272665529.jpg\" alt=\"1529491272665529.jpg\" width=\"128\" height=\"128\" border=\"0\" vspace=\"0\" style=\"width: 128px; height: 128px;\"/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\">成员：卢鹏、李文雷、梁越<br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); text-align: justify; position: relative; left: 20px;\">利用手机内置传感器和智能手环采集加速度、心率、位置等数据，以智能手机为平台进行处理、传输和展示，手机端将采集的数据进行及时处理，结果通过直观的界面展示出来，利用手机通信将采集的数据传输到远程服务器存储和共享，服务器端通过长期的数据分析得到健康状况并生成健康方案推送到手机上。&nbsp;</p><p><br/></p>'),(22,2,'智能家居','王帅、井溢洋','',1,10,0,0,'2018-06-20/14.jpg','<p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><strong>智能家居</strong><br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><img src=\"/ueditor/php/upload/image/20180620/1529491320786534.jpg\" title=\"1529491320786534.jpg\" alt=\"14.jpg\"/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\">成员：王帅、井溢洋<br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); text-align: justify; position: relative; left: 20px;\">小组主要参与智能家居部分的拓展研发。现阶段主要做通过蓝牙4.0控制锅体，进而实现‘一键’智能炒菜（或买菜）。 未来希望能做到对更多家居设备的远程便捷‘一键’操作。</p><p><br/></p>'),(23,2,'复杂网络组','汪旭方、杨拓','',1,10,0,0,'2018-06-20/1.jpg','<p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><strong>复杂网络组</strong><br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><img src=\"/ueditor/php/upload/image/20180620/1529491367295025.jpg\" title=\"1529491367295025.jpg\" alt=\"1.jpg\"/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\">成员：汪旭方、杨拓<br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); text-align: justify; position: relative; left: 20px;\">在网络理论的研究中，复杂网络是由数量巨大的节点和节点之间错综复杂的关系共同构成的网络结构。对复杂网络的定量与定性特征的研究正 渗透到数理学科、生命学科和工程学科等众多不同的领域。目前正在研究武汉的公交、地铁网络。&nbsp;<br/></p><p><br/></p>'),(24,2,'RFID仿真模拟组','裴祎鹏、万宏宇','',1,10,0,0,'2018-06-20/5.jpg','<p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><strong>RFID仿真模拟组</strong><br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><img src=\"/ueditor/php/upload/image/20180620/1529491397136625.jpg\" title=\"1529491397136625.jpg\" alt=\"5.jpg\"/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\">成员：裴祎鹏、万宏宇<br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); text-align: justify; position: relative; left: 20px;\">RFID仿真组主要是大规模RFID系统中的复杂数据收集的仿真与研究，包括身份识别，数目估计，种类识别等。目前主要研究的是RFID身份识别，主要研究的包括ALOHA，Tree，ASAP等RFID标签防碰撞算法，及这些算法的模拟实现与时效，帧成功率，能效等各项相关数据的分析。<br/></p><p><br/></p>'),(25,2,'手机资费优化系统','何桂挺','',1,10,0,0,'2018-06-20/8.jpg','<p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><strong>手机资费优化系统</strong><br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><img src=\"/ueditor/php/upload/image/20180620/1529491510197343.jpg\" title=\"1529491510197343.jpg\" alt=\"8.jpg\"/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\">成员：何桂挺<br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); text-align: justify; position: relative; left: 20px;\">完成对移动通信资费采集与分析系统。包括： 移动通信资费采集、移动通信资费数据分析两块内容。该系统将采集用户手机历史通话信息和资费信息，根据采集到的数据分别统计分析用户与其他联系人的通信情况信息。</p><p><br/></p>'),(26,2,'RFID中间件设计','李小刚、欧阳俊、黎作友、张碧蓉、杜晓涵','',1,10,0,0,'2018-06-20/6.jpg','<p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><strong>RFID中间件设计</strong><br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><img src=\"/ueditor/php/upload/image/20180620/1529491541296187.jpg\" title=\"1529491541296187.jpg\" alt=\"6.jpg\"/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\">成员：李小刚、欧阳俊、黎作友、张碧蓉、杜晓涵<br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); text-align: justify; position: relative; left: 20px;\">小组主要研究任务是管理固定式读写器和移动式读写器，并从读写器中读取原始数据，同时进行数据处理。然后利用有效的数据在移动端做设备管理的应用系统，在固定端做人员考勤的应用系统，对于他们的表现，让我们拭目以待！<br/></p><p><br/></p>'),(27,2,'网络信息聚合小组','高天培、韦晓慷','',1,10,0,0,'2018-06-20/9.jpg','<p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><strong>网络信息聚合小组</strong><br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><img src=\"/ueditor/php/upload/image/20180620/1529491685223593.jpg\" title=\"1529491685223593.jpg\" alt=\"Twitter.jpg\"/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\">成员：高天培、韦晓慷<br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); text-align: justify; position: relative; left: 20px;\">针对日益激增的网络信息，人们迫切需要一个简单快捷的办法来聚合这些信息，以便能高效接收。网络信息聚合小组的任务就是研究并设计出这样一套系统，根据用户定制的内容对海量网络信息进行分析、提取并整合，最终将整理好的信息反馈给用户。这将大大节省用户不必要的时间。</p><p><br/></p>'),(28,2,'推特情感挖掘项目组','陈伦荣、贾若英、高山、向昊','',1,10,0,0,'2018-06-20/10.jpg','主要研究基于twitter平台的情感分类以及情感实体挖掘。爬取twitter上的推文数据并存储到mongodb中，搭建分类器进行情感分类，并进一步实现情感实体的挖掘，探索诱发此类情感的实体因素。'),(29,2,'城市交通模拟','侯泽远、孔梦蝶、王聪伟','',1,10,0,0,'2018-06-20/2.jpg','<p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><strong>城市交通模拟</strong><br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><img src=\"/ueditor/php/upload/image/20180620/1529491721133562.jpg\" title=\"1529491721133562.jpg\" alt=\"jiaotongmoni.jpg\"/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\">成员：侯泽远、孔梦蝶、王聪伟<br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); text-align: justify; position: relative; left: 20px;\">主要研究智能交通在城市交通模拟方面的应用，包括基于绿色驾驶的路线规划、交互式智能交通、分布式智能交通模拟以 及智能交通灯。</p><p><br/></p>'),(30,2,'库内导航小组','罗贤明、鲁茜','',1,10,0,0,'2018-06-20/3.jpg','<p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><strong>库内导航小组</strong><br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><img src=\"/ueditor/php/upload/image/20180620/1529491741125011.jpg\" title=\"1529491741125011.jpg\" alt=\"kuneidaohang.jpg\"/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\">成员：罗贤明、鲁茜<br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); text-align: justify; position: relative; left: 20px;\">设计并完成基于Android的库内导航系统。系统为C/S架构，为美的武汉工业园的材料供应链提供信息化的系统管理。实现了导航定位、消息推送、路况查询、运输业务流程管理、基础信息数据管理、帐号信息管理等功能。</p><p><br/></p>'),(31,2,'社交媒体信息融合组','王帅、詹辉、周重邑、孙嘉文','',1,10,0,0,'2018-06-20/7.jpg','<p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><strong>社交媒体信息融合组</strong><br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><img src=\"/ueditor/php/upload/image/20180620/1529491764572925.jpg\" title=\"1529491764572925.jpg\" alt=\"shejiaoxinxi.jpg\"/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\">成员：王帅、詹辉、周重邑、孙嘉文<br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); text-align: justify; position: relative; left: 20px;\">本组主要研究基于多社交媒体的用户身份识别与个体信息融合。主要研究内容分为两个部分，用户身份识别与个体信息融合，前者使用社交关系矩阵相似性计算的办法识别在不同社交网络中的用户，后者使用自然语言处理的办法融合个体在不同社交网络中的信息。&nbsp;<br/></p><p><br/></p>');

#
# Structure for table "e_sanke"
#

CREATE TABLE `e_sanke` (
  `id` int(10) NOT NULL,
  `pid` int(10) NOT NULL COMMENT '视频类别id',
  `name` varchar(255) NOT NULL COMMENT '简介',
  `is_show` int(2) NOT NULL DEFAULT '1' COMMENT '1显示 0不显示',
  `sort` int(10) NOT NULL DEFAULT '10',
  `is_s` int(10) NOT NULL DEFAULT '0'
) ENGINE=MyISAM AUTO_INCREMENT=56 DEFAULT CHARSET=utf8 COMMENT='武汉大学课程三级分类';

#
# Data for table "e_sanke"
#

INSERT INTO `e_sanke` VALUES (14,4,'2. Java面向对象入门',1,2,1),(15,4,'3. Java基本语法',1,3,1),(22,4,'4. Java类和对象',1,4,1),(23,4,'5. Java注解',1,5,1),(26,4,'6. Java接口和继承',1,6,1),(27,4,'7. 数字与字符串',1,7,1),(16,4,'8. Java泛型',1,8,1),(25,4,'9. Java包结构',1,9,1),(18,4,'10. Java异常',1,10,1),(19,4,'11. Java并发入门',1,11,1),(20,4,'12. Java IO基础类',1,12,1),(21,4,'13. Java系统平台常用类',1,13,1),(24,4,'1. Java技术起步',1,1,1),(2,2,'1. Java.lang基础',1,1,1),(3,2,'2. java.util基础',1,2,1),(9,3,'2. Servlet基础',1,7,1),(10,3,'3. JSP基础',1,8,1),(11,3,'4. 前端基础',1,9,1),(12,3,'5. JDBC基础',1,10,1),(17,2,'3. java.io基础',1,3,1),(13,3,'6. Servlet与JSP开发框架',1,11,1),(5,2,'4. java.text基础',1,4,1),(6,2,'5. java.beans基础',1,5,1),(7,2,'6. java.time基础',1,6,1),(8,3,'1. web协议',1,6,1);

#
# Structure for table "e_sike"
#

CREATE TABLE `e_sike` (
  `id` int(10) NOT NULL,
  `pid` int(10) NOT NULL COMMENT '视频类别id',
  `name` varchar(255) NOT NULL COMMENT '简介',
  `is_show` int(2) NOT NULL DEFAULT '1' COMMENT '1显示 0不显示',
  `sort` int(10) NOT NULL DEFAULT '10',
  `is_s` int(10) NOT NULL DEFAULT '0',
  `view` varchar(255) DEFAULT NULL
) ENGINE=MyISAM AUTO_INCREMENT=56 DEFAULT CHARSET=utf8 COMMENT='武汉大学课程四级分类';

#
# Data for table "e_sike"
#

INSERT INTO `e_sike` VALUES (1,2,'Java数字操作',1,10,0,'href=\"/the/ip/kp/1.M\"'),(2,2,'Java字符串操作',1,10,0,NULL),(3,2,'Java 对象基础',1,10,0,NULL),(4,2,'Java数学库基础',1,10,0,NULL),(5,2,'Java线程基础',1,10,0,NULL),(6,2,'Java进程基础',1,10,0,NULL),(7,2,'Java系统编程基础',1,10,0,NULL),(8,2,'Java类操作',1,10,0,NULL),(9,3,'java.util介绍',1,10,0,'href=\"/the/ip/kp/9.M\"'),(10,3,'java.util集合类   ',1,10,0,NULL),(11,3,'java.util.concurrent并发类   ',1,10,0,NULL),(12,3,'java.util 其他工具类  ',1,10,0,NULL),(13,3,'java.regex 正则  ',1,10,0,NULL),(14,3,'java.util.prefs 偏好类   ',1,10,0,NULL),(15,3,'java.util.zip 压缩工具类',1,10,0,NULL),(16,17,' java.io文件类   ',1,10,0,'href=\"/the/ip/kp/16.M\"'),(17,17,' java.io 输入输出流   ',1,10,0,NULL),(18,17,' java.io 字符流',1,10,0,NULL),(19,5,'java.text包简介    ',1,10,0,'href=\"/the/ip/kp/19.M\"'),(20,5,'java.text.MessageFormat   ',1,10,0,NULL),(21,5,'java.text.NumberFormat   ',1,10,0,NULL),(22,5,'java.text.SimpleDateFormat',1,10,0,NULL),(23,6,'Java Bean读取修改',1,10,0,'href=\"/the/ip/kp/23.M\"'),(24,6,'Java Bean Encoder',1,10,0,NULL),(25,7,'java.time新时间包来由   ',1,10,0,'href=\"/the/ip/kp/25.M\"'),(26,7,'java.time日期时间新类   ',1,10,0,NULL),(27,7,'java.time时间间隔操作   ',1,10,0,NULL),(28,7,'java.time格式化',1,10,0,NULL),(29,8,'HTTP 1.x协议   ',1,10,0,'href=\"/the/ip/kp/29.M\"'),(30,8,'HTTPS协议   ',1,10,0,NULL),(31,8,'HTTP2.0',1,10,0,NULL),(32,9,'WEB开发历史   ',1,10,0,'href=\"/the/ip/kp/32.M\"'),(33,9,'Servlet基础   ',1,10,0,NULL),(34,9,'Servlet开发环境配置   ',1,10,0,NULL),(35,9,'Servlet常用类',1,10,0,NULL),(36,10,'JSP实现原理   ',1,10,0,'href=\"/the/ip/kp/36.M\"'),(37,10,'JSP默认对象   ',1,10,0,NULL),(38,10,'JSP scriptlet   ',1,10,0,NULL),(39,10,'EL表达式Expression Language',1,10,0,NULL),(40,11,'HTML   ',1,10,0,'href=\"/the/ip/kp/40.M\"'),(41,11,'CSS   ',1,10,0,NULL),(42,11,'Javascript   ',1,10,0,NULL),(43,11,'JQuery',1,10,0,''),(44,12,'MySQL&工具安装   ',1,10,0,'href=\"/the/ip/kp/44.M\"'),(45,12,'JDBC API   ',1,10,0,NULL),(46,12,'SQL学习',1,10,0,NULL),(47,13,'MVC介绍   ',1,10,0,'href=\"/the/ip/kp/47.M\"'),(48,13,'Servlet入口MVC开发    ',1,10,0,NULL),(49,13,'JSP入口MVC开发',1,10,0,NULL),(50,24,'Java技术概要介绍   ',1,10,0,'href=\"/the/ip/kp/50.M\"'),(51,24,'Hello World入门   ',1,10,0,NULL),(52,24,'编译运行常见问题',1,10,0,NULL),(53,14,'什么是对象?   ',1,10,0,'href=\"/the/ip/kp/53.M\"'),(54,14,'什么是类?   ',1,10,0,NULL),(55,14,'什么是继承?   ',1,10,0,NULL),(56,14,'什么是接口?   ',1,10,0,NULL),(57,14,'什么是package包?',1,10,0,NULL),(58,15,'java变量   ',1,10,0,'href=\"/the/ip/kp/58.M\"'),(59,15,'java操作符   ',1,10,0,NULL),(60,15,'表达式,声明和代码块   ',1,10,0,NULL),(61,15,'流程控制声明',1,10,0,NULL),(62,22,'Java类   ',1,10,0,'href=\"/the/ip/kp/62.M\"'),(63,22,'Java对象   ',1,10,0,NULL),(64,22,'Java类深入   ',1,10,0,NULL),(65,22,'Java嵌套类   ',1,10,0,NULL),(66,22,'Java枚举',1,10,0,NULL),(67,23,'注解介绍   ',1,10,0,'href=\"/the/ip/kp/67.M\"'),(68,23,'注解声明   ',1,10,0,NULL),(69,23,'预定义注解   ',1,10,0,NULL),(70,23,'类型注解和类型插件系统   ',1,10,0,NULL),(71,23,'重复注解',1,10,0,NULL),(72,26,'接口的定义和实现   ',1,10,0,'href=\"/the/ip/kp/72.M\"'),(73,26,'接口类型使用   ',1,10,0,NULL),(74,26,'接口变化   ',1,10,0,NULL),(75,26,'接口默认方法   ',1,10,0,NULL),(76,26,'继承简介   ',1,10,0,NULL),(77,26,'多重继承与实现   ',1,10,0,NULL),(78,26,'重写和隐藏方法   ',1,10,0,NULL),(79,26,'多态   ',1,10,0,NULL),(80,26,'super使用   ',1,10,0,NULL),(81,26,'Final类和方法使用   ',1,10,0,NULL),(82,26,'抽象方法和类   ',1,10,0,NULL),(83,26,'继承总结',1,10,0,NULL),(84,27,'数字类介绍   ',1,10,0,'href=\"/the/ip/kp/84.M\"'),(85,27,'数字格式化   ',1,10,0,NULL),(86,27,'基本数字计算   ',1,10,0,NULL),(87,27,'字符串类String介绍   ',1,10,0,NULL),(88,27,'数字与字符串转换   ',1,10,0,NULL),(89,27,'字符操作   ',1,10,0,NULL),(90,27,'字符串比较   ',1,10,0,NULL),(91,27,'StringBuilder使用   ',1,10,0,NULL),(92,27,'自动拆箱与装箱',1,10,0,NULL),(93,16,'泛型简介和类型   ',1,10,0,'href=\"/the/ip/kp/93.M\"'),(94,16,'有界的类型参数   ',1,10,0,NULL),(95,16,'泛型,继承与子类型   ',1,10,0,NULL),(96,16,'类型推导   ',1,10,0,NULL),(97,16,'通配符   ',1,10,0,NULL),(98,16,'类型擦除   ',1,10,0,NULL),(99,16,'泛型限制',1,10,0,NULL),(100,25,'创建package   ',1,10,0,'href=\"/the/ip/kp/100.M\"'),(101,25,'命名package   ',1,10,0,NULL),(102,25,'使用包的成员   ',1,10,0,NULL),(103,25,'维护和使用包的源码和类',1,10,0,NULL),(104,18,'异常介绍   ',1,10,0,'href=\"/the/ip/kp/104.M\"'),(105,18,'声明和捕获异常   ',1,10,0,NULL),(106,18,'如何抛出异常   ',1,10,0,NULL),(107,18,'try-with-resources声明   ',1,10,0,NULL),(108,18,'uncheck异常   ',1,10,0,NULL),(109,18,'异常处理的优势',1,10,0,NULL),(110,19,'进程和线程   ',1,10,0,'href=\"/the/ip/kp/110.M\"'),(111,19,'线程类使用   ',1,10,0,NULL),(112,19,'同步语法   ',1,10,0,NULL),(113,19,'线程Liveness   ',1,10,0,NULL),(114,19,'Guarded Blocks警戒块   ',1,10,0,NULL),(115,19,'不可变对象   ',1,10,0,NULL),(116,19,'高并发对象',1,10,0,NULL),(117,20,'IO流常用类   ',1,10,0,'href=\"/the/ip/kp/117.M\"'),(118,20,'文件IO常用类',1,10,0,NULL),(119,21,'配置工具类   ',1,10,0,'href=\"/the/ip/kp/119.M\"'),(120,21,'系统工具类  ',1,10,0,NULL),(121,21,'类和类路径',1,10,0,NULL);

#
# Structure for table "x_activityintroduction"
#

CREATE TABLE `x_activityintroduction` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `aa` text NOT NULL COMMENT '简介',
  `bb` text NOT NULL COMMENT '亮 点',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 COMMENT='武汉大学学习路线';

#
# Data for table "x_activityintroduction"
#

INSERT INTO `x_activityintroduction` VALUES (1,'','<p>Java Tree学习路线图V0.1</p><p><br/></p><p><br/></p><figure data-am-widget=\"figure\" class=\"am am-figure am-figure-default  am-no-layout am-figure-zoomable\" data-am-figure=\"{  pureview: &#39;true&#39; }\" style=\"box-sizing: border-box; margin: 10px; position: relative; cursor: pointer;\"><img src=\"http://www.javatree.cn/images/roadmap.v1.png\" data-rel=\"/images/roadmap.v1.png\" alt=\"Java Tree学习路线图V0.1\" data-am-pureviewed=\"1\" style=\"box-sizing: border-box; vertical-align: middle; border: 1px solid rgb(238, 238, 238); display: block; max-width: 100%; height: auto; padding: 2px; margin: 10px auto;\"/></figure><p><br/></p><p><br/></p><p><br/></p>');

#
# Structure for table "x_admin"
#

CREATE TABLE `x_admin` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `username` varchar(255) NOT NULL COMMENT '账号',
  `password` varchar(255) NOT NULL COMMENT '密码',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 COMMENT='武汉大学';

#
# Data for table "x_admin"
#

INSERT INTO `x_admin` VALUES (1,'admin','21232f297a57a5a743894a0e4a801fc3');

#
# Structure for table "x_erke"
#

CREATE TABLE `x_erke` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `pid` int(10) NOT NULL COMMENT '视频类别id',
  `name` varchar(255) NOT NULL COMMENT '简介',
  `is_show` int(2) NOT NULL DEFAULT '1' COMMENT '1显示 0不显示',
  `sort` int(10) NOT NULL DEFAULT '10',
  `is_s` int(10) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=32 DEFAULT CHARSET=utf8 COMMENT='武汉大学课程二级分类';

#
# Data for table "x_erke"
#

INSERT INTO `x_erke` VALUES (2,1,'Java类库基础',1,1,1),(3,1,'Web基础',1,10,1),(4,2,'Java语法基础',1,10,1);

#
# Structure for table "x_img"
#

CREATE TABLE `x_img` (
  `id` int(12) NOT NULL,
  `img1` varchar(50) NOT NULL,
  `img2` varchar(50) NOT NULL,
  `img3` varchar(50) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='武汉大学头部轮播';

#
# Data for table "x_img"
#

INSERT INTO `x_img` VALUES (1,'/Public/update/2018-06-20/5b29c4a0b230f.jpg','/Public/update/2018-06-20/5b29c505511c9.jpg','/Public/update/2018-06-20/5b29c50551af1.jpg');

#
# Structure for table "x_keinfo"
#

CREATE TABLE `x_keinfo` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `pid` int(10) NOT NULL COMMENT '视频类别id',
  `name` varchar(255) NOT NULL COMMENT '简介',
  `ynum` varchar(255) NOT NULL COMMENT '标题',
  `snum` varchar(255) NOT NULL COMMENT '视频截图',
  `is_show` int(2) NOT NULL DEFAULT '1' COMMENT '1显示 0不显示',
  `sort` int(10) NOT NULL DEFAULT '10',
  `is_s` int(10) NOT NULL DEFAULT '0',
  `is_t` int(10) NOT NULL DEFAULT '0',
  `img` varchar(255) DEFAULT NULL,
  `content` text,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=28 DEFAULT CHARSET=utf8 COMMENT='武汉大学课程二级分类';

#
# Data for table "x_keinfo"
#

INSERT INTO `x_keinfo` VALUES (2,1,'崔晓辉','教授','xcui@whu.edu.cn ',0,1,1,0,'2017-11-17/5a0e50e29ab3d.png','<p><span style=\"font-size: 18px;\">基本信息</span></p><p><img src=\"http://www.wuhandaxue.com/Public/ueditor/themes/default/images/spacer.gif\" style=\"background:url(http://www.wuhandaxue.com/Public/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/zbsyk1001/Desktop/web/web/images/stories/cuixiaohui.jpg\"/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\"><span style=\"font-size: 18px;\"><span style=\"font-size: 24px;\">崔晓晖教授<br/>国际软件学院院长<br/>湖北省“百人计划”入选者</span><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔晓晖教授毕业于美国路易斯维尔大学，目前是经全球招聘后被选任的武汉大学国际软件学院院长。在此之前，崔教授在美国能源部橡树岭国家实验室任正研究员。同时还担任了美国路易斯维尔大学的讲座副教授，美国田纳西大学、纽约理工大学兼职教授等职务。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授长期从事计算机软件工程、集群智能以及高性能计算的理论与实践研究。崔教授领导团队用群集智能和图形加速器技术用于加速大规模城市交通模拟并进行大数据分析，该成果被用于美国多个部门采用。崔教授发展了异构型并行计算的编程模型和运行环境，提高了异构型集群并行计算的性能和能源利用效率。其成果被应用于对橡树岭实验室克雷XT5超级通用计算机，从而在2012年保住了橡树岭实验室世界最快计算机的称号。崔教授丰富的理论和项目经验可以为本项目的理论建模、方法设计、仿真系统开发提供指导。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授发表论文60多篇，其中SCI 6篇。曾承担美国5项国家重大项目，纵向课题费近300万，目前承担国家自然科学基金面上项目和湖北省自然基金重点项目各一项。崔教授是北美计算社会及组织科学协会，北美交通委员会会员，也长期担任美国国防部，能源部和空军等研究项目评委。他受邀或被遴选为国际会议报告人 50多次。崔教授的研究工作已被美国NBC电视台，时代自由周刊以及英国新科学家杂志等新闻媒体报道，并获得多个奖励，包括美国能源部杰出导师奖（2008，2009）、美国国家实验室特级贡献奖（2009），橡树岭国家实验室特别事件奖（2009)等。</span></p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">教育经历</span></h3><li><p><span style=\"font-size: 18px;\">2000/09 - 2004/06 美国路易斯维尔大学，计算机系,博士</span></p></li><li><p><span style=\"font-size: 18px;\">1997/09 -2000/06 武汉大学，计算机系，硕士</span></p></li><li><p><span style=\"font-size: 18px;\">1992/09 -1996/06 武汉测绘科技大学，光仪系，工学学士</span></p></li><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">工作经历</span></h3><li><p><span style=\"font-size: 18px;\">2013 －至今武汉大学国际软件学院院长</span></p></li><li><p><span style=\"font-size: 18px;\">2010 – 2013 美国能源部橡树岭国家实验室，计算数据分析部,研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2011 – 2013纽约理工大学，计算机系，院长助理（兼）</span></p></li><li><p><span style=\"font-size: 18px;\">2009 – 2012 路易斯维尔大学，计算机系， 副教授</span></p></li><li><p><span style=\"font-size: 18px;\">2006 – 2010 美国能源部橡树岭国家实验室， 应用软件工程部， 副研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2004 – 2006 美国能源部橡树岭国家实验室，博士后</span></p></li><li><p><span style=\"font-size: 18px;\">2000 – 2004 美国路易斯维尔大学，计算机系，研究助理</span></p></li><li><p><span style=\"font-size: 18px;\">2000 武汉测绘科技大学，副高级工程师</span></p></li><li><p><span style=\"font-size: 18px;\">1997 – 2000 武汉测绘科技大学，网络中心，副主任</span></p></li><li><p><span style=\"font-size: 18px;\">1992 – 1997武汉测绘科技大学，设备处，工程师</span></p></li></ul><p><br/></p>'),(3,1,'崔晓辉','教授','xcui@whu.edu.cn ',1,10,1,0,'2018-06-19/5b28aa1063818.jpg','<p><span style=\"font-size: 18px;\">基本信息</span></p><p><img src=\"http://www.wuhandaxue.com/Public/ueditor/themes/default/images/spacer.gif\" style=\"background:url(http://www.wuhandaxue.com/Public/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/zbsyk1001/Desktop/web/web/images/stories/cuixiaohui.jpg\"/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\"><span style=\"font-size: 18px;\"><span style=\"font-size: 24px;\">崔晓晖教授<br/>国际软件学院院长<br/>湖北省“百人计划”入选者</span><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔晓晖教授毕业于美国路易斯维尔大学，目前是经全球招聘后被选任的武汉大学国际软件学院院长。在此之前，崔教授在美国能源部橡树岭国家实验室任正研究员。同时还担任了美国路易斯维尔大学的讲座副教授，美国田纳西大学、纽约理工大学兼职教授等职务。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授长期从事计算机软件工程、集群智能以及高性能计算的理论与实践研究。崔教授领导团队用群集智能和图形加速器技术用于加速大规模城市交通模拟并进行大数据分析，该成果被用于美国多个部门采用。崔教授发展了异构型并行计算的编程模型和运行环境，提高了异构型集群并行计算的性能和能源利用效率。其成果被应用于对橡树岭实验室克雷XT5超级通用计算机，从而在2012年保住了橡树岭实验室世界最快计算机的称号。崔教授丰富的理论和项目经验可以为本项目的理论建模、方法设计、仿真系统开发提供指导。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授发表论文60多篇，其中SCI 6篇。曾承担美国5项国家重大项目，纵向课题费近300万，目前承担国家自然科学基金面上项目和湖北省自然基金重点项目各一项。崔教授是北美计算社会及组织科学协会，北美交通委员会会员，也长期担任美国国防部，能源部和空军等研究项目评委。他受邀或被遴选为国际会议报告人 50多次。崔教授的研究工作已被美国NBC电视台，时代自由周刊以及英国新科学家杂志等新闻媒体报道，并获得多个奖励，包括美国能源部杰出导师奖（2008，2009）、美国国家实验室特级贡献奖（2009），橡树岭国家实验室特别事件奖（2009)等。</span></p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">教育经历</span></h3><li><p><span style=\"font-size: 18px;\">2000/09 - 2004/06 美国路易斯维尔大学，计算机系,博士</span></p></li><li><p><span style=\"font-size: 18px;\">1997/09 -2000/06 武汉大学，计算机系，硕士</span></p></li><li><p><span style=\"font-size: 18px;\">1992/09 -1996/06 武汉测绘科技大学，光仪系，工学学士</span></p></li><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">工作经历</span></h3><li><p><span style=\"font-size: 18px;\">2013 －至今武汉大学国际软件学院院长</span></p></li><li><p><span style=\"font-size: 18px;\">2010 – 2013 美国能源部橡树岭国家实验室，计算数据分析部,研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2011 – 2013纽约理工大学，计算机系，院长助理（兼）</span></p></li><li><p><span style=\"font-size: 18px;\">2009 – 2012 路易斯维尔大学，计算机系， 副教授</span></p></li><li><p><span style=\"font-size: 18px;\">2006 – 2010 美国能源部橡树岭国家实验室， 应用软件工程部， 副研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2004 – 2006 美国能源部橡树岭国家实验室，博士后</span></p></li><li><p><span style=\"font-size: 18px;\">2000 – 2004 美国路易斯维尔大学，计算机系，研究助理</span></p></li><li><p><span style=\"font-size: 18px;\">2000 武汉测绘科技大学，副高级工程师</span></p></li><li><p><span style=\"font-size: 18px;\">1997 – 2000 武汉测绘科技大学，网络中心，副主任</span></p></li><li><p><span style=\"font-size: 18px;\">1992 – 1997武汉测绘科技大学，设备处，工程师</span></p></li></ul><p><br/></p>'),(4,1,'崔晓辉','教授','xcui@whu.edu.cn ',1,10,1,0,'2017-11-17/5a0e50e29ab3d.png','<p><span style=\"font-size: 18px;\">基本信息</span></p><p><img src=\"http://www.wuhandaxue.com/Public/ueditor/themes/default/images/spacer.gif\" style=\"background:url(http://www.wuhandaxue.com/Public/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/zbsyk1001/Desktop/web/web/images/stories/cuixiaohui.jpg\"/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\"><span style=\"font-size: 18px;\"><span style=\"font-size: 24px;\">崔晓晖教授<br/>国际软件学院院长<br/>湖北省“百人计划”入选者</span><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔晓晖教授毕业于美国路易斯维尔大学，目前是经全球招聘后被选任的武汉大学国际软件学院院长。在此之前，崔教授在美国能源部橡树岭国家实验室任正研究员。同时还担任了美国路易斯维尔大学的讲座副教授，美国田纳西大学、纽约理工大学兼职教授等职务。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授长期从事计算机软件工程、集群智能以及高性能计算的理论与实践研究。崔教授领导团队用群集智能和图形加速器技术用于加速大规模城市交通模拟并进行大数据分析，该成果被用于美国多个部门采用。崔教授发展了异构型并行计算的编程模型和运行环境，提高了异构型集群并行计算的性能和能源利用效率。其成果被应用于对橡树岭实验室克雷XT5超级通用计算机，从而在2012年保住了橡树岭实验室世界最快计算机的称号。崔教授丰富的理论和项目经验可以为本项目的理论建模、方法设计、仿真系统开发提供指导。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授发表论文60多篇，其中SCI 6篇。曾承担美国5项国家重大项目，纵向课题费近300万，目前承担国家自然科学基金面上项目和湖北省自然基金重点项目各一项。崔教授是北美计算社会及组织科学协会，北美交通委员会会员，也长期担任美国国防部，能源部和空军等研究项目评委。他受邀或被遴选为国际会议报告人 50多次。崔教授的研究工作已被美国NBC电视台，时代自由周刊以及英国新科学家杂志等新闻媒体报道，并获得多个奖励，包括美国能源部杰出导师奖（2008，2009）、美国国家实验室特级贡献奖（2009），橡树岭国家实验室特别事件奖（2009)等。</span></p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">教育经历</span></h3><li><p><span style=\"font-size: 18px;\">2000/09 - 2004/06 美国路易斯维尔大学，计算机系,博士</span></p></li><li><p><span style=\"font-size: 18px;\">1997/09 -2000/06 武汉大学，计算机系，硕士</span></p></li><li><p><span style=\"font-size: 18px;\">1992/09 -1996/06 武汉测绘科技大学，光仪系，工学学士</span></p></li><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">工作经历</span></h3><li><p><span style=\"font-size: 18px;\">2013 －至今武汉大学国际软件学院院长</span></p></li><li><p><span style=\"font-size: 18px;\">2010 – 2013 美国能源部橡树岭国家实验室，计算数据分析部,研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2011 – 2013纽约理工大学，计算机系，院长助理（兼）</span></p></li><li><p><span style=\"font-size: 18px;\">2009 – 2012 路易斯维尔大学，计算机系， 副教授</span></p></li><li><p><span style=\"font-size: 18px;\">2006 – 2010 美国能源部橡树岭国家实验室， 应用软件工程部， 副研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2004 – 2006 美国能源部橡树岭国家实验室，博士后</span></p></li><li><p><span style=\"font-size: 18px;\">2000 – 2004 美国路易斯维尔大学，计算机系，研究助理</span></p></li><li><p><span style=\"font-size: 18px;\">2000 武汉测绘科技大学，副高级工程师</span></p></li><li><p><span style=\"font-size: 18px;\">1997 – 2000 武汉测绘科技大学，网络中心，副主任</span></p></li><li><p><span style=\"font-size: 18px;\">1992 – 1997武汉测绘科技大学，设备处，工程师</span></p></li></ul><p><br/></p>'),(5,1,'崔晓辉','教授','xcui@whu.edu.cn ',1,10,1,0,'2017-11-17/5a0e50e29ab3d.png','<p><span style=\"font-size: 18px;\">基本信息</span></p><p><img src=\"http://www.wuhandaxue.com/Public/ueditor/themes/default/images/spacer.gif\" style=\"background:url(http://www.wuhandaxue.com/Public/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/zbsyk1001/Desktop/web/web/images/stories/cuixiaohui.jpg\"/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\"><span style=\"font-size: 18px;\"><span style=\"font-size: 24px;\">崔晓晖教授<br/>国际软件学院院长<br/>湖北省“百人计划”入选者</span><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔晓晖教授毕业于美国路易斯维尔大学，目前是经全球招聘后被选任的武汉大学国际软件学院院长。在此之前，崔教授在美国能源部橡树岭国家实验室任正研究员。同时还担任了美国路易斯维尔大学的讲座副教授，美国田纳西大学、纽约理工大学兼职教授等职务。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授长期从事计算机软件工程、集群智能以及高性能计算的理论与实践研究。崔教授领导团队用群集智能和图形加速器技术用于加速大规模城市交通模拟并进行大数据分析，该成果被用于美国多个部门采用。崔教授发展了异构型并行计算的编程模型和运行环境，提高了异构型集群并行计算的性能和能源利用效率。其成果被应用于对橡树岭实验室克雷XT5超级通用计算机，从而在2012年保住了橡树岭实验室世界最快计算机的称号。崔教授丰富的理论和项目经验可以为本项目的理论建模、方法设计、仿真系统开发提供指导。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授发表论文60多篇，其中SCI 6篇。曾承担美国5项国家重大项目，纵向课题费近300万，目前承担国家自然科学基金面上项目和湖北省自然基金重点项目各一项。崔教授是北美计算社会及组织科学协会，北美交通委员会会员，也长期担任美国国防部，能源部和空军等研究项目评委。他受邀或被遴选为国际会议报告人 50多次。崔教授的研究工作已被美国NBC电视台，时代自由周刊以及英国新科学家杂志等新闻媒体报道，并获得多个奖励，包括美国能源部杰出导师奖（2008，2009）、美国国家实验室特级贡献奖（2009），橡树岭国家实验室特别事件奖（2009)等。</span></p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">教育经历</span></h3><li><p><span style=\"font-size: 18px;\">2000/09 - 2004/06 美国路易斯维尔大学，计算机系,博士</span></p></li><li><p><span style=\"font-size: 18px;\">1997/09 -2000/06 武汉大学，计算机系，硕士</span></p></li><li><p><span style=\"font-size: 18px;\">1992/09 -1996/06 武汉测绘科技大学，光仪系，工学学士</span></p></li><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">工作经历</span></h3><li><p><span style=\"font-size: 18px;\">2013 －至今武汉大学国际软件学院院长</span></p></li><li><p><span style=\"font-size: 18px;\">2010 – 2013 美国能源部橡树岭国家实验室，计算数据分析部,研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2011 – 2013纽约理工大学，计算机系，院长助理（兼）</span></p></li><li><p><span style=\"font-size: 18px;\">2009 – 2012 路易斯维尔大学，计算机系， 副教授</span></p></li><li><p><span style=\"font-size: 18px;\">2006 – 2010 美国能源部橡树岭国家实验室， 应用软件工程部， 副研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2004 – 2006 美国能源部橡树岭国家实验室，博士后</span></p></li><li><p><span style=\"font-size: 18px;\">2000 – 2004 美国路易斯维尔大学，计算机系，研究助理</span></p></li><li><p><span style=\"font-size: 18px;\">2000 武汉测绘科技大学，副高级工程师</span></p></li><li><p><span style=\"font-size: 18px;\">1997 – 2000 武汉测绘科技大学，网络中心，副主任</span></p></li><li><p><span style=\"font-size: 18px;\">1992 – 1997武汉测绘科技大学，设备处，工程师</span></p></li></ul><p><br/></p>'),(6,1,'崔晓辉','教授','xcui@whu.edu.cn ',1,10,1,1,'2017-11-17/5a0e50e29ab3d.png','<p><span style=\"font-size: 18px;\">基本信息</span></p><p><img src=\"http://www.wuhandaxue.com/Public/ueditor/themes/default/images/spacer.gif\" style=\"background:url(http://www.wuhandaxue.com/Public/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/zbsyk1001/Desktop/web/web/images/stories/cuixiaohui.jpg\"/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\"><span style=\"font-size: 18px;\"><span style=\"font-size: 24px;\">崔晓晖教授<br/>国际软件学院院长<br/>湖北省“百人计划”入选者</span><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔晓晖教授毕业于美国路易斯维尔大学，目前是经全球招聘后被选任的武汉大学国际软件学院院长。在此之前，崔教授在美国能源部橡树岭国家实验室任正研究员。同时还担任了美国路易斯维尔大学的讲座副教授，美国田纳西大学、纽约理工大学兼职教授等职务。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授长期从事计算机软件工程、集群智能以及高性能计算的理论与实践研究。崔教授领导团队用群集智能和图形加速器技术用于加速大规模城市交通模拟并进行大数据分析，该成果被用于美国多个部门采用。崔教授发展了异构型并行计算的编程模型和运行环境，提高了异构型集群并行计算的性能和能源利用效率。其成果被应用于对橡树岭实验室克雷XT5超级通用计算机，从而在2012年保住了橡树岭实验室世界最快计算机的称号。崔教授丰富的理论和项目经验可以为本项目的理论建模、方法设计、仿真系统开发提供指导。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授发表论文60多篇，其中SCI 6篇。曾承担美国5项国家重大项目，纵向课题费近300万，目前承担国家自然科学基金面上项目和湖北省自然基金重点项目各一项。崔教授是北美计算社会及组织科学协会，北美交通委员会会员，也长期担任美国国防部，能源部和空军等研究项目评委。他受邀或被遴选为国际会议报告人 50多次。崔教授的研究工作已被美国NBC电视台，时代自由周刊以及英国新科学家杂志等新闻媒体报道，并获得多个奖励，包括美国能源部杰出导师奖（2008，2009）、美国国家实验室特级贡献奖（2009），橡树岭国家实验室特别事件奖（2009)等。</span></p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">教育经历</span></h3><li><p><span style=\"font-size: 18px;\">2000/09 - 2004/06 美国路易斯维尔大学，计算机系,博士</span></p></li><li><p><span style=\"font-size: 18px;\">1997/09 -2000/06 武汉大学，计算机系，硕士</span></p></li><li><p><span style=\"font-size: 18px;\">1992/09 -1996/06 武汉测绘科技大学，光仪系，工学学士</span></p></li><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">工作经历</span></h3><li><p><span style=\"font-size: 18px;\">2013 －至今武汉大学国际软件学院院长</span></p></li><li><p><span style=\"font-size: 18px;\">2010 – 2013 美国能源部橡树岭国家实验室，计算数据分析部,研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2011 – 2013纽约理工大学，计算机系，院长助理（兼）</span></p></li><li><p><span style=\"font-size: 18px;\">2009 – 2012 路易斯维尔大学，计算机系， 副教授</span></p></li><li><p><span style=\"font-size: 18px;\">2006 – 2010 美国能源部橡树岭国家实验室， 应用软件工程部， 副研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2004 – 2006 美国能源部橡树岭国家实验室，博士后</span></p></li><li><p><span style=\"font-size: 18px;\">2000 – 2004 美国路易斯维尔大学，计算机系，研究助理</span></p></li><li><p><span style=\"font-size: 18px;\">2000 武汉测绘科技大学，副高级工程师</span></p></li><li><p><span style=\"font-size: 18px;\">1997 – 2000 武汉测绘科技大学，网络中心，副主任</span></p></li><li><p><span style=\"font-size: 18px;\">1992 – 1997武汉测绘科技大学，设备处，工程师</span></p></li></ul><p><br/></p>'),(7,1,'崔晓辉','教授','xcui@whu.edu.cn ',1,10,1,1,'2017-11-17/5a0e50e29ab3d.png','<p><span style=\"font-size: 18px;\">基本信息</span></p><p><img src=\"http://www.wuhandaxue.com/Public/ueditor/themes/default/images/spacer.gif\" style=\"background:url(http://www.wuhandaxue.com/Public/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/zbsyk1001/Desktop/web/web/images/stories/cuixiaohui.jpg\"/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\"><span style=\"font-size: 18px;\"><span style=\"font-size: 24px;\">崔晓晖教授<br/>国际软件学院院长<br/>湖北省“百人计划”入选者</span><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔晓晖教授毕业于美国路易斯维尔大学，目前是经全球招聘后被选任的武汉大学国际软件学院院长。在此之前，崔教授在美国能源部橡树岭国家实验室任正研究员。同时还担任了美国路易斯维尔大学的讲座副教授，美国田纳西大学、纽约理工大学兼职教授等职务。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授长期从事计算机软件工程、集群智能以及高性能计算的理论与实践研究。崔教授领导团队用群集智能和图形加速器技术用于加速大规模城市交通模拟并进行大数据分析，该成果被用于美国多个部门采用。崔教授发展了异构型并行计算的编程模型和运行环境，提高了异构型集群并行计算的性能和能源利用效率。其成果被应用于对橡树岭实验室克雷XT5超级通用计算机，从而在2012年保住了橡树岭实验室世界最快计算机的称号。崔教授丰富的理论和项目经验可以为本项目的理论建模、方法设计、仿真系统开发提供指导。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授发表论文60多篇，其中SCI 6篇。曾承担美国5项国家重大项目，纵向课题费近300万，目前承担国家自然科学基金面上项目和湖北省自然基金重点项目各一项。崔教授是北美计算社会及组织科学协会，北美交通委员会会员，也长期担任美国国防部，能源部和空军等研究项目评委。他受邀或被遴选为国际会议报告人 50多次。崔教授的研究工作已被美国NBC电视台，时代自由周刊以及英国新科学家杂志等新闻媒体报道，并获得多个奖励，包括美国能源部杰出导师奖（2008，2009）、美国国家实验室特级贡献奖（2009），橡树岭国家实验室特别事件奖（2009)等。</span></p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">教育经历</span></h3><li><p><span style=\"font-size: 18px;\">2000/09 - 2004/06 美国路易斯维尔大学，计算机系,博士</span></p></li><li><p><span style=\"font-size: 18px;\">1997/09 -2000/06 武汉大学，计算机系，硕士</span></p></li><li><p><span style=\"font-size: 18px;\">1992/09 -1996/06 武汉测绘科技大学，光仪系，工学学士</span></p></li><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">工作经历</span></h3><li><p><span style=\"font-size: 18px;\">2013 －至今武汉大学国际软件学院院长</span></p></li><li><p><span style=\"font-size: 18px;\">2010 – 2013 美国能源部橡树岭国家实验室，计算数据分析部,研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2011 – 2013纽约理工大学，计算机系，院长助理（兼）</span></p></li><li><p><span style=\"font-size: 18px;\">2009 – 2012 路易斯维尔大学，计算机系， 副教授</span></p></li><li><p><span style=\"font-size: 18px;\">2006 – 2010 美国能源部橡树岭国家实验室， 应用软件工程部， 副研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2004 – 2006 美国能源部橡树岭国家实验室，博士后</span></p></li><li><p><span style=\"font-size: 18px;\">2000 – 2004 美国路易斯维尔大学，计算机系，研究助理</span></p></li><li><p><span style=\"font-size: 18px;\">2000 武汉测绘科技大学，副高级工程师</span></p></li><li><p><span style=\"font-size: 18px;\">1997 – 2000 武汉测绘科技大学，网络中心，副主任</span></p></li><li><p><span style=\"font-size: 18px;\">1992 – 1997武汉测绘科技大学，设备处，工程师</span></p></li></ul><p><br/></p>'),(8,1,'崔晓辉','教授','xcui@whu.edu.cn ',1,10,1,1,'2017-11-17/5a0e50e29ab3d.png','<p><span style=\"font-size: 18px;\">基本信息</span></p><p><img src=\"http://www.wuhandaxue.com/Public/ueditor/themes/default/images/spacer.gif\" style=\"background:url(http://www.wuhandaxue.com/Public/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/zbsyk1001/Desktop/web/web/images/stories/cuixiaohui.jpg\"/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\"><span style=\"font-size: 18px;\"><span style=\"font-size: 24px;\">崔晓晖教授<br/>国际软件学院院长<br/>湖北省“百人计划”入选者</span><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔晓晖教授毕业于美国路易斯维尔大学，目前是经全球招聘后被选任的武汉大学国际软件学院院长。在此之前，崔教授在美国能源部橡树岭国家实验室任正研究员。同时还担任了美国路易斯维尔大学的讲座副教授，美国田纳西大学、纽约理工大学兼职教授等职务。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授长期从事计算机软件工程、集群智能以及高性能计算的理论与实践研究。崔教授领导团队用群集智能和图形加速器技术用于加速大规模城市交通模拟并进行大数据分析，该成果被用于美国多个部门采用。崔教授发展了异构型并行计算的编程模型和运行环境，提高了异构型集群并行计算的性能和能源利用效率。其成果被应用于对橡树岭实验室克雷XT5超级通用计算机，从而在2012年保住了橡树岭实验室世界最快计算机的称号。崔教授丰富的理论和项目经验可以为本项目的理论建模、方法设计、仿真系统开发提供指导。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授发表论文60多篇，其中SCI 6篇。曾承担美国5项国家重大项目，纵向课题费近300万，目前承担国家自然科学基金面上项目和湖北省自然基金重点项目各一项。崔教授是北美计算社会及组织科学协会，北美交通委员会会员，也长期担任美国国防部，能源部和空军等研究项目评委。他受邀或被遴选为国际会议报告人 50多次。崔教授的研究工作已被美国NBC电视台，时代自由周刊以及英国新科学家杂志等新闻媒体报道，并获得多个奖励，包括美国能源部杰出导师奖（2008，2009）、美国国家实验室特级贡献奖（2009），橡树岭国家实验室特别事件奖（2009)等。</span></p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">教育经历</span></h3><li><p><span style=\"font-size: 18px;\">2000/09 - 2004/06 美国路易斯维尔大学，计算机系,博士</span></p></li><li><p><span style=\"font-size: 18px;\">1997/09 -2000/06 武汉大学，计算机系，硕士</span></p></li><li><p><span style=\"font-size: 18px;\">1992/09 -1996/06 武汉测绘科技大学，光仪系，工学学士</span></p></li><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">工作经历</span></h3><li><p><span style=\"font-size: 18px;\">2013 －至今武汉大学国际软件学院院长</span></p></li><li><p><span style=\"font-size: 18px;\">2010 – 2013 美国能源部橡树岭国家实验室，计算数据分析部,研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2011 – 2013纽约理工大学，计算机系，院长助理（兼）</span></p></li><li><p><span style=\"font-size: 18px;\">2009 – 2012 路易斯维尔大学，计算机系， 副教授</span></p></li><li><p><span style=\"font-size: 18px;\">2006 – 2010 美国能源部橡树岭国家实验室， 应用软件工程部， 副研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2004 – 2006 美国能源部橡树岭国家实验室，博士后</span></p></li><li><p><span style=\"font-size: 18px;\">2000 – 2004 美国路易斯维尔大学，计算机系，研究助理</span></p></li><li><p><span style=\"font-size: 18px;\">2000 武汉测绘科技大学，副高级工程师</span></p></li><li><p><span style=\"font-size: 18px;\">1997 – 2000 武汉测绘科技大学，网络中心，副主任</span></p></li><li><p><span style=\"font-size: 18px;\">1992 – 1997武汉测绘科技大学，设备处，工程师</span></p></li></ul><p><br/></p>'),(9,1,'崔晓辉','教授','xcui@whu.edu.cn ',1,10,1,1,'2017-11-17/5a0e50e29ab3d.png','<p><span style=\"font-size: 18px;\">基本信息</span></p><p><img src=\"http://www.wuhandaxue.com/Public/ueditor/themes/default/images/spacer.gif\" style=\"background:url(http://www.wuhandaxue.com/Public/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/zbsyk1001/Desktop/web/web/images/stories/cuixiaohui.jpg\"/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\"><span style=\"font-size: 18px;\"><span style=\"font-size: 24px;\">崔晓晖教授<br/>国际软件学院院长<br/>湖北省“百人计划”入选者</span><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔晓晖教授毕业于美国路易斯维尔大学，目前是经全球招聘后被选任的武汉大学国际软件学院院长。在此之前，崔教授在美国能源部橡树岭国家实验室任正研究员。同时还担任了美国路易斯维尔大学的讲座副教授，美国田纳西大学、纽约理工大学兼职教授等职务。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授长期从事计算机软件工程、集群智能以及高性能计算的理论与实践研究。崔教授领导团队用群集智能和图形加速器技术用于加速大规模城市交通模拟并进行大数据分析，该成果被用于美国多个部门采用。崔教授发展了异构型并行计算的编程模型和运行环境，提高了异构型集群并行计算的性能和能源利用效率。其成果被应用于对橡树岭实验室克雷XT5超级通用计算机，从而在2012年保住了橡树岭实验室世界最快计算机的称号。崔教授丰富的理论和项目经验可以为本项目的理论建模、方法设计、仿真系统开发提供指导。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授发表论文60多篇，其中SCI 6篇。曾承担美国5项国家重大项目，纵向课题费近300万，目前承担国家自然科学基金面上项目和湖北省自然基金重点项目各一项。崔教授是北美计算社会及组织科学协会，北美交通委员会会员，也长期担任美国国防部，能源部和空军等研究项目评委。他受邀或被遴选为国际会议报告人 50多次。崔教授的研究工作已被美国NBC电视台，时代自由周刊以及英国新科学家杂志等新闻媒体报道，并获得多个奖励，包括美国能源部杰出导师奖（2008，2009）、美国国家实验室特级贡献奖（2009），橡树岭国家实验室特别事件奖（2009)等。</span></p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">教育经历</span></h3><li><p><span style=\"font-size: 18px;\">2000/09 - 2004/06 美国路易斯维尔大学，计算机系,博士</span></p></li><li><p><span style=\"font-size: 18px;\">1997/09 -2000/06 武汉大学，计算机系，硕士</span></p></li><li><p><span style=\"font-size: 18px;\">1992/09 -1996/06 武汉测绘科技大学，光仪系，工学学士</span></p></li><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">工作经历</span></h3><li><p><span style=\"font-size: 18px;\">2013 －至今武汉大学国际软件学院院长</span></p></li><li><p><span style=\"font-size: 18px;\">2010 – 2013 美国能源部橡树岭国家实验室，计算数据分析部,研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2011 – 2013纽约理工大学，计算机系，院长助理（兼）</span></p></li><li><p><span style=\"font-size: 18px;\">2009 – 2012 路易斯维尔大学，计算机系， 副教授</span></p></li><li><p><span style=\"font-size: 18px;\">2006 – 2010 美国能源部橡树岭国家实验室， 应用软件工程部， 副研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2004 – 2006 美国能源部橡树岭国家实验室，博士后</span></p></li><li><p><span style=\"font-size: 18px;\">2000 – 2004 美国路易斯维尔大学，计算机系，研究助理</span></p></li><li><p><span style=\"font-size: 18px;\">2000 武汉测绘科技大学，副高级工程师</span></p></li><li><p><span style=\"font-size: 18px;\">1997 – 2000 武汉测绘科技大学，网络中心，副主任</span></p></li><li><p><span style=\"font-size: 18px;\">1992 – 1997武汉测绘科技大学，设备处，工程师</span></p></li></ul><p><br/></p>'),(10,2,'崔晓辉','教授','xcui@whu.edu.cn ',1,10,0,1,'2017-11-17/5a0e50e29ab3d.png','<p><span style=\"font-size: 18px;\">基本信息</span></p><p><img src=\"http://www.wuhandaxue.com/Public/ueditor/themes/default/images/spacer.gif\" style=\"background:url(http://www.wuhandaxue.com/Public/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/zbsyk1001/Desktop/web/web/images/stories/cuixiaohui.jpg\"/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\"><span style=\"font-size: 18px;\"><span style=\"font-size: 24px;\">崔晓晖教授<br/>国际软件学院院长<br/>湖北省“百人计划”入选者</span><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔晓晖教授毕业于美国路易斯维尔大学，目前是经全球招聘后被选任的武汉大学国际软件学院院长。在此之前，崔教授在美国能源部橡树岭国家实验室任正研究员。同时还担任了美国路易斯维尔大学的讲座副教授，美国田纳西大学、纽约理工大学兼职教授等职务。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授长期从事计算机软件工程、集群智能以及高性能计算的理论与实践研究。崔教授领导团队用群集智能和图形加速器技术用于加速大规模城市交通模拟并进行大数据分析，该成果被用于美国多个部门采用。崔教授发展了异构型并行计算的编程模型和运行环境，提高了异构型集群并行计算的性能和能源利用效率。其成果被应用于对橡树岭实验室克雷XT5超级通用计算机，从而在2012年保住了橡树岭实验室世界最快计算机的称号。崔教授丰富的理论和项目经验可以为本项目的理论建模、方法设计、仿真系统开发提供指导。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授发表论文60多篇，其中SCI 6篇。曾承担美国5项国家重大项目，纵向课题费近300万，目前承担国家自然科学基金面上项目和湖北省自然基金重点项目各一项。崔教授是北美计算社会及组织科学协会，北美交通委员会会员，也长期担任美国国防部，能源部和空军等研究项目评委。他受邀或被遴选为国际会议报告人 50多次。崔教授的研究工作已被美国NBC电视台，时代自由周刊以及英国新科学家杂志等新闻媒体报道，并获得多个奖励，包括美国能源部杰出导师奖（2008，2009）、美国国家实验室特级贡献奖（2009），橡树岭国家实验室特别事件奖（2009)等。</span></p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">教育经历</span></h3><li><p><span style=\"font-size: 18px;\">2000/09 - 2004/06 美国路易斯维尔大学，计算机系,博士</span></p></li><li><p><span style=\"font-size: 18px;\">1997/09 -2000/06 武汉大学，计算机系，硕士</span></p></li><li><p><span style=\"font-size: 18px;\">1992/09 -1996/06 武汉测绘科技大学，光仪系，工学学士</span></p></li><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">工作经历</span></h3><li><p><span style=\"font-size: 18px;\">2013 －至今武汉大学国际软件学院院长</span></p></li><li><p><span style=\"font-size: 18px;\">2010 – 2013 美国能源部橡树岭国家实验室，计算数据分析部,研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2011 – 2013纽约理工大学，计算机系，院长助理（兼）</span></p></li><li><p><span style=\"font-size: 18px;\">2009 – 2012 路易斯维尔大学，计算机系， 副教授</span></p></li><li><p><span style=\"font-size: 18px;\">2006 – 2010 美国能源部橡树岭国家实验室， 应用软件工程部， 副研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2004 – 2006 美国能源部橡树岭国家实验室，博士后</span></p></li><li><p><span style=\"font-size: 18px;\">2000 – 2004 美国路易斯维尔大学，计算机系，研究助理</span></p></li><li><p><span style=\"font-size: 18px;\">2000 武汉测绘科技大学，副高级工程师</span></p></li><li><p><span style=\"font-size: 18px;\">1997 – 2000 武汉测绘科技大学，网络中心，副主任</span></p></li><li><p><span style=\"font-size: 18px;\">1992 – 1997武汉测绘科技大学，设备处，工程师</span></p></li></ul><p><br/></p>'),(11,1,'崔晓辉','教授','xcui@whu.edu.cn ',1,10,1,1,'2017-11-17/5a0e50e29ab3d.png','<p><span style=\"font-size: 18px;\">基本信息</span></p><p><img src=\"http://www.wuhandaxue.com/Public/ueditor/themes/default/images/spacer.gif\" style=\"background:url(http://www.wuhandaxue.com/Public/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/zbsyk1001/Desktop/web/web/images/stories/cuixiaohui.jpg\"/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\"><span style=\"font-size: 18px;\"><span style=\"font-size: 24px;\">崔晓晖教授<br/>国际软件学院院长<br/>湖北省“百人计划”入选者</span><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔晓晖教授毕业于美国路易斯维尔大学，目前是经全球招聘后被选任的武汉大学国际软件学院院长。在此之前，崔教授在美国能源部橡树岭国家实验室任正研究员。同时还担任了美国路易斯维尔大学的讲座副教授，美国田纳西大学、纽约理工大学兼职教授等职务。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授长期从事计算机软件工程、集群智能以及高性能计算的理论与实践研究。崔教授领导团队用群集智能和图形加速器技术用于加速大规模城市交通模拟并进行大数据分析，该成果被用于美国多个部门采用。崔教授发展了异构型并行计算的编程模型和运行环境，提高了异构型集群并行计算的性能和能源利用效率。其成果被应用于对橡树岭实验室克雷XT5超级通用计算机，从而在2012年保住了橡树岭实验室世界最快计算机的称号。崔教授丰富的理论和项目经验可以为本项目的理论建模、方法设计、仿真系统开发提供指导。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授发表论文60多篇，其中SCI 6篇。曾承担美国5项国家重大项目，纵向课题费近300万，目前承担国家自然科学基金面上项目和湖北省自然基金重点项目各一项。崔教授是北美计算社会及组织科学协会，北美交通委员会会员，也长期担任美国国防部，能源部和空军等研究项目评委。他受邀或被遴选为国际会议报告人 50多次。崔教授的研究工作已被美国NBC电视台，时代自由周刊以及英国新科学家杂志等新闻媒体报道，并获得多个奖励，包括美国能源部杰出导师奖（2008，2009）、美国国家实验室特级贡献奖（2009），橡树岭国家实验室特别事件奖（2009)等。</span></p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">教育经历</span></h3><li><p><span style=\"font-size: 18px;\">2000/09 - 2004/06 美国路易斯维尔大学，计算机系,博士</span></p></li><li><p><span style=\"font-size: 18px;\">1997/09 -2000/06 武汉大学，计算机系，硕士</span></p></li><li><p><span style=\"font-size: 18px;\">1992/09 -1996/06 武汉测绘科技大学，光仪系，工学学士</span></p></li><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">工作经历</span></h3><li><p><span style=\"font-size: 18px;\">2013 －至今武汉大学国际软件学院院长</span></p></li><li><p><span style=\"font-size: 18px;\">2010 – 2013 美国能源部橡树岭国家实验室，计算数据分析部,研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2011 – 2013纽约理工大学，计算机系，院长助理（兼）</span></p></li><li><p><span style=\"font-size: 18px;\">2009 – 2012 路易斯维尔大学，计算机系， 副教授</span></p></li><li><p><span style=\"font-size: 18px;\">2006 – 2010 美国能源部橡树岭国家实验室， 应用软件工程部， 副研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2004 – 2006 美国能源部橡树岭国家实验室，博士后</span></p></li><li><p><span style=\"font-size: 18px;\">2000 – 2004 美国路易斯维尔大学，计算机系，研究助理</span></p></li><li><p><span style=\"font-size: 18px;\">2000 武汉测绘科技大学，副高级工程师</span></p></li><li><p><span style=\"font-size: 18px;\">1997 – 2000 武汉测绘科技大学，网络中心，副主任</span></p></li><li><p><span style=\"font-size: 18px;\">1992 – 1997武汉测绘科技大学，设备处，工程师</span></p></li></ul><p><br/></p>'),(12,2,'崔晓辉','教授','xcui@whu.edu.cn ',1,10,1,1,'2017-11-17/5a0e50e29ab3d.png','<p><span style=\"font-size: 18px;\">基本信息</span></p><p><img src=\"http://www.wuhandaxue.com/Public/ueditor/themes/default/images/spacer.gif\" style=\"background:url(http://www.wuhandaxue.com/Public/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/zbsyk1001/Desktop/web/web/images/stories/cuixiaohui.jpg\"/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\"><span style=\"font-size: 18px;\"><span style=\"font-size: 24px;\">崔晓晖教授<br/>国际软件学院院长<br/>湖北省“百人计划”入选者</span><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔晓晖教授毕业于美国路易斯维尔大学，目前是经全球招聘后被选任的武汉大学国际软件学院院长。在此之前，崔教授在美国能源部橡树岭国家实验室任正研究员。同时还担任了美国路易斯维尔大学的讲座副教授，美国田纳西大学、纽约理工大学兼职教授等职务。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授长期从事计算机软件工程、集群智能以及高性能计算的理论与实践研究。崔教授领导团队用群集智能和图形加速器技术用于加速大规模城市交通模拟并进行大数据分析，该成果被用于美国多个部门采用。崔教授发展了异构型并行计算的编程模型和运行环境，提高了异构型集群并行计算的性能和能源利用效率。其成果被应用于对橡树岭实验室克雷XT5超级通用计算机，从而在2012年保住了橡树岭实验室世界最快计算机的称号。崔教授丰富的理论和项目经验可以为本项目的理论建模、方法设计、仿真系统开发提供指导。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授发表论文60多篇，其中SCI 6篇。曾承担美国5项国家重大项目，纵向课题费近300万，目前承担国家自然科学基金面上项目和湖北省自然基金重点项目各一项。崔教授是北美计算社会及组织科学协会，北美交通委员会会员，也长期担任美国国防部，能源部和空军等研究项目评委。他受邀或被遴选为国际会议报告人 50多次。崔教授的研究工作已被美国NBC电视台，时代自由周刊以及英国新科学家杂志等新闻媒体报道，并获得多个奖励，包括美国能源部杰出导师奖（2008，2009）、美国国家实验室特级贡献奖（2009），橡树岭国家实验室特别事件奖（2009)等。</span></p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">教育经历</span></h3><li><p><span style=\"font-size: 18px;\">2000/09 - 2004/06 美国路易斯维尔大学，计算机系,博士</span></p></li><li><p><span style=\"font-size: 18px;\">1997/09 -2000/06 武汉大学，计算机系，硕士</span></p></li><li><p><span style=\"font-size: 18px;\">1992/09 -1996/06 武汉测绘科技大学，光仪系，工学学士</span></p></li><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">工作经历</span></h3><li><p><span style=\"font-size: 18px;\">2013 －至今武汉大学国际软件学院院长</span></p></li><li><p><span style=\"font-size: 18px;\">2010 – 2013 美国能源部橡树岭国家实验室，计算数据分析部,研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2011 – 2013纽约理工大学，计算机系，院长助理（兼）</span></p></li><li><p><span style=\"font-size: 18px;\">2009 – 2012 路易斯维尔大学，计算机系， 副教授</span></p></li><li><p><span style=\"font-size: 18px;\">2006 – 2010 美国能源部橡树岭国家实验室， 应用软件工程部， 副研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2004 – 2006 美国能源部橡树岭国家实验室，博士后</span></p></li><li><p><span style=\"font-size: 18px;\">2000 – 2004 美国路易斯维尔大学，计算机系，研究助理</span></p></li><li><p><span style=\"font-size: 18px;\">2000 武汉测绘科技大学，副高级工程师</span></p></li><li><p><span style=\"font-size: 18px;\">1997 – 2000 武汉测绘科技大学，网络中心，副主任</span></p></li><li><p><span style=\"font-size: 18px;\">1992 – 1997武汉测绘科技大学，设备处，工程师</span></p></li></ul><p><br/></p>'),(13,2,'崔晓辉','教授','xcui@whu.edu.cn ',1,10,1,1,'2017-11-17/5a0e50e29ab3d.png','<p><span style=\"font-size: 18px;\">基本信息</span></p><p><img src=\"http://www.wuhandaxue.com/Public/ueditor/themes/default/images/spacer.gif\" style=\"background:url(http://www.wuhandaxue.com/Public/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/zbsyk1001/Desktop/web/web/images/stories/cuixiaohui.jpg\"/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\"><span style=\"font-size: 18px;\"><span style=\"font-size: 24px;\">崔晓晖教授<br/>国际软件学院院长<br/>湖北省“百人计划”入选者</span><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔晓晖教授毕业于美国路易斯维尔大学，目前是经全球招聘后被选任的武汉大学国际软件学院院长。在此之前，崔教授在美国能源部橡树岭国家实验室任正研究员。同时还担任了美国路易斯维尔大学的讲座副教授，美国田纳西大学、纽约理工大学兼职教授等职务。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授长期从事计算机软件工程、集群智能以及高性能计算的理论与实践研究。崔教授领导团队用群集智能和图形加速器技术用于加速大规模城市交通模拟并进行大数据分析，该成果被用于美国多个部门采用。崔教授发展了异构型并行计算的编程模型和运行环境，提高了异构型集群并行计算的性能和能源利用效率。其成果被应用于对橡树岭实验室克雷XT5超级通用计算机，从而在2012年保住了橡树岭实验室世界最快计算机的称号。崔教授丰富的理论和项目经验可以为本项目的理论建模、方法设计、仿真系统开发提供指导。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授发表论文60多篇，其中SCI 6篇。曾承担美国5项国家重大项目，纵向课题费近300万，目前承担国家自然科学基金面上项目和湖北省自然基金重点项目各一项。崔教授是北美计算社会及组织科学协会，北美交通委员会会员，也长期担任美国国防部，能源部和空军等研究项目评委。他受邀或被遴选为国际会议报告人 50多次。崔教授的研究工作已被美国NBC电视台，时代自由周刊以及英国新科学家杂志等新闻媒体报道，并获得多个奖励，包括美国能源部杰出导师奖（2008，2009）、美国国家实验室特级贡献奖（2009），橡树岭国家实验室特别事件奖（2009)等。</span></p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">教育经历</span></h3><li><p><span style=\"font-size: 18px;\">2000/09 - 2004/06 美国路易斯维尔大学，计算机系,博士</span></p></li><li><p><span style=\"font-size: 18px;\">1997/09 -2000/06 武汉大学，计算机系，硕士</span></p></li><li><p><span style=\"font-size: 18px;\">1992/09 -1996/06 武汉测绘科技大学，光仪系，工学学士</span></p></li><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">工作经历</span></h3><li><p><span style=\"font-size: 18px;\">2013 －至今武汉大学国际软件学院院长</span></p></li><li><p><span style=\"font-size: 18px;\">2010 – 2013 美国能源部橡树岭国家实验室，计算数据分析部,研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2011 – 2013纽约理工大学，计算机系，院长助理（兼）</span></p></li><li><p><span style=\"font-size: 18px;\">2009 – 2012 路易斯维尔大学，计算机系， 副教授</span></p></li><li><p><span style=\"font-size: 18px;\">2006 – 2010 美国能源部橡树岭国家实验室， 应用软件工程部， 副研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2004 – 2006 美国能源部橡树岭国家实验室，博士后</span></p></li><li><p><span style=\"font-size: 18px;\">2000 – 2004 美国路易斯维尔大学，计算机系，研究助理</span></p></li><li><p><span style=\"font-size: 18px;\">2000 武汉测绘科技大学，副高级工程师</span></p></li><li><p><span style=\"font-size: 18px;\">1997 – 2000 武汉测绘科技大学，网络中心，副主任</span></p></li><li><p><span style=\"font-size: 18px;\">1992 – 1997武汉测绘科技大学，设备处，工程师</span></p></li></ul><p><br/></p>'),(14,2,'崔晓辉','教授','xcui@whu.edu.cn ',1,10,0,1,'2017-11-17/5a0e50e29ab3d.png','<p><span style=\"font-size: 18px;\">基本信息</span></p><p><img src=\"http://www.wuhandaxue.com/Public/ueditor/themes/default/images/spacer.gif\" style=\"background:url(http://www.wuhandaxue.com/Public/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/zbsyk1001/Desktop/web/web/images/stories/cuixiaohui.jpg\"/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\"><span style=\"font-size: 18px;\"><span style=\"font-size: 24px;\">崔晓晖教授<br/>国际软件学院院长<br/>湖北省“百人计划”入选者</span><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔晓晖教授毕业于美国路易斯维尔大学，目前是经全球招聘后被选任的武汉大学国际软件学院院长。在此之前，崔教授在美国能源部橡树岭国家实验室任正研究员。同时还担任了美国路易斯维尔大学的讲座副教授，美国田纳西大学、纽约理工大学兼职教授等职务。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授长期从事计算机软件工程、集群智能以及高性能计算的理论与实践研究。崔教授领导团队用群集智能和图形加速器技术用于加速大规模城市交通模拟并进行大数据分析，该成果被用于美国多个部门采用。崔教授发展了异构型并行计算的编程模型和运行环境，提高了异构型集群并行计算的性能和能源利用效率。其成果被应用于对橡树岭实验室克雷XT5超级通用计算机，从而在2012年保住了橡树岭实验室世界最快计算机的称号。崔教授丰富的理论和项目经验可以为本项目的理论建模、方法设计、仿真系统开发提供指导。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授发表论文60多篇，其中SCI 6篇。曾承担美国5项国家重大项目，纵向课题费近300万，目前承担国家自然科学基金面上项目和湖北省自然基金重点项目各一项。崔教授是北美计算社会及组织科学协会，北美交通委员会会员，也长期担任美国国防部，能源部和空军等研究项目评委。他受邀或被遴选为国际会议报告人 50多次。崔教授的研究工作已被美国NBC电视台，时代自由周刊以及英国新科学家杂志等新闻媒体报道，并获得多个奖励，包括美国能源部杰出导师奖（2008，2009）、美国国家实验室特级贡献奖（2009），橡树岭国家实验室特别事件奖（2009)等。</span></p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">教育经历</span></h3><li><p><span style=\"font-size: 18px;\">2000/09 - 2004/06 美国路易斯维尔大学，计算机系,博士</span></p></li><li><p><span style=\"font-size: 18px;\">1997/09 -2000/06 武汉大学，计算机系，硕士</span></p></li><li><p><span style=\"font-size: 18px;\">1992/09 -1996/06 武汉测绘科技大学，光仪系，工学学士</span></p></li><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">工作经历</span></h3><li><p><span style=\"font-size: 18px;\">2013 －至今武汉大学国际软件学院院长</span></p></li><li><p><span style=\"font-size: 18px;\">2010 – 2013 美国能源部橡树岭国家实验室，计算数据分析部,研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2011 – 2013纽约理工大学，计算机系，院长助理（兼）</span></p></li><li><p><span style=\"font-size: 18px;\">2009 – 2012 路易斯维尔大学，计算机系， 副教授</span></p></li><li><p><span style=\"font-size: 18px;\">2006 – 2010 美国能源部橡树岭国家实验室， 应用软件工程部， 副研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2004 – 2006 美国能源部橡树岭国家实验室，博士后</span></p></li><li><p><span style=\"font-size: 18px;\">2000 – 2004 美国路易斯维尔大学，计算机系，研究助理</span></p></li><li><p><span style=\"font-size: 18px;\">2000 武汉测绘科技大学，副高级工程师</span></p></li><li><p><span style=\"font-size: 18px;\">1997 – 2000 武汉测绘科技大学，网络中心，副主任</span></p></li><li><p><span style=\"font-size: 18px;\">1992 – 1997武汉测绘科技大学，设备处，工程师</span></p></li></ul><p><br/></p>'),(15,2,'崔晓辉','教授','xcui@whu.edu.cn ',1,10,0,1,'2017-11-17/5a0e50e29ab3d.png','<p><span style=\"font-size: 18px;\">基本信息</span></p><p><img src=\"http://www.wuhandaxue.com/Public/ueditor/themes/default/images/spacer.gif\" style=\"background:url(http://www.wuhandaxue.com/Public/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/zbsyk1001/Desktop/web/web/images/stories/cuixiaohui.jpg\"/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\"><span style=\"font-size: 18px;\"><span style=\"font-size: 24px;\">崔晓晖教授<br/>国际软件学院院长<br/>湖北省“百人计划”入选者</span><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔晓晖教授毕业于美国路易斯维尔大学，目前是经全球招聘后被选任的武汉大学国际软件学院院长。在此之前，崔教授在美国能源部橡树岭国家实验室任正研究员。同时还担任了美国路易斯维尔大学的讲座副教授，美国田纳西大学、纽约理工大学兼职教授等职务。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授长期从事计算机软件工程、集群智能以及高性能计算的理论与实践研究。崔教授领导团队用群集智能和图形加速器技术用于加速大规模城市交通模拟并进行大数据分析，该成果被用于美国多个部门采用。崔教授发展了异构型并行计算的编程模型和运行环境，提高了异构型集群并行计算的性能和能源利用效率。其成果被应用于对橡树岭实验室克雷XT5超级通用计算机，从而在2012年保住了橡树岭实验室世界最快计算机的称号。崔教授丰富的理论和项目经验可以为本项目的理论建模、方法设计、仿真系统开发提供指导。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授发表论文60多篇，其中SCI 6篇。曾承担美国5项国家重大项目，纵向课题费近300万，目前承担国家自然科学基金面上项目和湖北省自然基金重点项目各一项。崔教授是北美计算社会及组织科学协会，北美交通委员会会员，也长期担任美国国防部，能源部和空军等研究项目评委。他受邀或被遴选为国际会议报告人 50多次。崔教授的研究工作已被美国NBC电视台，时代自由周刊以及英国新科学家杂志等新闻媒体报道，并获得多个奖励，包括美国能源部杰出导师奖（2008，2009）、美国国家实验室特级贡献奖（2009），橡树岭国家实验室特别事件奖（2009)等。</span></p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">教育经历</span></h3><li><p><span style=\"font-size: 18px;\">2000/09 - 2004/06 美国路易斯维尔大学，计算机系,博士</span></p></li><li><p><span style=\"font-size: 18px;\">1997/09 -2000/06 武汉大学，计算机系，硕士</span></p></li><li><p><span style=\"font-size: 18px;\">1992/09 -1996/06 武汉测绘科技大学，光仪系，工学学士</span></p></li><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">工作经历</span></h3><li><p><span style=\"font-size: 18px;\">2013 －至今武汉大学国际软件学院院长</span></p></li><li><p><span style=\"font-size: 18px;\">2010 – 2013 美国能源部橡树岭国家实验室，计算数据分析部,研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2011 – 2013纽约理工大学，计算机系，院长助理（兼）</span></p></li><li><p><span style=\"font-size: 18px;\">2009 – 2012 路易斯维尔大学，计算机系， 副教授</span></p></li><li><p><span style=\"font-size: 18px;\">2006 – 2010 美国能源部橡树岭国家实验室， 应用软件工程部， 副研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2004 – 2006 美国能源部橡树岭国家实验室，博士后</span></p></li><li><p><span style=\"font-size: 18px;\">2000 – 2004 美国路易斯维尔大学，计算机系，研究助理</span></p></li><li><p><span style=\"font-size: 18px;\">2000 武汉测绘科技大学，副高级工程师</span></p></li><li><p><span style=\"font-size: 18px;\">1997 – 2000 武汉测绘科技大学，网络中心，副主任</span></p></li><li><p><span style=\"font-size: 18px;\">1992 – 1997武汉测绘科技大学，设备处，工程师</span></p></li></ul><p><br/></p>'),(16,2,'崔晓辉','教授','xcui@whu.edu.cn ',1,10,0,1,'2017-11-17/5a0e50e29ab3d.png','<p><span style=\"font-size: 18px;\">基本信息</span></p><p><img src=\"http://www.wuhandaxue.com/Public/ueditor/themes/default/images/spacer.gif\" style=\"background:url(http://www.wuhandaxue.com/Public/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/zbsyk1001/Desktop/web/web/images/stories/cuixiaohui.jpg\"/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\"><span style=\"font-size: 18px;\"><span style=\"font-size: 24px;\">崔晓晖教授<br/>国际软件学院院长<br/>湖北省“百人计划”入选者</span><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔晓晖教授毕业于美国路易斯维尔大学，目前是经全球招聘后被选任的武汉大学国际软件学院院长。在此之前，崔教授在美国能源部橡树岭国家实验室任正研究员。同时还担任了美国路易斯维尔大学的讲座副教授，美国田纳西大学、纽约理工大学兼职教授等职务。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授长期从事计算机软件工程、集群智能以及高性能计算的理论与实践研究。崔教授领导团队用群集智能和图形加速器技术用于加速大规模城市交通模拟并进行大数据分析，该成果被用于美国多个部门采用。崔教授发展了异构型并行计算的编程模型和运行环境，提高了异构型集群并行计算的性能和能源利用效率。其成果被应用于对橡树岭实验室克雷XT5超级通用计算机，从而在2012年保住了橡树岭实验室世界最快计算机的称号。崔教授丰富的理论和项目经验可以为本项目的理论建模、方法设计、仿真系统开发提供指导。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授发表论文60多篇，其中SCI 6篇。曾承担美国5项国家重大项目，纵向课题费近300万，目前承担国家自然科学基金面上项目和湖北省自然基金重点项目各一项。崔教授是北美计算社会及组织科学协会，北美交通委员会会员，也长期担任美国国防部，能源部和空军等研究项目评委。他受邀或被遴选为国际会议报告人 50多次。崔教授的研究工作已被美国NBC电视台，时代自由周刊以及英国新科学家杂志等新闻媒体报道，并获得多个奖励，包括美国能源部杰出导师奖（2008，2009）、美国国家实验室特级贡献奖（2009），橡树岭国家实验室特别事件奖（2009)等。</span></p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">教育经历</span></h3><li><p><span style=\"font-size: 18px;\">2000/09 - 2004/06 美国路易斯维尔大学，计算机系,博士</span></p></li><li><p><span style=\"font-size: 18px;\">1997/09 -2000/06 武汉大学，计算机系，硕士</span></p></li><li><p><span style=\"font-size: 18px;\">1992/09 -1996/06 武汉测绘科技大学，光仪系，工学学士</span></p></li><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">工作经历</span></h3><li><p><span style=\"font-size: 18px;\">2013 －至今武汉大学国际软件学院院长</span></p></li><li><p><span style=\"font-size: 18px;\">2010 – 2013 美国能源部橡树岭国家实验室，计算数据分析部,研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2011 – 2013纽约理工大学，计算机系，院长助理（兼）</span></p></li><li><p><span style=\"font-size: 18px;\">2009 – 2012 路易斯维尔大学，计算机系， 副教授</span></p></li><li><p><span style=\"font-size: 18px;\">2006 – 2010 美国能源部橡树岭国家实验室， 应用软件工程部， 副研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2004 – 2006 美国能源部橡树岭国家实验室，博士后</span></p></li><li><p><span style=\"font-size: 18px;\">2000 – 2004 美国路易斯维尔大学，计算机系，研究助理</span></p></li><li><p><span style=\"font-size: 18px;\">2000 武汉测绘科技大学，副高级工程师</span></p></li><li><p><span style=\"font-size: 18px;\">1997 – 2000 武汉测绘科技大学，网络中心，副主任</span></p></li><li><p><span style=\"font-size: 18px;\">1992 – 1997武汉测绘科技大学，设备处，工程师</span></p></li></ul><p><br/></p>'),(17,2,'崔晓辉','教授','xcui@whu.edu.cn ',1,10,0,1,'2017-11-17/5a0e50e29ab3d.png','<p><span style=\"font-size: 18px;\">基本信息</span></p><p><img src=\"http://www.wuhandaxue.com/Public/ueditor/themes/default/images/spacer.gif\" style=\"background:url(http://www.wuhandaxue.com/Public/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/zbsyk1001/Desktop/web/web/images/stories/cuixiaohui.jpg\"/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\"><span style=\"font-size: 18px;\"><span style=\"font-size: 24px;\">崔晓晖教授<br/>国际软件学院院长<br/>湖北省“百人计划”入选者</span><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔晓晖教授毕业于美国路易斯维尔大学，目前是经全球招聘后被选任的武汉大学国际软件学院院长。在此之前，崔教授在美国能源部橡树岭国家实验室任正研究员。同时还担任了美国路易斯维尔大学的讲座副教授，美国田纳西大学、纽约理工大学兼职教授等职务。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授长期从事计算机软件工程、集群智能以及高性能计算的理论与实践研究。崔教授领导团队用群集智能和图形加速器技术用于加速大规模城市交通模拟并进行大数据分析，该成果被用于美国多个部门采用。崔教授发展了异构型并行计算的编程模型和运行环境，提高了异构型集群并行计算的性能和能源利用效率。其成果被应用于对橡树岭实验室克雷XT5超级通用计算机，从而在2012年保住了橡树岭实验室世界最快计算机的称号。崔教授丰富的理论和项目经验可以为本项目的理论建模、方法设计、仿真系统开发提供指导。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授发表论文60多篇，其中SCI 6篇。曾承担美国5项国家重大项目，纵向课题费近300万，目前承担国家自然科学基金面上项目和湖北省自然基金重点项目各一项。崔教授是北美计算社会及组织科学协会，北美交通委员会会员，也长期担任美国国防部，能源部和空军等研究项目评委。他受邀或被遴选为国际会议报告人 50多次。崔教授的研究工作已被美国NBC电视台，时代自由周刊以及英国新科学家杂志等新闻媒体报道，并获得多个奖励，包括美国能源部杰出导师奖（2008，2009）、美国国家实验室特级贡献奖（2009），橡树岭国家实验室特别事件奖（2009)等。</span></p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">教育经历</span></h3><li><p><span style=\"font-size: 18px;\">2000/09 - 2004/06 美国路易斯维尔大学，计算机系,博士</span></p></li><li><p><span style=\"font-size: 18px;\">1997/09 -2000/06 武汉大学，计算机系，硕士</span></p></li><li><p><span style=\"font-size: 18px;\">1992/09 -1996/06 武汉测绘科技大学，光仪系，工学学士</span></p></li><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">工作经历</span></h3><li><p><span style=\"font-size: 18px;\">2013 －至今武汉大学国际软件学院院长</span></p></li><li><p><span style=\"font-size: 18px;\">2010 – 2013 美国能源部橡树岭国家实验室，计算数据分析部,研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2011 – 2013纽约理工大学，计算机系，院长助理（兼）</span></p></li><li><p><span style=\"font-size: 18px;\">2009 – 2012 路易斯维尔大学，计算机系， 副教授</span></p></li><li><p><span style=\"font-size: 18px;\">2006 – 2010 美国能源部橡树岭国家实验室， 应用软件工程部， 副研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2004 – 2006 美国能源部橡树岭国家实验室，博士后</span></p></li><li><p><span style=\"font-size: 18px;\">2000 – 2004 美国路易斯维尔大学，计算机系，研究助理</span></p></li><li><p><span style=\"font-size: 18px;\">2000 武汉测绘科技大学，副高级工程师</span></p></li><li><p><span style=\"font-size: 18px;\">1997 – 2000 武汉测绘科技大学，网络中心，副主任</span></p></li><li><p><span style=\"font-size: 18px;\">1992 – 1997武汉测绘科技大学，设备处，工程师</span></p></li></ul><p><br/></p>'),(18,2,'崔晓辉','教授','xcui@whu.edu.cn ',1,10,0,1,'2017-11-17/5a0e50e29ab3d.png','<p><span style=\"font-size: 18px;\">基本信息</span></p><p><img src=\"http://www.wuhandaxue.com/Public/ueditor/themes/default/images/spacer.gif\" style=\"background:url(http://www.wuhandaxue.com/Public/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/zbsyk1001/Desktop/web/web/images/stories/cuixiaohui.jpg\"/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\"><span style=\"font-size: 18px;\"><span style=\"font-size: 24px;\">崔晓晖教授<br/>国际软件学院院长<br/>湖北省“百人计划”入选者</span><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔晓晖教授毕业于美国路易斯维尔大学，目前是经全球招聘后被选任的武汉大学国际软件学院院长。在此之前，崔教授在美国能源部橡树岭国家实验室任正研究员。同时还担任了美国路易斯维尔大学的讲座副教授，美国田纳西大学、纽约理工大学兼职教授等职务。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授长期从事计算机软件工程、集群智能以及高性能计算的理论与实践研究。崔教授领导团队用群集智能和图形加速器技术用于加速大规模城市交通模拟并进行大数据分析，该成果被用于美国多个部门采用。崔教授发展了异构型并行计算的编程模型和运行环境，提高了异构型集群并行计算的性能和能源利用效率。其成果被应用于对橡树岭实验室克雷XT5超级通用计算机，从而在2012年保住了橡树岭实验室世界最快计算机的称号。崔教授丰富的理论和项目经验可以为本项目的理论建模、方法设计、仿真系统开发提供指导。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授发表论文60多篇，其中SCI 6篇。曾承担美国5项国家重大项目，纵向课题费近300万，目前承担国家自然科学基金面上项目和湖北省自然基金重点项目各一项。崔教授是北美计算社会及组织科学协会，北美交通委员会会员，也长期担任美国国防部，能源部和空军等研究项目评委。他受邀或被遴选为国际会议报告人 50多次。崔教授的研究工作已被美国NBC电视台，时代自由周刊以及英国新科学家杂志等新闻媒体报道，并获得多个奖励，包括美国能源部杰出导师奖（2008，2009）、美国国家实验室特级贡献奖（2009），橡树岭国家实验室特别事件奖（2009)等。</span></p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">教育经历</span></h3><li><p><span style=\"font-size: 18px;\">2000/09 - 2004/06 美国路易斯维尔大学，计算机系,博士</span></p></li><li><p><span style=\"font-size: 18px;\">1997/09 -2000/06 武汉大学，计算机系，硕士</span></p></li><li><p><span style=\"font-size: 18px;\">1992/09 -1996/06 武汉测绘科技大学，光仪系，工学学士</span></p></li><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">工作经历</span></h3><li><p><span style=\"font-size: 18px;\">2013 －至今武汉大学国际软件学院院长</span></p></li><li><p><span style=\"font-size: 18px;\">2010 – 2013 美国能源部橡树岭国家实验室，计算数据分析部,研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2011 – 2013纽约理工大学，计算机系，院长助理（兼）</span></p></li><li><p><span style=\"font-size: 18px;\">2009 – 2012 路易斯维尔大学，计算机系， 副教授</span></p></li><li><p><span style=\"font-size: 18px;\">2006 – 2010 美国能源部橡树岭国家实验室， 应用软件工程部， 副研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2004 – 2006 美国能源部橡树岭国家实验室，博士后</span></p></li><li><p><span style=\"font-size: 18px;\">2000 – 2004 美国路易斯维尔大学，计算机系，研究助理</span></p></li><li><p><span style=\"font-size: 18px;\">2000 武汉测绘科技大学，副高级工程师</span></p></li><li><p><span style=\"font-size: 18px;\">1997 – 2000 武汉测绘科技大学，网络中心，副主任</span></p></li><li><p><span style=\"font-size: 18px;\">1992 – 1997武汉测绘科技大学，设备处，工程师</span></p></li></ul><p><br/></p>'),(19,2,'崔晓辉','教授','xcui@whu.edu.cn ',1,10,0,1,'2017-11-17/5a0e50e29ab3d.png','<p><span style=\"font-size: 18px;\">基本信息</span></p><p><img src=\"http://www.wuhandaxue.com/Public/ueditor/themes/default/images/spacer.gif\" style=\"background:url(http://www.wuhandaxue.com/Public/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/zbsyk1001/Desktop/web/web/images/stories/cuixiaohui.jpg\"/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\"><span style=\"font-size: 18px;\"><span style=\"font-size: 24px;\">崔晓晖教授<br/>国际软件学院院长<br/>湖北省“百人计划”入选者</span><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔晓晖教授毕业于美国路易斯维尔大学，目前是经全球招聘后被选任的武汉大学国际软件学院院长。在此之前，崔教授在美国能源部橡树岭国家实验室任正研究员。同时还担任了美国路易斯维尔大学的讲座副教授，美国田纳西大学、纽约理工大学兼职教授等职务。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授长期从事计算机软件工程、集群智能以及高性能计算的理论与实践研究。崔教授领导团队用群集智能和图形加速器技术用于加速大规模城市交通模拟并进行大数据分析，该成果被用于美国多个部门采用。崔教授发展了异构型并行计算的编程模型和运行环境，提高了异构型集群并行计算的性能和能源利用效率。其成果被应用于对橡树岭实验室克雷XT5超级通用计算机，从而在2012年保住了橡树岭实验室世界最快计算机的称号。崔教授丰富的理论和项目经验可以为本项目的理论建模、方法设计、仿真系统开发提供指导。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授发表论文60多篇，其中SCI 6篇。曾承担美国5项国家重大项目，纵向课题费近300万，目前承担国家自然科学基金面上项目和湖北省自然基金重点项目各一项。崔教授是北美计算社会及组织科学协会，北美交通委员会会员，也长期担任美国国防部，能源部和空军等研究项目评委。他受邀或被遴选为国际会议报告人 50多次。崔教授的研究工作已被美国NBC电视台，时代自由周刊以及英国新科学家杂志等新闻媒体报道，并获得多个奖励，包括美国能源部杰出导师奖（2008，2009）、美国国家实验室特级贡献奖（2009），橡树岭国家实验室特别事件奖（2009)等。</span></p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">教育经历</span></h3><li><p><span style=\"font-size: 18px;\">2000/09 - 2004/06 美国路易斯维尔大学，计算机系,博士</span></p></li><li><p><span style=\"font-size: 18px;\">1997/09 -2000/06 武汉大学，计算机系，硕士</span></p></li><li><p><span style=\"font-size: 18px;\">1992/09 -1996/06 武汉测绘科技大学，光仪系，工学学士</span></p></li><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">工作经历</span></h3><li><p><span style=\"font-size: 18px;\">2013 －至今武汉大学国际软件学院院长</span></p></li><li><p><span style=\"font-size: 18px;\">2010 – 2013 美国能源部橡树岭国家实验室，计算数据分析部,研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2011 – 2013纽约理工大学，计算机系，院长助理（兼）</span></p></li><li><p><span style=\"font-size: 18px;\">2009 – 2012 路易斯维尔大学，计算机系， 副教授</span></p></li><li><p><span style=\"font-size: 18px;\">2006 – 2010 美国能源部橡树岭国家实验室， 应用软件工程部， 副研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2004 – 2006 美国能源部橡树岭国家实验室，博士后</span></p></li><li><p><span style=\"font-size: 18px;\">2000 – 2004 美国路易斯维尔大学，计算机系，研究助理</span></p></li><li><p><span style=\"font-size: 18px;\">2000 武汉测绘科技大学，副高级工程师</span></p></li><li><p><span style=\"font-size: 18px;\">1997 – 2000 武汉测绘科技大学，网络中心，副主任</span></p></li><li><p><span style=\"font-size: 18px;\">1992 – 1997武汉测绘科技大学，设备处，工程师</span></p></li></ul><p><br/></p>'),(20,2,'崔晓辉','教授','xcui@whu.edu.cn ',1,10,0,1,'2017-11-17/5a0e50e29ab3d.png','<p><span style=\"font-size: 18px;\">基本信息</span></p><p><img src=\"http://www.wuhandaxue.com/Public/ueditor/themes/default/images/spacer.gif\" style=\"background:url(http://www.wuhandaxue.com/Public/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/zbsyk1001/Desktop/web/web/images/stories/cuixiaohui.jpg\"/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\"><span style=\"font-size: 18px;\"><span style=\"font-size: 24px;\">崔晓晖教授<br/>国际软件学院院长<br/>湖北省“百人计划”入选者</span><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔晓晖教授毕业于美国路易斯维尔大学，目前是经全球招聘后被选任的武汉大学国际软件学院院长。在此之前，崔教授在美国能源部橡树岭国家实验室任正研究员。同时还担任了美国路易斯维尔大学的讲座副教授，美国田纳西大学、纽约理工大学兼职教授等职务。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授长期从事计算机软件工程、集群智能以及高性能计算的理论与实践研究。崔教授领导团队用群集智能和图形加速器技术用于加速大规模城市交通模拟并进行大数据分析，该成果被用于美国多个部门采用。崔教授发展了异构型并行计算的编程模型和运行环境，提高了异构型集群并行计算的性能和能源利用效率。其成果被应用于对橡树岭实验室克雷XT5超级通用计算机，从而在2012年保住了橡树岭实验室世界最快计算机的称号。崔教授丰富的理论和项目经验可以为本项目的理论建模、方法设计、仿真系统开发提供指导。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授发表论文60多篇，其中SCI 6篇。曾承担美国5项国家重大项目，纵向课题费近300万，目前承担国家自然科学基金面上项目和湖北省自然基金重点项目各一项。崔教授是北美计算社会及组织科学协会，北美交通委员会会员，也长期担任美国国防部，能源部和空军等研究项目评委。他受邀或被遴选为国际会议报告人 50多次。崔教授的研究工作已被美国NBC电视台，时代自由周刊以及英国新科学家杂志等新闻媒体报道，并获得多个奖励，包括美国能源部杰出导师奖（2008，2009）、美国国家实验室特级贡献奖（2009），橡树岭国家实验室特别事件奖（2009)等。</span></p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">教育经历</span></h3><li><p><span style=\"font-size: 18px;\">2000/09 - 2004/06 美国路易斯维尔大学，计算机系,博士</span></p></li><li><p><span style=\"font-size: 18px;\">1997/09 -2000/06 武汉大学，计算机系，硕士</span></p></li><li><p><span style=\"font-size: 18px;\">1992/09 -1996/06 武汉测绘科技大学，光仪系，工学学士</span></p></li><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">工作经历</span></h3><li><p><span style=\"font-size: 18px;\">2013 －至今武汉大学国际软件学院院长</span></p></li><li><p><span style=\"font-size: 18px;\">2010 – 2013 美国能源部橡树岭国家实验室，计算数据分析部,研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2011 – 2013纽约理工大学，计算机系，院长助理（兼）</span></p></li><li><p><span style=\"font-size: 18px;\">2009 – 2012 路易斯维尔大学，计算机系， 副教授</span></p></li><li><p><span style=\"font-size: 18px;\">2006 – 2010 美国能源部橡树岭国家实验室， 应用软件工程部， 副研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2004 – 2006 美国能源部橡树岭国家实验室，博士后</span></p></li><li><p><span style=\"font-size: 18px;\">2000 – 2004 美国路易斯维尔大学，计算机系，研究助理</span></p></li><li><p><span style=\"font-size: 18px;\">2000 武汉测绘科技大学，副高级工程师</span></p></li><li><p><span style=\"font-size: 18px;\">1997 – 2000 武汉测绘科技大学，网络中心，副主任</span></p></li><li><p><span style=\"font-size: 18px;\">1992 – 1997武汉测绘科技大学，设备处，工程师</span></p></li></ul><p><br/></p>'),(21,2,'崔晓辉','教授','xcui@whu.edu.cn ',1,10,0,1,'2017-11-17/5a0e50e29ab3d.png','<p><span style=\"font-size: 18px;\">基本信息</span></p><p><img src=\"http://www.wuhandaxue.com/Public/ueditor/themes/default/images/spacer.gif\" style=\"background:url(http://www.wuhandaxue.com/Public/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/zbsyk1001/Desktop/web/web/images/stories/cuixiaohui.jpg\"/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\"><span style=\"font-size: 18px;\"><span style=\"font-size: 24px;\">崔晓晖教授<br/>国际软件学院院长<br/>湖北省“百人计划”入选者</span><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔晓晖教授毕业于美国路易斯维尔大学，目前是经全球招聘后被选任的武汉大学国际软件学院院长。在此之前，崔教授在美国能源部橡树岭国家实验室任正研究员。同时还担任了美国路易斯维尔大学的讲座副教授，美国田纳西大学、纽约理工大学兼职教授等职务。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授长期从事计算机软件工程、集群智能以及高性能计算的理论与实践研究。崔教授领导团队用群集智能和图形加速器技术用于加速大规模城市交通模拟并进行大数据分析，该成果被用于美国多个部门采用。崔教授发展了异构型并行计算的编程模型和运行环境，提高了异构型集群并行计算的性能和能源利用效率。其成果被应用于对橡树岭实验室克雷XT5超级通用计算机，从而在2012年保住了橡树岭实验室世界最快计算机的称号。崔教授丰富的理论和项目经验可以为本项目的理论建模、方法设计、仿真系统开发提供指导。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授发表论文60多篇，其中SCI 6篇。曾承担美国5项国家重大项目，纵向课题费近300万，目前承担国家自然科学基金面上项目和湖北省自然基金重点项目各一项。崔教授是北美计算社会及组织科学协会，北美交通委员会会员，也长期担任美国国防部，能源部和空军等研究项目评委。他受邀或被遴选为国际会议报告人 50多次。崔教授的研究工作已被美国NBC电视台，时代自由周刊以及英国新科学家杂志等新闻媒体报道，并获得多个奖励，包括美国能源部杰出导师奖（2008，2009）、美国国家实验室特级贡献奖（2009），橡树岭国家实验室特别事件奖（2009)等。</span></p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">教育经历</span></h3><li><p><span style=\"font-size: 18px;\">2000/09 - 2004/06 美国路易斯维尔大学，计算机系,博士</span></p></li><li><p><span style=\"font-size: 18px;\">1997/09 -2000/06 武汉大学，计算机系，硕士</span></p></li><li><p><span style=\"font-size: 18px;\">1992/09 -1996/06 武汉测绘科技大学，光仪系，工学学士</span></p></li><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">工作经历</span></h3><li><p><span style=\"font-size: 18px;\">2013 －至今武汉大学国际软件学院院长</span></p></li><li><p><span style=\"font-size: 18px;\">2010 – 2013 美国能源部橡树岭国家实验室，计算数据分析部,研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2011 – 2013纽约理工大学，计算机系，院长助理（兼）</span></p></li><li><p><span style=\"font-size: 18px;\">2009 – 2012 路易斯维尔大学，计算机系， 副教授</span></p></li><li><p><span style=\"font-size: 18px;\">2006 – 2010 美国能源部橡树岭国家实验室， 应用软件工程部， 副研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2004 – 2006 美国能源部橡树岭国家实验室，博士后</span></p></li><li><p><span style=\"font-size: 18px;\">2000 – 2004 美国路易斯维尔大学，计算机系，研究助理</span></p></li><li><p><span style=\"font-size: 18px;\">2000 武汉测绘科技大学，副高级工程师</span></p></li><li><p><span style=\"font-size: 18px;\">1997 – 2000 武汉测绘科技大学，网络中心，副主任</span></p></li><li><p><span style=\"font-size: 18px;\">1992 – 1997武汉测绘科技大学，设备处，工程师</span></p></li></ul><p><br/></p>'),(22,3,'崔晓辉','教授','xcui@whu.edu.cn ',1,10,0,0,'2018-06-19/5b28a83737383.jpg','<p><span style=\"font-size: 18px;\">基本信息</span></p><p><img src=\"http://www.wuhandaxue.com/Public/ueditor/themes/default/images/spacer.gif\" style=\"background:url(http://www.wuhandaxue.com/Public/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/zbsyk1001/Desktop/web/web/images/stories/cuixiaohui.jpg\"/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\"><span style=\"font-size: 18px;\"><span style=\"font-size: 24px;\">崔晓晖教授<br/>国际软件学院院长<br/>湖北省“百人计划”入选者</span><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔晓晖教授毕业于美国路易斯维尔大学，目前是经全球招聘后被选任的武汉大学国际软件学院院长。在此之前，崔教授在美国能源部橡树岭国家实验室任正研究员。同时还担任了美国路易斯维尔大学的讲座副教授，美国田纳西大学、纽约理工大学兼职教授等职务。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授长期从事计算机软件工程、集群智能以及高性能计算的理论与实践研究。崔教授领导团队用群集智能和图形加速器技术用于加速大规模城市交通模拟并进行大数据分析，该成果被用于美国多个部门采用。崔教授发展了异构型并行计算的编程模型和运行环境，提高了异构型集群并行计算的性能和能源利用效率。其成果被应用于对橡树岭实验室克雷XT5超级通用计算机，从而在2012年保住了橡树岭实验室世界最快计算机的称号。崔教授丰富的理论和项目经验可以为本项目的理论建模、方法设计、仿真系统开发提供指导。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授发表论文60多篇，其中SCI 6篇。曾承担美国5项国家重大项目，纵向课题费近300万，目前承担国家自然科学基金面上项目和湖北省自然基金重点项目各一项。崔教授是北美计算社会及组织科学协会，北美交通委员会会员，也长期担任美国国防部，能源部和空军等研究项目评委。他受邀或被遴选为国际会议报告人 50多次。崔教授的研究工作已被美国NBC电视台，时代自由周刊以及英国新科学家杂志等新闻媒体报道，并获得多个奖励，包括美国能源部杰出导师奖（2008，2009）、美国国家实验室特级贡献奖（2009），橡树岭国家实验室特别事件奖（2009)等。</span></p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">教育经历</span></h3><li><p><span style=\"font-size: 18px;\">2000/09 - 2004/06 美国路易斯维尔大学，计算机系,博士</span></p></li><li><p><span style=\"font-size: 18px;\">1997/09 -2000/06 武汉大学，计算机系，硕士</span></p></li><li><p><span style=\"font-size: 18px;\">1992/09 -1996/06 武汉测绘科技大学，光仪系，工学学士</span></p></li><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">工作经历</span></h3><li><p><span style=\"font-size: 18px;\">2013 －至今武汉大学国际软件学院院长</span></p></li><li><p><span style=\"font-size: 18px;\">2010 – 2013 美国能源部橡树岭国家实验室，计算数据分析部,研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2011 – 2013纽约理工大学，计算机系，院长助理（兼）</span></p></li><li><p><span style=\"font-size: 18px;\">2009 – 2012 路易斯维尔大学，计算机系， 副教授</span></p></li><li><p><span style=\"font-size: 18px;\">2006 – 2010 美国能源部橡树岭国家实验室， 应用软件工程部， 副研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2004 – 2006 美国能源部橡树岭国家实验室，博士后</span></p></li><li><p><span style=\"font-size: 18px;\">2000 – 2004 美国路易斯维尔大学，计算机系，研究助理</span></p></li><li><p><span style=\"font-size: 18px;\">2000 武汉测绘科技大学，副高级工程师</span></p></li><li><p><span style=\"font-size: 18px;\">1997 – 2000 武汉测绘科技大学，网络中心，副主任</span></p></li><li><p><span style=\"font-size: 18px;\">1992 – 1997武汉测绘科技大学，设备处，工程师</span></p></li></ul><p><br/></p>'),(23,3,'崔晓辉','教授','xcui@whu.edu.cn ',1,10,0,0,'2017-11-17/5a0e50e29ab3d.png','<p><span style=\"font-size: 18px;\">基本信息</span></p><p><img src=\"http://www.wuhandaxue.com/Public/ueditor/themes/default/images/spacer.gif\" style=\"background:url(http://www.wuhandaxue.com/Public/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/zbsyk1001/Desktop/web/web/images/stories/cuixiaohui.jpg\"/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\"><span style=\"font-size: 18px;\"><span style=\"font-size: 24px;\">崔晓晖教授<br/>国际软件学院院长<br/>湖北省“百人计划”入选者</span><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔晓晖教授毕业于美国路易斯维尔大学，目前是经全球招聘后被选任的武汉大学国际软件学院院长。在此之前，崔教授在美国能源部橡树岭国家实验室任正研究员。同时还担任了美国路易斯维尔大学的讲座副教授，美国田纳西大学、纽约理工大学兼职教授等职务。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授长期从事计算机软件工程、集群智能以及高性能计算的理论与实践研究。崔教授领导团队用群集智能和图形加速器技术用于加速大规模城市交通模拟并进行大数据分析，该成果被用于美国多个部门采用。崔教授发展了异构型并行计算的编程模型和运行环境，提高了异构型集群并行计算的性能和能源利用效率。其成果被应用于对橡树岭实验室克雷XT5超级通用计算机，从而在2012年保住了橡树岭实验室世界最快计算机的称号。崔教授丰富的理论和项目经验可以为本项目的理论建模、方法设计、仿真系统开发提供指导。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授发表论文60多篇，其中SCI 6篇。曾承担美国5项国家重大项目，纵向课题费近300万，目前承担国家自然科学基金面上项目和湖北省自然基金重点项目各一项。崔教授是北美计算社会及组织科学协会，北美交通委员会会员，也长期担任美国国防部，能源部和空军等研究项目评委。他受邀或被遴选为国际会议报告人 50多次。崔教授的研究工作已被美国NBC电视台，时代自由周刊以及英国新科学家杂志等新闻媒体报道，并获得多个奖励，包括美国能源部杰出导师奖（2008，2009）、美国国家实验室特级贡献奖（2009），橡树岭国家实验室特别事件奖（2009)等。</span></p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">教育经历</span></h3><li><p><span style=\"font-size: 18px;\">2000/09 - 2004/06 美国路易斯维尔大学，计算机系,博士</span></p></li><li><p><span style=\"font-size: 18px;\">1997/09 -2000/06 武汉大学，计算机系，硕士</span></p></li><li><p><span style=\"font-size: 18px;\">1992/09 -1996/06 武汉测绘科技大学，光仪系，工学学士</span></p></li><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">工作经历</span></h3><li><p><span style=\"font-size: 18px;\">2013 －至今武汉大学国际软件学院院长</span></p></li><li><p><span style=\"font-size: 18px;\">2010 – 2013 美国能源部橡树岭国家实验室，计算数据分析部,研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2011 – 2013纽约理工大学，计算机系，院长助理（兼）</span></p></li><li><p><span style=\"font-size: 18px;\">2009 – 2012 路易斯维尔大学，计算机系， 副教授</span></p></li><li><p><span style=\"font-size: 18px;\">2006 – 2010 美国能源部橡树岭国家实验室， 应用软件工程部， 副研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2004 – 2006 美国能源部橡树岭国家实验室，博士后</span></p></li><li><p><span style=\"font-size: 18px;\">2000 – 2004 美国路易斯维尔大学，计算机系，研究助理</span></p></li><li><p><span style=\"font-size: 18px;\">2000 武汉测绘科技大学，副高级工程师</span></p></li><li><p><span style=\"font-size: 18px;\">1997 – 2000 武汉测绘科技大学，网络中心，副主任</span></p></li><li><p><span style=\"font-size: 18px;\">1992 – 1997武汉测绘科技大学，设备处，工程师</span></p></li></ul><p><br/></p>'),(24,3,'崔晓辉','教授','xcui@whu.edu.cn ',1,10,0,0,'2017-11-17/5a0e50e29ab3d.png','<p><span style=\"font-size: 18px;\">基本信息</span></p><p><img src=\"http://www.wuhandaxue.com/Public/ueditor/themes/default/images/spacer.gif\" style=\"background:url(http://www.wuhandaxue.com/Public/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/zbsyk1001/Desktop/web/web/images/stories/cuixiaohui.jpg\"/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\"><span style=\"font-size: 18px;\"><span style=\"font-size: 24px;\">崔晓晖教授<br/>国际软件学院院长<br/>湖北省“百人计划”入选者</span><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔晓晖教授毕业于美国路易斯维尔大学，目前是经全球招聘后被选任的武汉大学国际软件学院院长。在此之前，崔教授在美国能源部橡树岭国家实验室任正研究员。同时还担任了美国路易斯维尔大学的讲座副教授，美国田纳西大学、纽约理工大学兼职教授等职务。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授长期从事计算机软件工程、集群智能以及高性能计算的理论与实践研究。崔教授领导团队用群集智能和图形加速器技术用于加速大规模城市交通模拟并进行大数据分析，该成果被用于美国多个部门采用。崔教授发展了异构型并行计算的编程模型和运行环境，提高了异构型集群并行计算的性能和能源利用效率。其成果被应用于对橡树岭实验室克雷XT5超级通用计算机，从而在2012年保住了橡树岭实验室世界最快计算机的称号。崔教授丰富的理论和项目经验可以为本项目的理论建模、方法设计、仿真系统开发提供指导。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授发表论文60多篇，其中SCI 6篇。曾承担美国5项国家重大项目，纵向课题费近300万，目前承担国家自然科学基金面上项目和湖北省自然基金重点项目各一项。崔教授是北美计算社会及组织科学协会，北美交通委员会会员，也长期担任美国国防部，能源部和空军等研究项目评委。他受邀或被遴选为国际会议报告人 50多次。崔教授的研究工作已被美国NBC电视台，时代自由周刊以及英国新科学家杂志等新闻媒体报道，并获得多个奖励，包括美国能源部杰出导师奖（2008，2009）、美国国家实验室特级贡献奖（2009），橡树岭国家实验室特别事件奖（2009)等。</span></p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">教育经历</span></h3><li><p><span style=\"font-size: 18px;\">2000/09 - 2004/06 美国路易斯维尔大学，计算机系,博士</span></p></li><li><p><span style=\"font-size: 18px;\">1997/09 -2000/06 武汉大学，计算机系，硕士</span></p></li><li><p><span style=\"font-size: 18px;\">1992/09 -1996/06 武汉测绘科技大学，光仪系，工学学士</span></p></li><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">工作经历</span></h3><li><p><span style=\"font-size: 18px;\">2013 －至今武汉大学国际软件学院院长</span></p></li><li><p><span style=\"font-size: 18px;\">2010 – 2013 美国能源部橡树岭国家实验室，计算数据分析部,研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2011 – 2013纽约理工大学，计算机系，院长助理（兼）</span></p></li><li><p><span style=\"font-size: 18px;\">2009 – 2012 路易斯维尔大学，计算机系， 副教授</span></p></li><li><p><span style=\"font-size: 18px;\">2006 – 2010 美国能源部橡树岭国家实验室， 应用软件工程部， 副研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2004 – 2006 美国能源部橡树岭国家实验室，博士后</span></p></li><li><p><span style=\"font-size: 18px;\">2000 – 2004 美国路易斯维尔大学，计算机系，研究助理</span></p></li><li><p><span style=\"font-size: 18px;\">2000 武汉测绘科技大学，副高级工程师</span></p></li><li><p><span style=\"font-size: 18px;\">1997 – 2000 武汉测绘科技大学，网络中心，副主任</span></p></li><li><p><span style=\"font-size: 18px;\">1992 – 1997武汉测绘科技大学，设备处，工程师</span></p></li></ul><p><br/></p>'),(25,3,'崔晓辉','教授','xcui@whu.edu.cn ',1,10,0,0,'2017-11-17/5a0e50e29ab3d.png','<p><span style=\"font-size: 18px;\">基本信息</span></p><p><img src=\"http://www.wuhandaxue.com/Public/ueditor/themes/default/images/spacer.gif\" style=\"background:url(http://www.wuhandaxue.com/Public/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/zbsyk1001/Desktop/web/web/images/stories/cuixiaohui.jpg\"/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\"><span style=\"font-size: 18px;\"><span style=\"font-size: 24px;\">崔晓晖教授<br/>国际软件学院院长<br/>湖北省“百人计划”入选者</span><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔晓晖教授毕业于美国路易斯维尔大学，目前是经全球招聘后被选任的武汉大学国际软件学院院长。在此之前，崔教授在美国能源部橡树岭国家实验室任正研究员。同时还担任了美国路易斯维尔大学的讲座副教授，美国田纳西大学、纽约理工大学兼职教授等职务。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授长期从事计算机软件工程、集群智能以及高性能计算的理论与实践研究。崔教授领导团队用群集智能和图形加速器技术用于加速大规模城市交通模拟并进行大数据分析，该成果被用于美国多个部门采用。崔教授发展了异构型并行计算的编程模型和运行环境，提高了异构型集群并行计算的性能和能源利用效率。其成果被应用于对橡树岭实验室克雷XT5超级通用计算机，从而在2012年保住了橡树岭实验室世界最快计算机的称号。崔教授丰富的理论和项目经验可以为本项目的理论建模、方法设计、仿真系统开发提供指导。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授发表论文60多篇，其中SCI 6篇。曾承担美国5项国家重大项目，纵向课题费近300万，目前承担国家自然科学基金面上项目和湖北省自然基金重点项目各一项。崔教授是北美计算社会及组织科学协会，北美交通委员会会员，也长期担任美国国防部，能源部和空军等研究项目评委。他受邀或被遴选为国际会议报告人 50多次。崔教授的研究工作已被美国NBC电视台，时代自由周刊以及英国新科学家杂志等新闻媒体报道，并获得多个奖励，包括美国能源部杰出导师奖（2008，2009）、美国国家实验室特级贡献奖（2009），橡树岭国家实验室特别事件奖（2009)等。</span></p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">教育经历</span></h3><li><p><span style=\"font-size: 18px;\">2000/09 - 2004/06 美国路易斯维尔大学，计算机系,博士</span></p></li><li><p><span style=\"font-size: 18px;\">1997/09 -2000/06 武汉大学，计算机系，硕士</span></p></li><li><p><span style=\"font-size: 18px;\">1992/09 -1996/06 武汉测绘科技大学，光仪系，工学学士</span></p></li><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">工作经历</span></h3><li><p><span style=\"font-size: 18px;\">2013 －至今武汉大学国际软件学院院长</span></p></li><li><p><span style=\"font-size: 18px;\">2010 – 2013 美国能源部橡树岭国家实验室，计算数据分析部,研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2011 – 2013纽约理工大学，计算机系，院长助理（兼）</span></p></li><li><p><span style=\"font-size: 18px;\">2009 – 2012 路易斯维尔大学，计算机系， 副教授</span></p></li><li><p><span style=\"font-size: 18px;\">2006 – 2010 美国能源部橡树岭国家实验室， 应用软件工程部， 副研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2004 – 2006 美国能源部橡树岭国家实验室，博士后</span></p></li><li><p><span style=\"font-size: 18px;\">2000 – 2004 美国路易斯维尔大学，计算机系，研究助理</span></p></li><li><p><span style=\"font-size: 18px;\">2000 武汉测绘科技大学，副高级工程师</span></p></li><li><p><span style=\"font-size: 18px;\">1997 – 2000 武汉测绘科技大学，网络中心，副主任</span></p></li><li><p><span style=\"font-size: 18px;\">1992 – 1997武汉测绘科技大学，设备处，工程师</span></p></li></ul><p><br/></p>'),(26,3,'崔晓辉','教授','xcui@whu.edu.cn ',1,10,0,0,'2017-11-17/5a0e50e29ab3d.png','<p><span style=\"font-size: 18px;\">基本信息</span></p><p><img src=\"http://www.wuhandaxue.com/Public/ueditor/themes/default/images/spacer.gif\" style=\"background:url(http://www.wuhandaxue.com/Public/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/zbsyk1001/Desktop/web/web/images/stories/cuixiaohui.jpg\"/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\"><span style=\"font-size: 18px;\"><span style=\"font-size: 24px;\">崔晓晖教授<br/>国际软件学院院长<br/>湖北省“百人计划”入选者</span><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔晓晖教授毕业于美国路易斯维尔大学，目前是经全球招聘后被选任的武汉大学国际软件学院院长。在此之前，崔教授在美国能源部橡树岭国家实验室任正研究员。同时还担任了美国路易斯维尔大学的讲座副教授，美国田纳西大学、纽约理工大学兼职教授等职务。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授长期从事计算机软件工程、集群智能以及高性能计算的理论与实践研究。崔教授领导团队用群集智能和图形加速器技术用于加速大规模城市交通模拟并进行大数据分析，该成果被用于美国多个部门采用。崔教授发展了异构型并行计算的编程模型和运行环境，提高了异构型集群并行计算的性能和能源利用效率。其成果被应用于对橡树岭实验室克雷XT5超级通用计算机，从而在2012年保住了橡树岭实验室世界最快计算机的称号。崔教授丰富的理论和项目经验可以为本项目的理论建模、方法设计、仿真系统开发提供指导。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授发表论文60多篇，其中SCI 6篇。曾承担美国5项国家重大项目，纵向课题费近300万，目前承担国家自然科学基金面上项目和湖北省自然基金重点项目各一项。崔教授是北美计算社会及组织科学协会，北美交通委员会会员，也长期担任美国国防部，能源部和空军等研究项目评委。他受邀或被遴选为国际会议报告人 50多次。崔教授的研究工作已被美国NBC电视台，时代自由周刊以及英国新科学家杂志等新闻媒体报道，并获得多个奖励，包括美国能源部杰出导师奖（2008，2009）、美国国家实验室特级贡献奖（2009），橡树岭国家实验室特别事件奖（2009)等。</span></p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">教育经历</span></h3><li><p><span style=\"font-size: 18px;\">2000/09 - 2004/06 美国路易斯维尔大学，计算机系,博士</span></p></li><li><p><span style=\"font-size: 18px;\">1997/09 -2000/06 武汉大学，计算机系，硕士</span></p></li><li><p><span style=\"font-size: 18px;\">1992/09 -1996/06 武汉测绘科技大学，光仪系，工学学士</span></p></li><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">工作经历</span></h3><li><p><span style=\"font-size: 18px;\">2013 －至今武汉大学国际软件学院院长</span></p></li><li><p><span style=\"font-size: 18px;\">2010 – 2013 美国能源部橡树岭国家实验室，计算数据分析部,研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2011 – 2013纽约理工大学，计算机系，院长助理（兼）</span></p></li><li><p><span style=\"font-size: 18px;\">2009 – 2012 路易斯维尔大学，计算机系， 副教授</span></p></li><li><p><span style=\"font-size: 18px;\">2006 – 2010 美国能源部橡树岭国家实验室， 应用软件工程部， 副研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2004 – 2006 美国能源部橡树岭国家实验室，博士后</span></p></li><li><p><span style=\"font-size: 18px;\">2000 – 2004 美国路易斯维尔大学，计算机系，研究助理</span></p></li><li><p><span style=\"font-size: 18px;\">2000 武汉测绘科技大学，副高级工程师</span></p></li><li><p><span style=\"font-size: 18px;\">1997 – 2000 武汉测绘科技大学，网络中心，副主任</span></p></li><li><p><span style=\"font-size: 18px;\">1992 – 1997武汉测绘科技大学，设备处，工程师</span></p></li></ul><p><br/></p>'),(27,3,'崔晓辉','教授','xcui@whu.edu.cn ',1,10,0,0,'2017-11-17/5a0e50e29ab3d.png','<p><span style=\"font-size: 18px;\">基本信息</span></p><p><img src=\"http://www.wuhandaxue.com/Public/ueditor/themes/default/images/spacer.gif\" style=\"background:url(http://www.wuhandaxue.com/Public/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/zbsyk1001/Desktop/web/web/images/stories/cuixiaohui.jpg\"/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\"><span style=\"font-size: 18px;\"><span style=\"font-size: 24px;\">崔晓晖教授<br/>国际软件学院院长<br/>湖北省“百人计划”入选者</span><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔晓晖教授毕业于美国路易斯维尔大学，目前是经全球招聘后被选任的武汉大学国际软件学院院长。在此之前，崔教授在美国能源部橡树岭国家实验室任正研究员。同时还担任了美国路易斯维尔大学的讲座副教授，美国田纳西大学、纽约理工大学兼职教授等职务。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授长期从事计算机软件工程、集群智能以及高性能计算的理论与实践研究。崔教授领导团队用群集智能和图形加速器技术用于加速大规模城市交通模拟并进行大数据分析，该成果被用于美国多个部门采用。崔教授发展了异构型并行计算的编程模型和运行环境，提高了异构型集群并行计算的性能和能源利用效率。其成果被应用于对橡树岭实验室克雷XT5超级通用计算机，从而在2012年保住了橡树岭实验室世界最快计算机的称号。崔教授丰富的理论和项目经验可以为本项目的理论建模、方法设计、仿真系统开发提供指导。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授发表论文60多篇，其中SCI 6篇。曾承担美国5项国家重大项目，纵向课题费近300万，目前承担国家自然科学基金面上项目和湖北省自然基金重点项目各一项。崔教授是北美计算社会及组织科学协会，北美交通委员会会员，也长期担任美国国防部，能源部和空军等研究项目评委。他受邀或被遴选为国际会议报告人 50多次。崔教授的研究工作已被美国NBC电视台，时代自由周刊以及英国新科学家杂志等新闻媒体报道，并获得多个奖励，包括美国能源部杰出导师奖（2008，2009）、美国国家实验室特级贡献奖（2009），橡树岭国家实验室特别事件奖（2009)等。</span></p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">教育经历</span></h3><li><p><span style=\"font-size: 18px;\">2000/09 - 2004/06 美国路易斯维尔大学，计算机系,博士</span></p></li><li><p><span style=\"font-size: 18px;\">1997/09 -2000/06 武汉大学，计算机系，硕士</span></p></li><li><p><span style=\"font-size: 18px;\">1992/09 -1996/06 武汉测绘科技大学，光仪系，工学学士</span></p></li><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">工作经历</span></h3><li><p><span style=\"font-size: 18px;\">2013 －至今武汉大学国际软件学院院长</span></p></li><li><p><span style=\"font-size: 18px;\">2010 – 2013 美国能源部橡树岭国家实验室，计算数据分析部,研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2011 – 2013纽约理工大学，计算机系，院长助理（兼）</span></p></li><li><p><span style=\"font-size: 18px;\">2009 – 2012 路易斯维尔大学，计算机系， 副教授</span></p></li><li><p><span style=\"font-size: 18px;\">2006 – 2010 美国能源部橡树岭国家实验室， 应用软件工程部， 副研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2004 – 2006 美国能源部橡树岭国家实验室，博士后</span></p></li><li><p><span style=\"font-size: 18px;\">2000 – 2004 美国路易斯维尔大学，计算机系，研究助理</span></p></li><li><p><span style=\"font-size: 18px;\">2000 武汉测绘科技大学，副高级工程师</span></p></li><li><p><span style=\"font-size: 18px;\">1997 – 2000 武汉测绘科技大学，网络中心，副主任</span></p></li><li><p><span style=\"font-size: 18px;\">1992 – 1997武汉测绘科技大学，设备处，工程师</span></p></li></ul><p><br/></p>');

#
# Structure for table "x_ketype"
#

CREATE TABLE `x_ketype` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `title` varchar(255) DEFAULT NULL,
  `img` varchar(255) DEFAULT NULL,
  `is_show` int(255) DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=9 DEFAULT CHARSET=utf8 COMMENT='武汉大学课程类别';

#
# Data for table "x_ketype"
#

INSERT INTO `x_ketype` VALUES (1,'Java Web就业实战课程','Java Web遵循J2EE企业应用开发规范,在互联网业务,企业信息建设,网站建设, 通信协议,服务化, 分布式应用,大数据处理都用着广泛的应用。国内很多大型的互联网公司BAT等都深度的使用JAVA技术。','2018-06-19/5b28f66f6e537.png',1),(2,'Java语法基础课程','Java是全球最流行的开发语言,Tiobe排行榜稳居榜首,语言跨平台,自动回收内存,语言与C,C++相近,入门简单,JAVA也是Android首选开发语言,在全球各大公司谷歌,亚马逊,阿里, 百度,京东都用着广泛的使用。','2018-06-19/5b28f6df74227.png',1);

#
# Structure for table "x_lannouncement"
#

CREATE TABLE `x_lannouncement` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `img` varchar(255) NOT NULL,
  `title` varchar(255) NOT NULL COMMENT '标题',
  `content` text NOT NULL,
  `create` int(20) NOT NULL,
  `is_show` int(2) NOT NULL DEFAULT '1' COMMENT '1  显示  0 不显示',
  `view` int(50) NOT NULL DEFAULT '1',
  `is_s` int(2) NOT NULL DEFAULT '0',
  `sort` int(10) NOT NULL DEFAULT '10',
  `zz` varchar(255) DEFAULT NULL,
  `ly` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`,`sort`)
) ENGINE=MyISAM AUTO_INCREMENT=18 DEFAULT CHARSET=utf8 COMMENT='武汉大学新闻';

#
# Data for table "x_lannouncement"
#

INSERT INTO `x_lannouncement` VALUES (9,'2018-06-20/5b2a391b14af4.png','java中静态String的最大长度由什么决定的？','<h3 id=\"h3-string-\" style=\"box-sizing: border-box; margin-right: 0px; margin-bottom: 16px; margin-left: 0px; font-size: 1.5em; position: relative; line-height: 1.43; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal; margin-top: 0px !important;\">String最大长度</h3><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">本文参考：</p><blockquote style=\"box-sizing: border-box; margin: 0px 0px 16px; padding: 0px 15px 0px 20px; border-left: 4px solid rgb(221, 221, 221); font-family: Georgia, &quot;Times New Roman&quot;, Times, Kai, &quot;Kaiti SC&quot;, KaiTi, BiauKai, FontAwesome, serif; color: rgb(102, 102, 102); font-size: 14px; font-style: italic; white-space: normal;\"><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><a href=\"http://blog.csdn.net/roland_sun/article/details/46716965\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-decoration-line: none; color: rgb(65, 131, 196);\">http://blog.csdn.net/roland_sun/article/details/46716965</a><br style=\"box-sizing: border-box;\"/><a href=\"http://denverj.iteye.com/blog/1210979\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-decoration-line: none; color: rgb(65, 131, 196);\">http://denverj.iteye.com/blog/1210979</a>&nbsp;<br style=\"box-sizing: border-box;\"/><a href=\"http://www.blogjava.net/DLevin/archive/2011/09/05/358033.html\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-decoration-line: none; color: rgb(65, 131, 196);\">http://www.blogjava.net/DLevin/archive/2011/09/05/358033.html</a></p></blockquote><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">今天碰到一个字符串长度过长的报错，然后仔细去查了一下发现字符串常量的长度已经到达8万了，结果还没运行直接给我丢出来个长度过长的错，因此去查了一下资料为什么会出现这个错误。</p><ul style=\"box-sizing: border-box; margin-bottom: 16px; padding: 0px 0px 0px 2em; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\" class=\" list-paddingleft-2\"><li><p>常量池<br style=\"box-sizing: border-box;\"/>java虚拟机为每个被装载的类维护一个常量池，比如说一个类</p></li></ul><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">public&nbsp;class&nbsp;Test{\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;String&nbsp;=&nbsp;&quot;asb&quot;;\r\n}</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">这种常量，就会被记录到常量池中，在生成字节码class文件的时候，会放在COUNST_POOL中</p><ul style=\"box-sizing: border-box; margin-bottom: 16px; padding: 0px 0px 0px 2em; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\" class=\" list-paddingleft-2\"><li><p>字节码<br style=\"box-sizing: border-box;\"/>字节码文件中，维护了一个有序集合——常量池，记录着类型所使用的所有常量信息</p></li></ul><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">Entry Type Description</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">CONSTANT_Utf8&nbsp;<em style=\"box-sizing: border-box;\">A UTF-8 encoded Unicode string</em></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">CONSTANT_Integer&nbsp;<em style=\"box-sizing: border-box;\">An int literal value</em></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">CONSTANT_Float&nbsp;<em style=\"box-sizing: border-box;\">A float literal value</em></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">CONSTANT_Long&nbsp;<em style=\"box-sizing: border-box;\">A long literal value</em></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">CONSTANT_Double&nbsp;<em style=\"box-sizing: border-box;\">A double literal value</em></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">CONSTANT_Class&nbsp;<em style=\"box-sizing: border-box;\">A symbolic reference to a class or interface</em></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">CONSTANT_String&nbsp;<em style=\"box-sizing: border-box;\">A String literal value</em></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">CONSTANT_Fieldref&nbsp;<em style=\"box-sizing: border-box;\">A symbolic reference to a field</em></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">CONSTANT_Methodref&nbsp;<em style=\"box-sizing: border-box;\">A symbolic reference to a method declared in a class</em></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">CONSTANT_InterfaceMethodref&nbsp;<em style=\"box-sizing: border-box;\">A symbolic reference to a method declared in an interface</em></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">CONSTANT_NameAndType&nbsp;<em style=\"box-sizing: border-box;\">Part of a symbolic reference to a field or method</em></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">其中记录String类型的常量池在：CONSTANT_String_info中，而这个里面记录的是UTF-8常量池的索引， CONSTANT_Utf8_info，即我们的最终信息是保存在这个常量池中的</p><ul style=\"box-sizing: border-box; margin-bottom: 16px; padding: 0px 0px 0px 2em; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\" class=\" list-paddingleft-2\"><li><p>限制原因<br style=\"box-sizing: border-box;\"/>在CONSTANT_Utf8_info中，有一个记录bytes所代表的字符串的长度的变量，他的长度为2个字节，也就是说，使用的是16位的无符号整形来进行记录，因此最多可使用2^16 = 65536 - 1，但是在我的测试中，发现当字符串超过65534（不包含），也就是说length &gt; 65534，就会报错了，然后继续去查，在说明中可以看到</p></li></ul><blockquote style=\"box-sizing: border-box; margin: 0px 0px 16px; padding: 0px 15px 0px 20px; border-left: 4px solid rgb(221, 221, 221); font-family: Georgia, &quot;Times New Roman&quot;, Times, Kai, &quot;Kaiti SC&quot;, KaiTi, BiauKai, FontAwesome, serif; color: rgb(102, 102, 102); font-size: 14px; font-style: italic; white-space: normal;\"><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">represent constant string values. String content is encoded in modified UTF-8.</p></blockquote><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">我们用个例子来分析一下吧<br style=\"box-sizing: border-box;\"/>为了尽可能简单，这样写</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">public&nbsp;class&nbsp;Aa{\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args){\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;aaa&nbsp;=&quot;aaa&quot;;\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">很简单的一个例子<br style=\"box-sizing: border-box;\"/>然后我们反编译一下class</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">javap&nbsp;-verbose&nbsp;Aa.class</pre><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">Classfile&nbsp;/C:/Users/fin/Desktop/Aa.class\r\n&nbsp;&nbsp;Last&nbsp;modified&nbsp;2017-7-31;&nbsp;size&nbsp;265&nbsp;bytes\r\n&nbsp;&nbsp;MD5&nbsp;checksum&nbsp;aec0db218f2598d73cb809fad1e0eed5\r\n&nbsp;&nbsp;Compiled&nbsp;from&nbsp;&quot;Aa.java&quot;\r\npublic&nbsp;class&nbsp;Aa\r\n&nbsp;&nbsp;minor&nbsp;version:&nbsp;0\r\n&nbsp;&nbsp;major&nbsp;version:&nbsp;52\r\n&nbsp;&nbsp;flags:&nbsp;ACC_PUBLIC,&nbsp;ACC_SUPER\r\nConstant&nbsp;pool:\r\n&nbsp;&nbsp;&nbsp;#1&nbsp;=&nbsp;Methodref&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#4.#13&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;java/lang/Object.&quot;&lt;init&gt;&quot;:()V\r\n&nbsp;&nbsp;&nbsp;#2&nbsp;=&nbsp;String&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#14&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;aaa\r\n&nbsp;&nbsp;&nbsp;#3&nbsp;=&nbsp;Class&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#15&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Aa\r\n&nbsp;&nbsp;&nbsp;#4&nbsp;=&nbsp;Class&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#16&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;java/lang/Object\r\n&nbsp;&nbsp;&nbsp;#5&nbsp;=&nbsp;Utf8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;init&gt;\r\n&nbsp;&nbsp;&nbsp;#6&nbsp;=&nbsp;Utf8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;()V\r\n&nbsp;&nbsp;&nbsp;#7&nbsp;=&nbsp;Utf8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Code\r\n&nbsp;&nbsp;&nbsp;#8&nbsp;=&nbsp;Utf8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LineNumberTable\r\n&nbsp;&nbsp;&nbsp;#9&nbsp;=&nbsp;Utf8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;main\r\n&nbsp;&nbsp;#10&nbsp;=&nbsp;Utf8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;([Ljava/lang/String;)V\r\n&nbsp;&nbsp;#11&nbsp;=&nbsp;Utf8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SourceFile\r\n&nbsp;&nbsp;#12&nbsp;=&nbsp;Utf8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Aa.java\r\n&nbsp;&nbsp;#13&nbsp;=&nbsp;NameAndType&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#5:#6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&quot;&lt;init&gt;&quot;:()V\r\n&nbsp;&nbsp;#14&nbsp;=&nbsp;Utf8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;aaa\r\n&nbsp;&nbsp;#15&nbsp;=&nbsp;Utf8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Aa\r\n&nbsp;&nbsp;#16&nbsp;=&nbsp;Utf8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;java/lang/Object\r\n{\r\n&nbsp;&nbsp;public&nbsp;Aa();\r\n&nbsp;&nbsp;&nbsp;&nbsp;descriptor:&nbsp;()V\r\n&nbsp;&nbsp;&nbsp;&nbsp;flags:&nbsp;ACC_PUBLIC\r\n&nbsp;&nbsp;&nbsp;&nbsp;Code:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stack=1,&nbsp;locals=1,&nbsp;args_size=1\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0:&nbsp;aload_0\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1:&nbsp;invokespecial&nbsp;#1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Method&nbsp;java/lang/Object.&quot;&lt;init&gt;&quot;:()V\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4:&nbsp;return\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LineNumberTable:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line&nbsp;3:&nbsp;0\r\n\r\n&nbsp;&nbsp;public&nbsp;static&nbsp;void&nbsp;main(java.lang.String[]);\r\n&nbsp;&nbsp;&nbsp;&nbsp;descriptor:&nbsp;([Ljava/lang/String;)V\r\n&nbsp;&nbsp;&nbsp;&nbsp;flags:&nbsp;ACC_PUBLIC,&nbsp;ACC_STATIC\r\n&nbsp;&nbsp;&nbsp;&nbsp;Code:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stack=1,&nbsp;locals=2,&nbsp;args_size=1\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0:&nbsp;ldc&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;String&nbsp;aaa\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2:&nbsp;astore_1\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3:&nbsp;return\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LineNumberTable:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line&nbsp;7:&nbsp;0\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line&nbsp;9:&nbsp;3\r\n}\r\nSourceFile:&nbsp;&quot;Aa.java&quot;</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">上面就是我们得到的信息，可以看到第二个常量池指向14号常量池也就是我们的utf8常量池，因为我们的aaa很简单，因此记录的字节码一定也是重复的，所以很容易能从2进制的class文件中找到。</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">cafe&nbsp;babe&nbsp;0000&nbsp;0034&nbsp;0011&nbsp;0a00&nbsp;0400&nbsp;0d08\r\n000e&nbsp;0700&nbsp;0f07&nbsp;0010&nbsp;0100&nbsp;063c&nbsp;696e&nbsp;6974\r\n3e01&nbsp;0003&nbsp;2829&nbsp;5601&nbsp;0004&nbsp;436f&nbsp;6465&nbsp;0100\r\n0f4c&nbsp;696e&nbsp;654e&nbsp;756d&nbsp;6265&nbsp;7254&nbsp;6162&nbsp;6c65\r\n0100&nbsp;046d&nbsp;6169&nbsp;6e01&nbsp;0016&nbsp;285b&nbsp;4c6a&nbsp;6176\r\n612f&nbsp;6c61&nbsp;6e67&nbsp;2f53&nbsp;7472&nbsp;696e&nbsp;673b&nbsp;2956\r\n0100&nbsp;0a53&nbsp;6f75&nbsp;7263&nbsp;6546&nbsp;696c&nbsp;6501&nbsp;0007\r\n4161&nbsp;2e6a&nbsp;6176&nbsp;610c&nbsp;0005&nbsp;0006&nbsp;0100&nbsp;0361\r\n6161&nbsp;0100&nbsp;0241&nbsp;6101&nbsp;0010&nbsp;6a61&nbsp;7661&nbsp;2f6c\r\n616e&nbsp;672f&nbsp;4f62&nbsp;6a65&nbsp;6374&nbsp;0021&nbsp;0003&nbsp;0004\r\n0000&nbsp;0000&nbsp;0002&nbsp;0001&nbsp;0005&nbsp;0006&nbsp;0001&nbsp;0007\r\n0000&nbsp;001d&nbsp;0001&nbsp;0001&nbsp;0000&nbsp;0005&nbsp;2ab7&nbsp;0001\r\nb100&nbsp;0000&nbsp;0100&nbsp;0800&nbsp;0000&nbsp;0600&nbsp;0100&nbsp;0000\r\n0300&nbsp;0900&nbsp;0900&nbsp;0a00&nbsp;0100&nbsp;0700&nbsp;0000&nbsp;2000\r\n0100&nbsp;0200&nbsp;0000&nbsp;0412&nbsp;024c&nbsp;b100&nbsp;0000&nbsp;0100\r\n0800&nbsp;0000&nbsp;0a00&nbsp;0200&nbsp;0000&nbsp;0700&nbsp;0300&nbsp;0900\r\n0100&nbsp;0b00&nbsp;0000&nbsp;0200&nbsp;0c</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">然后查看一下二进制文件，我们就查找所有0003的字段（因为我们字符串长度为3），并且前面要有01（CONSTANT_uft8_info中的tag标记），或者0100 03，找到两个结果，0100 0361 6161和一个01 0003 2829 5601 ，后者应该不可能了，只有可能是这个0100 0361 6161这个，因为a的ascii码对应于16进制就是61，因此长度最多记录到0xffff，但是经过测试后最大只能达到fffe，如果编译65535长度的字符串就会报错，但是实际上ffff并没有被使用到</p><ul style=\"box-sizing: border-box; margin-bottom: 16px; padding: 0px 0px 0px 2em; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\" class=\" list-paddingleft-2\"><li><p>为什么只有65534<br style=\"box-sizing: border-box;\"/>在Android的官方Dex文件格式的文档中，对MUTF-8编码有如下描述：</p></li></ul><blockquote style=\"box-sizing: border-box; margin: 0px 0px 16px; padding: 0px 15px 0px 20px; border-left: 4px solid rgb(221, 221, 221); font-family: Georgia, &quot;Times New Roman&quot;, Times, Kai, &quot;Kaiti SC&quot;, KaiTi, BiauKai, FontAwesome, serif; color: rgb(102, 102, 102); font-size: 14px; font-style: italic; white-space: normal;\"><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px;\">1）MUTF-8使用1到3个字节对UTF-16字符进行编码；</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px;\">2）对于数值为0的情况，使用两个字节对其进行编码（编码后的值为0xC0和0x80）；</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px;\">3）采用类似于c语言中的空字符串（NULL，单字节数值为0）作为字符串结尾的标志；</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">4）对于UTF-16码点范围在U+10000到U+10FFFF的情况（补充字符），数值对中的每一个数值采用3字节对其编码。也就是说，对于这种情况，表示一个字符总共需要使用6个字节。</p></blockquote><p style=\"box-sizing: border-box; margin-top: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal; margin-bottom: 0px !important;\">按照我的理解，也就是说最后一位需要是空字符串，所以最大长度只能为65535 - 1，但是java的String不像C一样字符串结尾使用\\0，但是这里确实找不到合理的解释，也希望看到这篇文章并且了解相关知识的能评论解答一下</p><p><br/></p>',1529493787,1,9,0,9,'fin棋','Java.lang基础'),(10,'2018-06-20/5b2a38ad72bb2.png','Java并发','<h2 id=\"h2-java-\" style=\"box-sizing: border-box; margin-right: 0px; margin-bottom: 16px; margin-left: 0px; font-size: 1.75em; padding-bottom: 0.3em; border-bottom: 1px solid rgb(238, 238, 238); position: relative; line-height: 1.225; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal; margin-top: 0px !important;\">java并发学习与总结</h2><h3 id=\"h3-u7EBFu7A0Bu5B89u5168u6027\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.5em; position: relative; line-height: 1.43; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"reference-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(65, 131, 196);\"></a>线程安全性</h3><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">在对一个类分析的时候，经常会碰到XX是不是线程安全的，那么线程安全的核心是<span style=\"box-sizing: border-box; font-weight: 700;\">正确性</span>，也就是说在多线程的环境下，代码能够正确执行并且按照规范得到想要的结果，那么这就是线程安全的。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">比如<code style=\"box-sizing: border-box; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; padding: 3px; color: rgb(199, 37, 78); background: rgb(246, 246, 246); white-space: pre-wrap; border-radius: 3px; margin: 0px 4px 0px 5px; border: 1px solid rgb(221, 221, 221); word-break: break-all !important;\">i++</code>这个操作，看起来是一句话，但实际上他是三个操作：读取i的值，将i的值加1，将加一后的值赋值给i，完成这个自增的操作。在单线程下，我们无需考虑这三步操作会出现什么情况，因为一定是顺序执行，不会有任何线程会干扰我们。但是在多线程下，一旦有两个以上的线程同时进行<code style=\"box-sizing: border-box; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; padding: 3px; color: rgb(199, 37, 78); background: rgb(246, 246, 246); white-space: pre-wrap; border-radius: 3px; margin: 0px 4px 0px 5px; border: 1px solid rgb(221, 221, 221); word-break: break-all !important;\">i++</code>的操作，那么很有可能是这样的<br style=\"box-sizing: border-box;\"/><img src=\"http://img.blog.csdn.net/20170805144350877?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYTYxMDYxNjg5OA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"这里写图片描述\" style=\"box-sizing: border-box; vertical-align: middle; border: 0px; max-width: 100%;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">在这种顺序下，A和B读取到的i是同一个值，因此他们执行结束后，i依然只被加了一次，这样这个程序的正确性就没有得到保证，因此不是线程安全的。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">这里类似于多进程中的安全问题，在进程对资源的访问，因为CPU调度而导致非原子操作被分到两次执行，可能也会导致执行结果的正确性得不到保证</p><h3 id=\"h3-u539Fu5B50u6027\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.5em; position: relative; line-height: 1.43; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"reference-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(65, 131, 196);\"></a>原子性</h3><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">原子性能够保证一个操作是线程安全的，因此原子性的操作要么完全执行，要么完全不执行，在这个操作中间可能会有一些同步的操作，来保证这个操作的原子性，但是调用者不用关心，对于他们来说，这一个操作就是一次完成的</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">java.util.concurrent.atomic包<br style=\"box-sizing: border-box;\"/>顾名思义，在并发包concurrent中的atomic包，atomic就指的是院子的，那么这个包中的就是可以保证原子操作的一些工具类，<br style=\"box-sizing: border-box;\"/>是一个小型工具包，支持单个变量上的无锁线程安全编程</p><table width=\"950\"><thead style=\"box-sizing: border-box;\"><tr style=\"box-sizing: border-box; background-color: rgb(248, 248, 248); border-top: 1px solid rgb(204, 204, 204);\" class=\"firstRow\"><th style=\"box-sizing: border-box; padding: 6px 13px; text-align: left; border-top-color: rgb(221, 221, 221);\">class</th><th style=\"box-sizing: border-box; padding: 6px 13px; text-align: left; border-top-color: rgb(221, 221, 221);\">description</th></tr></thead><tbody style=\"box-sizing: border-box;\"><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(204, 204, 204);\"><td style=\"box-sizing: border-box; padding: 6px 13px;\">AtomicBoolean</td><td style=\"box-sizing: border-box; padding: 6px 13px;\">一个 boolean值可以用原子更新。</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(248, 248, 248); border-top: 1px solid rgb(204, 204, 204);\"><td style=\"box-sizing: border-box; padding: 6px 13px;\">AtomicInteger</td><td style=\"box-sizing: border-box; padding: 6px 13px;\">可能原子更新的 int值。</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(204, 204, 204);\"><td style=\"box-sizing: border-box; padding: 6px 13px;\">AtomicIntegerArray</td><td style=\"box-sizing: border-box; padding: 6px 13px;\">一个 int数组，其中元素可以原子更新</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(248, 248, 248); border-top: 1px solid rgb(204, 204, 204);\"><td style=\"box-sizing: border-box; padding: 6px 13px;\">AtomicIntegerFieldUpdater</td><td style=\"box-sizing: border-box; padding: 6px 13px;\">基于反射的实用程序，可以对指定类的指定的 volatile int字段进行原子更新。</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(204, 204, 204);\"><td style=\"box-sizing: border-box; padding: 6px 13px;\">AtomicLong</td><td style=\"box-sizing: border-box; padding: 6px 13px;\">一个 long值可以用原子更新。</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(248, 248, 248); border-top: 1px solid rgb(204, 204, 204);\"><td style=\"box-sizing: border-box; padding: 6px 13px;\">AtomicLongArray</td><td style=\"box-sizing: border-box; padding: 6px 13px;\">可以 long地更新元素的 long数组。</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(204, 204, 204);\"><td style=\"box-sizing: border-box; padding: 6px 13px;\">AtomicLongFieldUpdater</td><td style=\"box-sizing: border-box; padding: 6px 13px;\">基于反射的实用程序，可以对指定类的指定的 volatile long字段进行原子更新。</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(248, 248, 248); border-top: 1px solid rgb(204, 204, 204);\"><td style=\"box-sizing: border-box; padding: 6px 13px;\">AtomicMarkableReference</td><td style=\"box-sizing: border-box; padding: 6px 13px;\">AtomicMarkableReference维护一个对象引用以及可以原子更新的标记位。</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(204, 204, 204);\"><td style=\"box-sizing: border-box; padding: 6px 13px;\">AtomicReference</td><td style=\"box-sizing: border-box; padding: 6px 13px;\">可以原子更新的对象引用。</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(248, 248, 248); border-top: 1px solid rgb(204, 204, 204);\"><td style=\"box-sizing: border-box; padding: 6px 13px;\">AtomicReferenceArray</td><td style=\"box-sizing: border-box; padding: 6px 13px;\">可以以原子方式更新元素的对象引用数组。</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(204, 204, 204);\"><td style=\"box-sizing: border-box; padding: 6px 13px;\">AtomicReferenceFieldUpdater</td><td style=\"box-sizing: border-box; padding: 6px 13px;\">一种基于反射的实用程序，可以对指定类的指定的 volatile volatile引用原子更新。</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(248, 248, 248); border-top: 1px solid rgb(204, 204, 204);\"><td style=\"box-sizing: border-box; padding: 6px 13px;\">AtomicStampedReference</td><td style=\"box-sizing: border-box; padding: 6px 13px;\">AtomicStampedReference维护对象引用以及可以原子更新的整数“印记”。</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(204, 204, 204);\"><td style=\"box-sizing: border-box; padding: 6px 13px;\">DoubleAccumulator</td><td style=\"box-sizing: border-box; padding: 6px 13px;\">一个或多个变量一起维护使用提供的功能更新的运行的值 double 。</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(248, 248, 248); border-top: 1px solid rgb(204, 204, 204);\"><td style=\"box-sizing: border-box; padding: 6px 13px;\">DoubleAdder</td><td style=\"box-sizing: border-box; padding: 6px 13px;\">一个或多个变量一起保持初始为零 double和。</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(204, 204, 204);\"><td style=\"box-sizing: border-box; padding: 6px 13px;\">LongAccumulator</td><td style=\"box-sizing: border-box; padding: 6px 13px;\">一个或多个变量，它们一起保持运行 long使用所提供的功能更新值。</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(248, 248, 248); border-top: 1px solid rgb(204, 204, 204);\"><td style=\"box-sizing: border-box; padding: 6px 13px;\">LongAdder</td><td style=\"box-sizing: border-box; padding: 6px 13px;\">一个或多个变量一起保持初始为零 long总和。</td></tr></tbody></table><p><br/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">使用这个工具包中的类，可以实现我们上述的i++的原子操作：</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">AtomicInteger&nbsp;i&nbsp;=&nbsp;new&nbsp;AtomicInteger();\r\ni.incrementAndGet();</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">这样子，返回值就是自增后的值，而又能保证原子性</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">在java并发编程实战中也提到了：</p><blockquote style=\"box-sizing: border-box; margin: 0px 0px 16px; padding: 0px 15px 0px 20px; border-left: 4px solid rgb(221, 221, 221); font-family: Georgia, &quot;Times New Roman&quot;, Times, Kai, &quot;Kaiti SC&quot;, KaiTi, BiauKai, FontAwesome, serif; color: rgb(102, 102, 102); font-size: 14px; font-style: italic; white-space: normal;\"><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">在实际情况中，应尽可能地使用现有的线程安全对象（例如AcomicLong）来管理类的状态，与非线程安全的对象相比，判断线程安全对象的可能状态及其状态转换情况要更为容易，从而也更容易维护和验证线程安全性</p></blockquote><h3 id=\"h3-synchronized-\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.5em; position: relative; line-height: 1.43; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"reference-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(65, 131, 196);\"></a>synchronized关键字</h3><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">java提供了一种内置的锁机制来支持原子性：同步代码块（synchronized block）。这种属于互斥锁，同一时间有且只有一个线程可以进入同步代码块中执行，</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">使用方法：<br style=\"box-sizing: border-box;\"/>①标记方法</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">public&nbsp;sychronized&nbsp;void&nbsp;do(){...}</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">经过这个关键字标记的方法，当有线程在其中执行时，其他线程的请求都会被阻塞，直到该线程离开此代码块，将会释放其他线程，随机选择一个线程进入代码块</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">②锁Class代码块</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">//在方法体中需要加锁的代码：\r\nsychronized（lock）{\r\n}</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">其中的lock可以是Class对象，可以是任意的java对象，因为任意java对象都是可以用作一个实现同步的锁，但是在静态代码块中，就要使用Class对象来进行，非静态可以使用this来做同步锁</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">可重入性：<br style=\"box-sizing: border-box;\"/>假如一个线程试图进入一个加过同步锁的方法，而这个方法的锁由自己持有，那么他就会成功获得进入的许可，因为内置的同步锁的操作粒度是“线程”，通过为每个锁关联一个获取技术值和所有者线程的记录来进行的，当被调用后，会将调用线程和计数记录下来，因此当同一个线程请求，这种方法就会允许进入，可以防止请求自己所持有的锁而导致的死锁</p><h3 id=\"h3-volatile-\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.5em; position: relative; line-height: 1.43; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"reference-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(65, 131, 196);\"></a>Volatile关键字</h3><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">Volatile关键字修饰的变量会被认为是共享变量，在编译期运行的时候会主要的这个变量是共享的，去解决编译器的重排序问题而导致的不可见性，那什么叫不可见性</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">public&nbsp;class&nbsp;NoVisibility{\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;boolean&nbsp;ready;\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;int&nbsp;number;\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;class&nbsp;ReaderThread&nbsp;extends&nbsp;Thread{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;run(){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(!ready)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Thread.yield();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(number);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;new&nbsp;ReaderThread().start();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;number&nbsp;=&nbsp;42;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ready&nbsp;=&nbsp;true;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">这段代码会有三种运行可能：<br style=\"box-sizing: border-box;\"/>① 大多数正常运行，输出42（我测试了许多次都是42）<br style=\"box-sizing: border-box;\"/>② 输出0，ready被设置为true后，线程输出number的值，但是由于内存<span style=\"box-sizing: border-box; font-weight: 700;\">重排序</span>，number在ready后执行而导致线程对ready的改变不可见，输出原来的0<br style=\"box-sizing: border-box;\"/>③ 无限循环，ReaderThread线程获得ready的副本为false，在main线程中ready设为true，但是读线程可能永远看不到这个改变</p><p style=\"box-sizing: border-box; margin-top: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal; margin-bottom: 0px !important;\">第二三种的不可见的问题。。。说实话我没遇见过，自己去测试生成了10000条线程，依然没有遇到过，出现在修改了缓存而延迟修改主存导致的其他线程对该变量的不可见。这个应该是属于编译器的问题，使用volatile可以防止这种问题的出现</p><p><br/></p>',1529493677,1,10,0,10,'fin棋','Java.lang基础'),(11,'2018-06-20/5b2a3762ad90e.jpg','java第一次实验心得','<h1 id=\"h1-u7B2Cu4E00u6B21u5B9Eu9A8Cu5FC3u5F97u4F53u4F1A\" style=\"box-sizing: border-box; margin-right: 0px; margin-bottom: 16px; margin-left: 0px; font-size: 2.25em; padding-bottom: 0.3em; border-bottom: 1px solid rgb(238, 238, 238); position: relative; line-height: 1.2; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal; margin-top: 0px !important;\">第一次实验心得体会</h1><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">本次实验收获还是挺大的，能够更加熟练地去编写java的代码，对java有了更深的了解。</p><h2 id=\"h2-u6587u4EF6u8BFBu53D6u548Cu5199u5165\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.75em; padding-bottom: 0.3em; border-bottom: 1px solid rgb(238, 238, 238); position: relative; line-height: 1.225; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"reference-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(65, 131, 196);\"></a>文件读取和写入</h2><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">以前未接触过的关于文件的读取和写入，这次熟悉了通过BufferedReader和BufferedWriter类分别来读取和写入txt文件，最初我卡在了无法将string数组和StockInfo数组的相接，后来想起了二维数组，又建了一个element数组来存取每一条信息的各个数据</p><h2 id=\"h2-u63A5u53E3u7684u5B9Eu73B0\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.75em; padding-bottom: 0.3em; border-bottom: 1px solid rgb(238, 238, 238); position: relative; line-height: 1.225; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"reference-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(65, 131, 196);\"></a>接口的实现</h2><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">这是我第一次接触到接口这个概念，发现接口出乎意料的很方便，它类似于C++中的抽象类，不可以对接口进行实例化，也不可以在接口中定义函数，必须通过在类中实现接口的函数体，这样的好处在于实现java的多态性，在许多程序中，使用接口能大大地简化程序的复杂程度<br style=\"box-sizing: border-box;\"/>3、以前一直不知道main函数的参数中的args的用处是什么，通过这次实验才清楚，它是在控制台中输入的参数变量，通过在网上查找资料清楚了args数组元素的具体使用方法</p><h2 id=\"h2-u6392u5E8Fu65B9u9762\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.75em; padding-bottom: 0.3em; border-bottom: 1px solid rgb(238, 238, 238); position: relative; line-height: 1.225; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"reference-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(65, 131, 196);\"></a>排序方面</h2><p style=\"box-sizing: border-box; margin-top: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal; margin-bottom: 0px !important;\">以前一直只会冒泡排序，但是在实验过程中，感谢学长指出我的问题，这才发现我的冒泡排序实际上是存在问题的，最后得以正确使用冒泡排序；同时，了解了其他的几种排序方法，冒泡排序只是最基础时间复杂度很大的一种排序，相比之下，快速排序法所实现的时间远远低于冒泡排序。最后，我通过学习，实现了两种排序方法，即插入排序和冒泡排序，但是感觉快速排序和归并排序才是最重要的，下来我也会把这两种排序法学习掌握了。</p><p><br/></p>',1529493346,1,11,0,11,'程志强-272','Java基础实验'),(12,'2018-06-20/5b2a3632577d4.jpg','AOP-面向切面编程','<h2 id=\"h2-aop\" style=\"box-sizing: border-box; margin-right: 0px; margin-bottom: 16px; margin-left: 0px; font-size: 1.75em; padding-bottom: 0.3em; border-bottom: 1px solid rgb(238, 238, 238); position: relative; line-height: 1.225; margin-top: 0px !important;\">AOP</h2><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px;\">AOP是目前一个比较热门的话题，AOP为Aspect Oriented Programming的缩写，译作：“面向切面编程”。AOP实际是GoF设计模式的延续，设计模式孜孜不倦追求的是调用者和被调用者之间的解耦,提高代码的灵活性和可扩展性，AOP可以说也是这种目标的一种实现。</p><h3 id=\"h3-aop-\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.5em; position: relative; line-height: 1.43;\"><a class=\"reference-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background: 0px 0px; color: rgb(65, 131, 196);\"></a>AOP到底是什么？</h3><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px;\">面向切面编程，切面，这个东西我的理解更像是流水线中的一个环节，不知道有没有过这种感受。我们写好的代码，突然需要加入一个鉴别用户是否登录，再决定是否要给用户提供服务，那么应该怎么做？ 我们去到每个代码块，在每个方法的第一行加入一行取session查看是否登录的判断语句。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px;\">这个时候问题就来了，这种登录验证的代码重复出现在了多个代码中，与实现了业务逻辑的方法体产生了耦合，那么我们改用另一种方法，我们把这个代码提取出来写成一个函数，然后把代码原来的位置改成这个方法的调用，不就解决了吗？</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px;\">然而并不行，因为这样仍然存在耦合，只不过看起来清爽了很多，但是下一个新的业务也许又要调用一遍这个方法。而问题就在这里，有些系统级的逻辑，比如日志、用户身份、事务管理等这种每个类都需要依赖的办法，会导致我们的方法越来越臃肿，而写一个业务逻辑代码反而会产生很多与业务无关的代码在其中。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px;\">AOP就是解决这个问题而存在的。如果我们把M作为我们的业务，abc作为上述的日志、用户身份、事务管理，那么传统的写法可能就是abcM，而面向切面编程就是让我们这么做：<br style=\"box-sizing: border-box;\"/>abc|M，我们把M单独切出来，只写M，然后再写好abc，等到运行的时候，把abc再和M全部连在一起。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px;\">我们可以举一个比方。上个Ioc我们用了保姆和我的例子，通过做饭来告诉大家什么叫Ioc，那么今天我们就还是用类似的办法让大家理解什么是AOP。</p><h3 id=\"h3-aop-\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.5em; position: relative; line-height: 1.43;\"><a class=\"reference-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background: 0px 0px; color: rgb(65, 131, 196);\"></a>AOP，一句话，就是：做自己喜欢的事。</h3><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px;\">传统OOP：小时候喜欢吃蛋白，不喜欢吃蛋黄，但是因为蛋黄的存在导致我不喜欢吃鸡蛋。另一方面，每次吃鸡蛋还要剥壳，还特别麻烦，因此每次不管鸡蛋还是鸭蛋，看到那壳和里面干巴巴的蛋黄就一点兴趣都没有。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px;\">改良版AOP：小时候喜欢吃蛋白（Target目标，做爱做的事），每次桌子上都会有很多鸭蛋白、鸡蛋白（Aspect方面），而吃之前（Advice通知）的剥壳（连接点），和蛋黄都没有了，后来长大了，才知道每次妈妈煮完鸡蛋都会帮我把壳和蛋黄拿掉（Introduction引入），然后看着我吃完喜欢吃的蛋白。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px;\">可以看出来，AOP做的就是让我们做自己喜欢的事情，不管是什么蛋，都会把壳去掉，让我不需要关心这些影响我吃鸡蛋的事情，而我只需要知道怎么吃鸡蛋就好了，这整个一件事情发生是完整的，包含剥壳 + 吃的动作，但是在我的眼里，只有吃这一个过程，那么这个吃就是完整过程中的一个切面，而我只用关注着一个切面就好了，这就是面向切面编程，也许完成的一次过程包含abcdefgM，但是abcdefg都不归我管，我只喜欢做M，那么我就只做M这件事，而徐志远喜欢做N，那么他就只做N这件事，而每次需要叫我做事，都会先经历abcdefM，而叫徐志远做事，则是abcdefgN，但是在我们两个的眼中只有M和N</p><h3 id=\"h3-spring-aop\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.5em; position: relative; line-height: 1.43;\"><a class=\"reference-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background: 0px 0px; color: rgb(65, 131, 196);\"></a>Spring——AOP</h3><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px;\">Spring中AOP的实现，接触的比较多的便是所谓的Interceptor（拦截器）</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px;\">拦截器需要实现HandlerInterceptor，这是一个方法拦截器，有三个需要实现的方法：</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">boolean&nbsp;preHandle(HttpServletRequest&nbsp;var1,&nbsp;HttpServletResponse&nbsp;var2,&nbsp;Object&nbsp;var3)&nbsp;throws&nbsp;Exception;\r\n\r\nvoid&nbsp;postHandle(HttpServletRequest&nbsp;var1,&nbsp;HttpServletResponse&nbsp;var2,&nbsp;Object&nbsp;var3,&nbsp;ModelAndView&nbsp;var4)&nbsp;throws&nbsp;Exception;\r\n\r\nvoid&nbsp;afterCompletion(HttpServletRequest&nbsp;var1,&nbsp;HttpServletResponse&nbsp;var2,&nbsp;Object&nbsp;var3,&nbsp;Exception&nbsp;var4)&nbsp;throws&nbsp;Exception;</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px;\">这三个方法，根据名字就能看出来，是对应着一次调用的三个阶段。<br style=\"box-sizing: border-box;\"/>分别是：调用handler前，handler执行后，调用完成<br style=\"box-sizing: border-box;\"/>这就是一种AOP实现，在我们的控制器中，我们实际上写的是一个业务的逻辑，可是，在拦截器里，定义了这三个方法，那么实际运行的时候：</p><h3 id=\"h3-prehandler\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.5em; position: relative; line-height: 1.43;\"><a rel=\"nofollow\" style=\"box-sizing: border-box; background: 0px 0px; color: rgb(65, 131, 196);\" name=\"preHandler\"></a>preHandler</h3><h3 id=\"h3-controller\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.5em; position: relative; line-height: 1.43;\"><a rel=\"nofollow\" style=\"box-sizing: border-box; background: 0px 0px; color: rgb(65, 131, 196);\" name=\"controller\"></a>controller</h3><h3 id=\"h3-posthandler\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.5em; position: relative; line-height: 1.43;\"><a rel=\"nofollow\" style=\"box-sizing: border-box; background: 0px 0px; color: rgb(65, 131, 196);\" name=\"postHandler\"></a>postHandler</h3><h3 id=\"h3-aftercompletion\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.5em; position: relative; line-height: 1.43;\"><a rel=\"nofollow\" style=\"box-sizing: border-box; background: 0px 0px; color: rgb(65, 131, 196);\" name=\"afterCompletion\"></a>afterCompletion</h3><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px !important;\">是这样运行的，拦截器引入到我们所谓的控制器（切面）的不同阶段，当控制器需要被调用的时候，就必须要经过preHandler这个阶段（剥壳），那么controller做完爱做的事情（吃蛋白），又要调用postHandler和afterCompletion（丢掉），这就是面向切面编程。Controller不需要设计系统逻辑，只需要去完成自己要做的业务逻辑，而一切包括用户身份、事务管理等交由拦截器来做，就是一种AOP的思想。</p><p><span data-url=\"/experience/like/547012aff84d4618a0eb1decf5e7773c.json\" class=\"am-icon-thumbs-up am-text-lg am-text-green am-cursor-default\" id=\"like\" style=\"box-sizing: border-box; display: inline-block; font-size: 1.8rem; color: rgb(10, 143, 115); cursor: default;\"></span>&nbsp;<span class=\"am-text-sm am-text-green\" style=\"box-sizing: border-box; font-size: 1.4rem; color: rgb(10, 143, 115);\">点赞数&nbsp;<span data-count=\"0\" style=\"box-sizing: border-box;\">0</span></span></p><p><br/></p>',1529493042,1,15,1,12,'fin棋','Java.lang基础'),(13,'2018-06-20/5b2a34e20ea2e.png','IOC-控制反转','<h2 id=\"h2-spring-ioc-\" style=\"box-sizing: border-box; margin-right: 0px; margin-bottom: 16px; margin-left: 0px; font-size: 1.75em; padding-bottom: 0.3em; border-bottom: 1px solid rgb(238, 238, 238); position: relative; line-height: 1.225; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal; margin-top: 0px !important;\">Spring —— IOC控制反转</h2><h3 id=\"h3--ioc\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.5em; position: relative; line-height: 1.43; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"reference-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(65, 131, 196);\"></a>什么是IoC</h3><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">一般的编程中，对于一个对象A，如果要使用A中的方法或属性，那么是需要手动进行初始化这个对象的，比如Interface A = new InterfaceImpl();来进行初始化，也可以通过JNDI的命名接口来得到，使用结束后对象A跟随被销毁或随着生命周期的结束而结束，但是这个对象始终会和其他的接口或者类耦合起来。类似于做饭，我需要自己去市场买菜，洗菜、烧水、做饭，炒菜，端到桌子上来，吃完，丢掉，完成一顿晚饭。<br style=\"box-sizing: border-box;\"/>而IoC做了什么呢？类似一个保姆，我们在出门之前告诉他，今天我11点半回家，然后我想吃芹菜炒肉，然后我们就可以走了，11点半的时候回家，保姆就把菜已经做好放在桌子上，我们吃完，睡午觉，继续去写代码，如果菜不好吃，那么我们也不必自己去扔，只需要跑出一个异常，保姆就会处理。<br style=\"box-sizing: border-box;\"/>程序员要做的，就只是在代码中告诉IoC这里需要什么，在什么时候要拿他做什么，不需要去关系这个对象的生命周期或者说要如何实例化它</p><h3 id=\"h3-spring-ioc\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.5em; position: relative; line-height: 1.43; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(65, 131, 196);\" name=\"Spring-IoC\"></a>Spring-IoC</h3><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">SpringIoC主要利用依赖注入来实现的，用户针对接口编程，而等运行期，框架再根据定义的注入方式，将对象在合理的时间生成后‘注入’到调用的地方，将用户对于对象的控制权交由spring，就是控制反转IoC，而spring控制的方式就是将适合的对象注入到调用的位置，实现功能。类似于上面的例子，spring做的只是按时把饭做好，放到桌子上，这就是注入，而我在早上就已经定义好了11点半要去吃饭，至于什么饭，是我提前交代给保姆的，然后保姆就利用这段时间把饭做好，放到桌子上。我把做饭、丢垃圾的这些工作交给保姆，就是所谓的控制反转，保姆做饭放到桌子上，就是依赖注入。</p><h3 id=\"h3-spring-\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.5em; position: relative; line-height: 1.43; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"reference-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(65, 131, 196);\"></a>Spring依赖注入的形式</h3><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">1、 构造器注入：<br style=\"box-sizing: border-box;\"/>这是最简单也最好懂的一种模式。<br style=\"box-sizing: border-box;\"/>首先我们定义个接口</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">public&nbsp;interface&nbsp;Lunch{\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;eat();\r\n}</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">是一顿午餐</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">&nbsp;public&nbsp;class&nbsp;GoodMeal&nbsp;implements&nbsp;lunch{\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Override\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;eat(){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;emm...good!\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">这是我们的一顿美味</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">public&nbsp;class&nbsp;BadFood&nbsp;implements&nbsp;Lunch{\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;@Override\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;eat()&nbsp;throws&nbsp;WTFException{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throws&nbsp;new&nbsp;WTFException();\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">这个就是一顿糟糕的饭</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">传统的：</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">public&nbsp;class&nbsp;Man{\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;Lunch&nbsp;lunch;\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;Man(int&nbsp;type)&nbsp;throws&nbsp;WTFException{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(type==1){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lunch&nbsp;=&nbsp;new&nbsp;GoodMeal();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}else{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lunch&nbsp;=&nbsp;new&nbsp;BadFood();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">我们会因为一些因素而按部就班去做饭，去炒菜，可能好吃，也可能不好吃（对于我这是不存在的），但是你始终需要去做很多事情，比如初始化，比如销毁等等等等。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">Ioc构造器注入：</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">public&nbsp;class&nbsp;HouseKeeper{\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;Man&nbsp;boss&nbsp;=&nbsp;new&nbsp;Man();\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;ir(今天老板骂我了){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;new&nbsp;Man(new&nbsp;BadFood());\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;if(今天老板给我加工资了){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;new&nbsp;Man(new&nbsp;GoodMeal);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">首先我们需要一个保姆（当然）。<br style=\"box-sizing: border-box;\"/>然后由保姆做饭来决定今天吃什么<br style=\"box-sizing: border-box;\"/>那么我们的吃就可以这么改</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">public&nbsp;class&nbsp;Man{\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;Lunch&nbsp;lunch;\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;Man(Lunch&nbsp;lunch)&nbsp;throws&nbsp;WTFException{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.lunch&nbsp;=&nbsp;lunch;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lunch.eat;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">我们只需要告诉spring，我们需要一顿饭，并且要调用eat这个方法，那么具体注入进来的是什么，不由这个类决定，就是所谓的控制反转。那么何时注入，由保姆决定，保姆根据某些条件（预先定义，比如周一吃鱼，周二吃鸟）来决定注入什么，这就是依赖注入。上面这个例子就是简单的构造器注入。<br style=\"box-sizing: border-box;\"/>——如果你还不明白，我选择放弃</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">2、 Setter注入<br style=\"box-sizing: border-box;\"/>这个我觉得蛮简单的，估计不用说你们也会了，举一反三和上面构造器是一样的，setter本身就是干这个的</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">3、 自动装配<br style=\"box-sizing: border-box;\"/>这个就厉害了，上面的两种虽然方便，但是使用起来还是有些不爽，自动装配则是通过我们自己定义在配置文件中的bean标签来实现，可以通过名称、数据类型、等配置方法来进行自动装配。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\"><br style=\"box-sizing: border-box;\"/>这样spring就能自动找到所有名称为lunch的变量，然后装配为GoodMeat的对象，实现依赖注入，而autowired则是指明通过名称或者通过类型来进行注入。<br style=\"box-sizing: border-box;\"/>当然也可以通过<a href=\"https://github.com/Autowired\" class=\"at-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-decoration-line: none; color: rgb(65, 131, 196);\">@Autowired</a>来进行注解，注解了这个的变量，无需写setter和getter，就可以自动装配生成对象，或者使用<a href=\"https://github.com/Resource\" class=\"at-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-decoration-line: none; color: rgb(65, 131, 196);\">@Resource</a>来标注，<a href=\"https://github.com/Autowired\" class=\"at-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-decoration-line: none; color: rgb(65, 131, 196);\">@Autowired</a>注解按照类型装配对象，结合注解<a href=\"https://github.com/Qualifier\" class=\"at-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-decoration-line: none; color: rgb(65, 131, 196);\">@Qualifier</a>可以一起使用，而<a href=\"https://github.com/Resource\" class=\"at-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-decoration-line: none; color: rgb(65, 131, 196);\">@Resource</a>则是通过byName来装配，但是都能够达到我们的要求。</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">&lt;bean&nbsp;id=”lunch”&nbsp;class=”com.lunch.GoodMeat”&nbsp;autowired=”byName”&gt;&nbsp;&lt;/bean&gt;</pre><p style=\"box-sizing: border-box; margin-top: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal; margin-bottom: 0px !important;\">自动装配bean中的autowired属性：<br style=\"box-sizing: border-box;\"/>byName:根据名称注入，也就是说会去寻找所有名称为指明id的所有对象然后注入对应的class实例<br style=\"box-sizing: border-box;\"/>byType：根据类型注入，根据配置的class属性去寻找，也就是<a href=\"https://github.com/Autowired\" class=\"at-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-decoration-line: none; color: rgb(65, 131, 196);\">@Autowired</a>的作用<br style=\"box-sizing: border-box;\"/>no：不支持自动装配，采用手动装配<br style=\"box-sizing: border-box;\"/>default：表示默认采用上一级标签的自动装配的取值。如果存在多个配置文件的话，那么每一个配置文件的自动装配方式都是独立的。<br style=\"box-sizing: border-box;\"/>Constructor：使用构造器注入方式注入<br style=\"box-sizing: border-box;\"/>Autodetect：自动选择：如果对象没有无参数的构造方法，那么自动选择constructor的自动装配方式进行构造注入。如果对象含有无参数的构造方法，那么自动选择byType的自动装配方式进行setter注入。</p><p><br/></p>',1529492706,1,17,1,13,'fin棋 ','Java.lang基础');
INSERT INTO `x_lannouncement` VALUES (14,'2018-06-20/5b2a344d041c3.png','Java基础-修饰符','<h2 id=\"h2--\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.75em; padding-bottom: 0.3em; border-bottom: 1px solid rgb(238, 238, 238); position: relative; line-height: 1.225; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\">一、修饰符是什么</h2><blockquote style=\"box-sizing: border-box; margin: 0px 0px 16px; padding: 0px 15px 0px 20px; border-left: 4px solid rgb(221, 221, 221); font-family: Georgia, &quot;Times New Roman&quot;, Times, Kai, &quot;Kaiti SC&quot;, KaiTi, BiauKai, FontAwesome, serif; color: rgb(102, 102, 102); font-size: 14px; font-style: italic; white-space: normal;\"><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">修饰符用来修饰类、方法或者变量。可以使用访问修饰符来保护对类、变量、方法和构造方法的访问，也可以使用其他非访问修饰符来实现一些其他功能。</p></blockquote><h2 id=\"h2--\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.75em; padding-bottom: 0.3em; border-bottom: 1px solid rgb(238, 238, 238); position: relative; line-height: 1.225; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"reference-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(65, 131, 196);\"></a>二、修饰符分类</h2><h3 id=\"h3-2-1-\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.5em; position: relative; line-height: 1.43; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"reference-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(65, 131, 196);\"></a>2.1 访问修饰符</h3><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">访问修饰符用于确定其他类是否可以使用特定字段或调用特定方法。</p><blockquote style=\"box-sizing: border-box; margin: 0px 0px 16px; padding: 0px 15px 0px 20px; border-left: 4px solid rgb(221, 221, 221); font-family: Georgia, &quot;Times New Roman&quot;, Times, Kai, &quot;Kaiti SC&quot;, KaiTi, BiauKai, FontAwesome, serif; color: rgb(102, 102, 102); font-size: 14px; font-style: italic; white-space: normal;\"><ul style=\"box-sizing: border-box; padding: 0px 0px 0px 2em;\" class=\" list-paddingleft-2\"><li><p>public：表示任何类均可访问。</p></li><li><p>default：缺省，即什么都不写。表示在同一个包的类均可访问。</p></li><li><p>protected：表示同一个包的类均可访问，其他包中该类的子类也可以访问。</p></li><li><p>private：表示直有该类自己可以访问。</p></li></ul></blockquote><table width=\"950\"><thead style=\"box-sizing: border-box;\"><tr style=\"box-sizing: border-box; background-color: rgb(248, 248, 248); border-top: 1px solid rgb(204, 204, 204);\" class=\"firstRow\"><th style=\"box-sizing: border-box; padding: 6px 13px; text-align: center; border-top-color: rgb(221, 221, 221);\">修饰符</th><th style=\"box-sizing: border-box; padding: 6px 13px; text-align: center; border-top-color: rgb(221, 221, 221);\">类</th><th style=\"box-sizing: border-box; padding: 6px 13px; text-align: center; border-top-color: rgb(221, 221, 221);\">包</th><th style=\"box-sizing: border-box; padding: 6px 13px; text-align: center; border-top-color: rgb(221, 221, 221);\">子类</th><th style=\"box-sizing: border-box; padding: 6px 13px; text-align: center; border-top-color: rgb(221, 221, 221);\">外部</th></tr></thead><tbody style=\"box-sizing: border-box;\"><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(204, 204, 204);\"><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">public</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(248, 248, 248); border-top: 1px solid rgb(204, 204, 204);\"><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">protected</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">N</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(204, 204, 204);\"><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">default</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">N</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">N</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(248, 248, 248); border-top: 1px solid rgb(204, 204, 204);\"><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">private</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">N</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">N</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">N</td></tr></tbody></table><h3 id=\"h3-2-2-\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.5em; position: relative; line-height: 1.43; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"reference-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(65, 131, 196);\"></a>2.2 非访问修饰符</h3><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">非访问修饰符用于实现一些特定的功能。<br style=\"box-sizing: border-box;\"/>以下是非访问修饰符的一些简要介绍，*表示较少使用。</p><ul style=\"box-sizing: border-box; margin-bottom: 16px; padding: 0px 0px 0px 2em; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\" class=\" list-paddingleft-2\"><li><p style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 16px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">static</span></p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 16px;\">静态变量<br style=\"box-sizing: border-box;\"/>static用来修饰一个类变量时，该类变量被称为静态变量。静态变量表示无论一个类实例化多少对象，它的静态变量只有一份拷贝。另外局部变量不能够被static修饰。</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">&nbsp;&nbsp;public&nbsp;class&nbsp;StaticTest1&nbsp;{\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;int&nbsp;DEFAULT_VALUE&nbsp;=&nbsp;1;\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//[out]:&nbsp;1\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(StaticTest1.DEFAULT_VALUE);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//[error]:&nbsp;modifier&nbsp;&#39;static&#39;&nbsp;not&nbsp;allowed&nbsp;here\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//static&nbsp;int&nbsp;i&nbsp;=&nbsp;1;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;}</pre></li><li><p style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 16px;\">静态方法<br style=\"box-sizing: border-box;\"/>static用来修饰一个类方法时，该类方法被称为静态方法。静态方法表示该方法属于声明它的类。</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">public&nbsp;class&nbsp;StaticTest2&nbsp;{\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;String&nbsp;staticMethodName()&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;&quot;static&nbsp;method&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//[out]:&nbsp;static&nbsp;method\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(StaticTest2.staticMethodName());\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;StaticTest2&nbsp;s&nbsp;=&nbsp;new&nbsp;StaticTest2();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//[out]:&nbsp;static&nbsp;method\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//[hint]:&nbsp;static&nbsp;member&nbsp;accessed&nbsp;via&nbsp;instance&nbsp;reference\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(s.staticMethodName());\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre></li></ul><li><p style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 16px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">final</span></p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 16px;\">final变量<br style=\"box-sizing: border-box;\"/>final 变量能被显式地初始化并且只能初始化一次。被声明为 final 的对象的引用不能指向不同的对象。但是 final 对象里的数据可以被改变。也就是说 final 对象的引用不能改变，但是里面的值可以改变。</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">public&nbsp;class&nbsp;FinalTest1&nbsp;{\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;final&nbsp;int&nbsp;i&nbsp;=&nbsp;1;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//[error]:&nbsp;cannot&nbsp;assign&nbsp;a&nbsp;value&nbsp;to&nbsp;final&nbsp;variable&nbsp;&#39;i&#39;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//i&nbsp;=&nbsp;2;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre></li><li><p>final方法<br style=\"box-sizing: border-box;\"/>final方法可以被子类继承，但是不能被子类修改。</p></li><li><p>final类<br style=\"box-sizing: border-box;\"/>final类不能够被继承。</p></li></ul><li><p style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 16px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">abstract</span></p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 16px;\">抽象方法<br style=\"box-sizing: border-box;\"/>抽象方法是一种没有任何实现的方法，该方法的的具体实现由子类提供。</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">public&nbsp;abstract&nbsp;class&nbsp;AbstractTest1&nbsp;{\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;nonAbstractMethod()&nbsp;{}\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;abstract&nbsp;void&nbsp;abstractMethod();\r\n\r\n}</pre></li><li><p>抽象类<br style=\"box-sizing: border-box;\"/>抽象类不能用来实例化对象，声明抽象类的唯一目的是为了将来对该类进行扩充。另外抽象类中允许存在非抽象的方法。</p></li></ul><li><p><span style=\"box-sizing: border-box; font-weight: 700;\">synchronized</span></p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>synchronized声明的方法同一时间只能被一个线程访问。也就是说如果某一个任务处于对一个synchronized方法的调用中，那么在这个线程从该方法返回前，其他所有调用该类中任何标记为synchronized方法的线程都会被阻塞。</p></li></ul><li><p><span style=\"box-sizing: border-box; font-weight: 700;\">volatile</span></p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>volatile确保了应用中的可视性，如果一个域被声明为volatile的，那么只要对这个域产生了写操作，那么所有的读操作就都可以看到这个修改。<br style=\"box-sizing: border-box;\"/>但是值得注意的是，使用volatile而不是synchronized的唯一安全的情况是类中只有一个可变域。所以第一选择应该是synchronized，这是最安全的方式。</p></li></ul><li><p><span style=\"box-sizing: border-box; font-weight: 700;\">transient*</span></p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>序列化的对象包含被 transient 修饰的实例变量时，java 虚拟机(JVM)跳过该特定的变量。<br style=\"box-sizing: border-box;\"/>简而言之就是被transient修饰的实例变量，不会被序列化与反序列化。</p></li></ul><li><p><span style=\"box-sizing: border-box; font-weight: 700;\">native*</span></p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>native关键字说明其修饰的方法是一个原生态方法，方法对应的实现不是在当前文件，而是在用其他语言（如C和C++）实现的文件中。</p></li></ul><li><p><span style=\"box-sizing: border-box; font-weight: 700;\">strictfp*</span></p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>strictfp代表FP-strict，表明精确浮点数。<br style=\"box-sizing: border-box;\"/>使用了strictfp来声明一个 类、接口或者方法时，那么所声明的范围内Java的编译器以及运行环境会完全依照浮点规范IEEE-754来执行。因此如果你想让你的浮点运算更加精确， 而且不会因为不同的硬件平台所执行的结果不一致的话，那就请用关键字strictfp。</p></li></ul></ul><h2 id=\"h2--\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.75em; padding-bottom: 0.3em; border-bottom: 1px solid rgb(238, 238, 238); position: relative; line-height: 1.225; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"reference-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(65, 131, 196);\"></a>三、修饰符的使用</h2><h3 id=\"h3-3-1-\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.5em; position: relative; line-height: 1.43; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"reference-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(65, 131, 196);\"></a>3.1 使用范围</h3><table width=\"950\"><thead style=\"box-sizing: border-box;\"><tr style=\"box-sizing: border-box; background-color: rgb(248, 248, 248); border-top: 1px solid rgb(204, 204, 204);\" class=\"firstRow\"><th style=\"box-sizing: border-box; padding: 6px 13px; text-align: center; border-top-color: rgb(221, 221, 221);\">-</th><th style=\"box-sizing: border-box; padding: 6px 13px; text-align: center; border-top-color: rgb(221, 221, 221);\">public</th><th style=\"box-sizing: border-box; padding: 6px 13px; text-align: center; border-top-color: rgb(221, 221, 221);\">protected</th><th style=\"box-sizing: border-box; padding: 6px 13px; text-align: center; border-top-color: rgb(221, 221, 221);\">private</th><th style=\"box-sizing: border-box; padding: 6px 13px; text-align: center; border-top-color: rgb(221, 221, 221);\">static</th><th style=\"box-sizing: border-box; padding: 6px 13px; text-align: center; border-top-color: rgb(221, 221, 221);\">final</th><th style=\"box-sizing: border-box; padding: 6px 13px; text-align: center; border-top-color: rgb(221, 221, 221);\">abstract</th><th style=\"box-sizing: border-box; padding: 6px 13px; text-align: center; border-top-color: rgb(221, 221, 221);\">synchronized</th><th style=\"box-sizing: border-box; padding: 6px 13px; text-align: center; border-top-color: rgb(221, 221, 221);\">volatile</th><th style=\"box-sizing: border-box; padding: 6px 13px; text-align: center; border-top-color: rgb(221, 221, 221);\">transient</th><th style=\"box-sizing: border-box; padding: 6px 13px; text-align: center; border-top-color: rgb(221, 221, 221);\">native</th><th style=\"box-sizing: border-box; padding: 6px 13px; text-align: center; border-top-color: rgb(221, 221, 221);\">strictfp</th></tr></thead><tbody style=\"box-sizing: border-box;\"><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(204, 204, 204);\"><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">类</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(248, 248, 248); border-top: 1px solid rgb(204, 204, 204);\"><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">接口</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(204, 204, 204);\"><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">构造方法</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td></tr><tr style=\"box-sizing: border-box; background-color: rgb(248, 248, 248); border-top: 1px solid rgb(204, 204, 204);\"><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">其他方法</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(204, 204, 204);\"><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">field</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td></tr><tr style=\"box-sizing: border-box; background-color: rgb(248, 248, 248); border-top: 1px solid rgb(204, 204, 204);\"><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">参数</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\">Y</td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td><td style=\"box-sizing: border-box; padding: 6px 13px; text-align: center;\"><br/></td></tr></tbody></table><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">注：</p><ol style=\"box-sizing: border-box; margin-bottom: 16px; padding: 0px 0px 0px 2em; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\" class=\" list-paddingleft-2\"><li><p>对类使用static的情况仅在内部类中出现。</p></li><li><p>对接口使用abstract并没有什么实际意义，因为接口中的方法默认为public abstract的。</p></li></ol><h3 id=\"h3-3-2-\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.5em; position: relative; line-height: 1.43; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"reference-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(65, 131, 196);\"></a>3.2 顺序</h3><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">修饰符的顺序并没有强制要求，但是有一定的习惯顺序，形成了现在的规范。<br style=\"box-sizing: border-box;\"/>在google的习惯用法中有如下顺序：</p><blockquote style=\"box-sizing: border-box; margin: 0px 0px 16px; padding: 0px 15px 0px 20px; border-left: 4px solid rgb(221, 221, 221); font-family: Georgia, &quot;Times New Roman&quot;, Times, Kai, &quot;Kaiti SC&quot;, KaiTi, BiauKai, FontAwesome, serif; color: rgb(102, 102, 102); font-size: 14px; font-style: italic; white-space: normal;\"><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">public / protected / private<br style=\"box-sizing: border-box;\"/>abstract<br style=\"box-sizing: border-box;\"/>static<br style=\"box-sizing: border-box;\"/>final<br style=\"box-sizing: border-box;\"/>transient<em style=\"box-sizing: border-box;\">&nbsp;<br style=\"box-sizing: border-box;\"/>volatile<br style=\"box-sizing: border-box;\"/>synchronized<br style=\"box-sizing: border-box;\"/>native<br style=\"box-sizing: border-box;\"/>strictfp*</em></p></blockquote><h2 id=\"h2--\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.75em; padding-bottom: 0.3em; border-bottom: 1px solid rgb(238, 238, 238); position: relative; line-height: 1.225; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"reference-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(65, 131, 196);\"></a>四、参考链接</h2><ol style=\"box-sizing: border-box; padding: 0px 0px 0px 2em; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\" class=\" list-paddingleft-2\"><li><p>JavaTree<br style=\"box-sizing: border-box;\"/><a href=\"http://javatree.cn/chapter/e4f0c1e42cab4801898a39f15c034b8e?roadmapId=b316fff599244da3864913bb064f90b5\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-decoration-line: none; color: rgb(65, 131, 196);\">http://javatree.cn/chapter/e4f0c1e42cab4801898a39f15c034b8e?roadmapId=b316fff599244da3864913bb064f90b5</a></p></li><li><p>《Google Java Style Guide》<br style=\"box-sizing: border-box;\"/><a href=\"https://google.github.io/styleguide/javaguide.html#s4.8.7-modifiers\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-decoration-line: none; color: rgb(65, 131, 196);\">https://google.github.io/styleguide/javaguide.html#s4.8.7-modifiers</a></p></li></ol><p><br/></p>',1529492557,1,19,1,14,'Vermouth','Java基本语法'),(15,'2018-06-20/5b2a339db18d0.png','基于Quartz实现定时任务-框架学习','<h1 id=\"h1-quartz-\" style=\"box-sizing: border-box; margin-right: 0px; margin-bottom: 16px; margin-left: 0px; font-size: 2.25em; padding-bottom: 0.3em; border-bottom: 1px solid rgb(238, 238, 238); position: relative; line-height: 1.2; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal; margin-top: 0px !important;\">Quartz笔记</h1><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">最近碰到了一个场景，需要能够在指定时间执行任务，比如每周周六周日的3点开启一个服务，那么总不能说，把以后的每个周六周日的日期列出来让程序执行吧，所以就百度了一下找到了这么一个开源框架，Qartz，这个东西上手还是蛮简单的，所以打算记录下来</p><h2 id=\"h2-u914Du7F6E\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.75em; padding-bottom: 0.3em; border-bottom: 1px solid rgb(238, 238, 238); position: relative; line-height: 1.225; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"reference-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(65, 131, 196);\"></a>配置</h2><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">maven的话，比较容易，就添加上项目依赖就好了</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--&nbsp;https://mvnrepository.com/artifact/org.quartz-scheduler/quartz&nbsp;--&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;dependency&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;groupId&gt;org.quartz-scheduler&lt;/groupId&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;artifactId&gt;quartz&lt;/artifactId&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;version&gt;2.2.1&lt;/version&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/dependency&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;dependency&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;groupId&gt;org.quartz-scheduler&lt;/groupId&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;artifactId&gt;quartz-jobs&lt;/artifactId&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;version&gt;2.2.1&lt;/version&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/dependency&gt;</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">emmm，maven仓库能搜到的最新的是2.3.0的，但是官网都没出教程= =所以我还是选择了2.2.1，怂一点总没错，况且需要功能不多。</p><h2 id=\"h2-u914Du7F6Eu6587u4EF6\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.75em; padding-bottom: 0.3em; border-bottom: 1px solid rgb(238, 238, 238); position: relative; line-height: 1.225; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"reference-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(65, 131, 196);\"></a>配置文件</h2><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">这个比较简单，就在resources文件夹里面放一个名字叫<code style=\"box-sizing: border-box; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; padding: 3px; color: rgb(199, 37, 78); background: rgb(246, 246, 246); white-space: pre-wrap; border-radius: 3px; margin: 0px 4px 0px 5px; border: 1px solid rgb(221, 221, 221); word-break: break-all !important;\">quartz.properties</code>的文件，然后里面写几句话：</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">org.quartz.scheduler.instanceName&nbsp;=&nbsp;MyScheduler\r\norg.quartz.threadPool.threadCount&nbsp;=&nbsp;3\r\norg.quartz.jobStore.class&nbsp;=&nbsp;org.quartz.simpl.RAMJobStore</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">那么第一个就是名字，第二个是最大线程数，就跟那个，线程池一样的东西，第三个是存储方式，他好像是可以把任务存到数据库，也可以存到RAM，我们最终的希望还是存到数据库的，但是RAM是新手教程的方式，所以我就先试试RAM，后面再转JDBC。</p><h2 id=\"h2-u8FD0u884C\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.75em; padding-bottom: 0.3em; border-bottom: 1px solid rgb(238, 238, 238); position: relative; line-height: 1.225; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"reference-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(65, 131, 196);\"></a>运行</h2><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">这应该是我碰到的最简单的运行方式了</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">public&nbsp;class&nbsp;Scheduler&nbsp;implements&nbsp;Runnable{\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;org.quartz.Scheduler&nbsp;scheduler;\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;@Override\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;run()&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Grab&nbsp;the&nbsp;TaskHandler&nbsp;instance&nbsp;from&nbsp;the&nbsp;Factory\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scheduler&nbsp;=&nbsp;StdSchedulerFactory.getDefaultScheduler();\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;and&nbsp;start&nbsp;it&nbsp;off\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scheduler.start();\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;catch&nbsp;(SchedulerException&nbsp;se)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;se.printStackTrace();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">获得一个默认的Scheduler，然后start就行了</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">然后你就能看到这个：<br style=\"box-sizing: border-box;\"/><img src=\"http://img.blog.csdn.net/20171204203357248?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYTYxMDYxNjg5OA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"这里写图片描述\" style=\"box-sizing: border-box; vertical-align: middle; border: 0px; max-width: 100%;\"/>&nbsp;<br style=\"box-sizing: border-box;\"/>就启动完成啦</p><h3 id=\"h3-u521Bu5EFAu4E00u4E2Au4EFBu52A1\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.5em; position: relative; line-height: 1.43; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"reference-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(65, 131, 196);\"></a>创建一个任务</h3><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">他的一个任务是叫做，job，顾名思义，就是任务，比如该咋干活，然后啥的，主要是一个任务流程问题，那么我们看一下内部。</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">public&nbsp;interface&nbsp;Job&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;execute(JobExecutionContext&nbsp;var1)&nbsp;throws&nbsp;JobExecutionException;\r\n}</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">内部非常简单，一个execute就行啦，所以我们需要做的，就是实现这个任务</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">public&nbsp;class&nbsp;MyJob&nbsp;implements&nbsp;Job&nbsp;{\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;@Override\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;execute(JobExecutionContext&nbsp;jobExecutionContext)&nbsp;throws&nbsp;JobExecutionException&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;fin&#39;s&nbsp;job&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">我们就创建了一个job，那么当要执行这个任务的时候，就会执行execute了！所以说我们只需要定义好这个execute，就能正确执行我们想要的东西了。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">那么这个job怎么放到任务里，他有个builder模式，名称为<code style=\"box-sizing: border-box; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; padding: 3px; color: rgb(199, 37, 78); background: rgb(246, 246, 246); white-space: pre-wrap; border-radius: 3px; margin: 0px 4px 0px 5px; border: 1px solid rgb(221, 221, 221); word-break: break-all !important;\">org.quartz.JobBuilder</code>，那么我们可以通过这个来构造一个job</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">&nbsp;JobDetail&nbsp;jobDetail&nbsp;=&nbsp;JobBuilder.newJob(MyJob.class).build();</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">JobDetail就是我们需要执行的一个任务了，他是通过JobBuilder类的newJob静态方法，将我们实例化的Job给构建出来，然后build后生成我们需要的JobDetail对象。</p><h3 id=\"h3-job-\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.5em; position: relative; line-height: 1.43; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"reference-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(65, 131, 196);\"></a>Job传值</h3><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">job的builder可以使用<code style=\"box-sizing: border-box; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; padding: 3px; color: rgb(199, 37, 78); background: rgb(246, 246, 246); white-space: pre-wrap; border-radius: 3px; margin: 0px 4px 0px 5px; border: 1px solid rgb(221, 221, 221); word-break: break-all !important;\">usingJobData</code>方法来进行传值，那么这个东西在框架中被称作：JobDataMap，还是很明显，意思是任务数据map，usingJobData可以理解成Map.put()，前面是key，后面是value。</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">JobDetail&nbsp;jobDetail&nbsp;=&nbsp;JobBuilder.newJob(MyJob.class)\r\n&nbsp;&nbsp;&nbsp;&nbsp;.usingJobData(&quot;name&quot;,&quot;finQQ&quot;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;.build();</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">那么我们怎么获得这个值。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">只需要这句话：</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Map&nbsp;map&nbsp;=&nbsp;jobExecutionContext.getJobDetail().getJobDataMap();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(map.get(&quot;name&quot;)&nbsp;+&nbsp;&quot;&#39;s&nbsp;job&quot;);</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">这样就获得了我们需要的数据。同样，builder里面还有很多函数可以供我们选择。</p><h3 id=\"h3-u89E6u53D1u5668\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.5em; position: relative; line-height: 1.43; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"reference-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(65, 131, 196);\"></a>触发器</h3><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">刚刚Job是做什么，那么Trigger就是什么时候做，我们最需要的就是这个Trigger</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">创建Trigger也是通过所谓的TriggerBuilder来建立</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">Trigger&nbsp;trigger&nbsp;=&nbsp;TriggerBuilder.newTrigger()\r\n&nbsp;&nbsp;&nbsp;&nbsp;.startNow()\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.withSchedule(simpleSchedule()\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.withIntervalInSeconds(40)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.repeatForever())\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.build();</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">上面就是创建一个触发器。</p><ul style=\"box-sizing: border-box; margin-bottom: 16px; padding: 0px 0px 0px 2em; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\" class=\" list-paddingleft-2\"><li><p>startNow 现在开始</p></li><li><p>withSchedule 日程表，这个就是决定我们什么时候做什么的，有SimpleSchedule还有CronSchedule，这个就是创建一个每40秒循环一次然后循环到死的普通日程表</p></li><li><p>build 构建开始</p></li></ul><h3 id=\"h3-schedule\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.5em; position: relative; line-height: 1.43; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(65, 131, 196);\" name=\"Schedule\"></a>Schedule</h3><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">Cronschedule应该是我需要的那种，所以晚点会专门研究一下。。</p><h3 id=\"h3-u6700u540Eu4E00u6B65\" style=\"box-sizing: border-box; margin: 1em 0px 16px; font-size: 1.5em; position: relative; line-height: 1.43; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"reference-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(65, 131, 196);\"></a>最后一步</h3><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">添加我们的job和trigger到工作区</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: &quot;YaHei Consolas Hybrid&quot;, Consolas, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Helvetica, monospace, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 16px; padding: 10px; line-height: 1.6; word-break: break-all; word-wrap: normal; color: rgb(85, 85, 85); background-color: rgb(246, 246, 246); border: 1px solid rgb(221, 221, 221); border-radius: 3px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; overflow: auto;\">scheduler.scheduleJob(jobDetail,&nbsp;trigger);</pre><p><br/></p>',1529492381,1,22,1,15,'fin棋','Java技术起步'),(16,'2018-06-19/5b28b2c542141.jpg','阿里云TOMCAT启动慢, java.security.KeyException, SMTP邮件无法发出等部署问题','<p style=\"box-sizing: border-box; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal; margin-top: 0px !important;\">阿里云ECS安装CentOS, 安装Open JDK是方便些, 却潜在一些问题。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">1.Tomcat启动慢, 感觉启动要用1-2分钟, 日志一直卡着。<br style=\"box-sizing: border-box;\"/>参考<a href=\"https://www.jianshu.com/p/576d356dc163\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-decoration-line: none; color: rgb(65, 131, 196);\">https://www.jianshu.com/p/576d356dc163</a><br style=\"box-sizing: border-box;\"/>安装 rngd-tools 或rng-tools</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">也可以尝试换为Oracle的JDK, 可能会官方实现不同。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">2.使用URLConnection设置trust all进行https请求, ECKeyPairGenerator.generateKeyPair会抛出java.security.KeyException, 而本地windows oracle JDK开发版本是没问题的。<br style=\"box-sizing: border-box;\"/>参考&nbsp;<a href=\"https://blog.csdn.net/zealvampire/article/details/48298825\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-decoration-line: none; color: rgb(65, 131, 196);\">https://blog.csdn.net/zealvampire/article/details/48298825</a><br style=\"box-sizing: border-box;\"/>升级下libnss得到解决, 而Oracle JDK不存在这个问题。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">3.阿里云SMTP无法发送成功<br style=\"box-sizing: border-box;\"/>服务器telnet邮件服务器25端口都是无法登录的, 这个是阿里云的默认的限制。<br style=\"box-sizing: border-box;\"/>参考&nbsp;<a href=\"https://yq.aliyun.com/ask/47591\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-decoration-line: none; color: rgb(65, 131, 196);\">https://yq.aliyun.com/ask/47591</a></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">Spring的组件额外设置下SSL属性, 邮件服务器使用465端口的即可。<br style=\"box-sizing: border-box;\"/><a href=\"https://github.com/Bean\" class=\"at-link\" rel=\"nofollow\" style=\"box-sizing: border-box; background-image: initial; background-position: 0px 0px; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-decoration-line: none; color: rgb(65, 131, 196);\">@Bean</a><br style=\"box-sizing: border-box;\"/>public JavaMailSender javaMailSender() {<br style=\"box-sizing: border-box;\"/>Environment env = envrionment();<br style=\"box-sizing: border-box;\"/>JavaMailSenderImpl sender = new JavaMailSenderImpl();<br style=\"box-sizing: border-box;\"/>sender.setHost(env.getProperty(“mail.smtp_host”));<br style=\"box-sizing: border-box;\"/>sender.setPort(env.getIntProperty(“mail.smtp_port”));<br style=\"box-sizing: border-box;\"/>sender.setUsername(env.getProperty(“mail.smtp_user”));<br style=\"box-sizing: border-box;\"/>sender.setPassword(env.getProperty(“mail.smtp_pwd”));<br style=\"box-sizing: border-box;\"/>sender.setDefaultEncoding(“UTF-8”);<br style=\"box-sizing: border-box;\"/>Properties prop = new Properties();<br style=\"box-sizing: border-box;\"/>prop.setProperty(“mail.smtp.socketFactory.class”, “javax.net.ssl.SSLSocketFactory”);<br style=\"box-sizing: border-box;\"/>sender.setJavaMailProperties(prop);<br style=\"box-sizing: border-box;\"/>return sender;<br style=\"box-sizing: border-box;\"/>}</p><p style=\"box-sizing: border-box; margin-top: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, &quot;Meiryo UI&quot;, &quot;Malgun Gothic&quot;, &quot;Segoe UI&quot;, &quot;Trebuchet MS&quot;, Monaco, monospace, Tahoma, STXihei, 华文细黑, STHeiti, &quot;Helvetica Neue&quot;, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, FreeSans, Arimo, Arial, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal; margin-bottom: 0px !important;\">Enjoy It</p><p><br/></p>',1529496802,1,40,1,16,'POT','Java基本语法');

#
# Structure for table "x_lin"
#

CREATE TABLE `x_lin` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `aa` varchar(255) NOT NULL COMMENT '简介',
  `b` varchar(255) NOT NULL COMMENT '亮 点',
  `c` varchar(255) NOT NULL COMMENT '活动时间',
  `d` varchar(255) NOT NULL COMMENT ' 流程',
  `e` varchar(255) NOT NULL COMMENT ' 流程',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 COMMENT='武汉大学联系我们';

#
# Data for table "x_lin"
#

INSERT INTO `x_lin` VALUES (1,'( 027）68754231','湖北省武汉市武昌区武汉大学国际软件学院','430079','8888888','bdcclab@sina.com');

#
# Structure for table "x_navigation"
#

CREATE TABLE `x_navigation` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `is_show` int(10) NOT NULL DEFAULT '1' COMMENT '1显示0不显示',
  `sort` int(10) NOT NULL DEFAULT '100',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=11 DEFAULT CHARSET=utf8 COMMENT='武汉大学网站导航';

#
# Data for table "x_navigation"
#

INSERT INTO `x_navigation` VALUES (1,'课程简介',1,1),(2,'教学队伍',1,2),(3,'教学大纲',1,3),(4,'课程内容',1,4),(6,'技术前沿',1,6),(8,'联系我们',1,8);

#
# Structure for table "x_new"
#

CREATE TABLE `x_new` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `img` varchar(255) NOT NULL,
  `title` varchar(255) NOT NULL COMMENT '标题',
  `content` text NOT NULL,
  `create` int(20) NOT NULL,
  `is_show` int(2) NOT NULL DEFAULT '1' COMMENT '1  显示  0 不显示',
  `view` varchar(250) NOT NULL,
  `is_s` int(2) NOT NULL DEFAULT '0',
  `sort` int(10) NOT NULL DEFAULT '10',
  `zz` varchar(255) DEFAULT NULL,
  `ly` varchar(255) DEFAULT NULL,
  `pid` int(10) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=74 DEFAULT CHARSET=utf8 COMMENT='武汉大学课程相关新闻';

#
# Data for table "x_new"
#

INSERT INTO `x_new` VALUES (50,'','1. Java数字操作','<p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">java.lang下的类编译器可以直接识别 , 无需 import java.lang.*; &nbsp; 基础的类都在这个 package 下 , 开发代码每天必用 , 须熟练掌握 , 先来个 Hello World 。<br style=\"box-sizing: border-box;\"/></p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, FontAwesome, monospace; font-size: 1.3rem; margin-top: 1rem; margin-bottom: 1rem; padding: 1rem; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: rgb(85, 85, 85); border: 1px solid rgb(222, 222, 222); border-radius: 0px;\">package&nbsp;com.luoying.javatree.sample.lang;\r\n&nbsp;\r\n/**\r\n&nbsp;*&nbsp;@author&nbsp;Zeal\r\n&nbsp;*&nbsp;@since&nbsp;2016年12月11日\r\n&nbsp;*/\r\npublic&nbsp;class&nbsp;HelloJavaLang&nbsp;{\r\n\r\n/**\r\n&nbsp;*&nbsp;Just&nbsp;say&nbsp;hi\r\n&nbsp;*&nbsp;@throws&nbsp;Exception\r\n&nbsp;*/\r\npublic&nbsp;void&nbsp;helloWorld()&nbsp;throws&nbsp;Exception&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;//java.lang.String默认识别了,无需import&nbsp;java.lang.String\r\n&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;str&nbsp;=&nbsp;&quot;Java&nbsp;Tree&nbsp;Kick&nbsp;Off&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(str);\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;//编译器默认只是识别java.lang下的类,&nbsp;再下一层的子package则需要手工import&nbsp;java.lang.reflect.Method;\r\n&nbsp;&nbsp;&nbsp;&nbsp;//这里直接使用完整类名路径\r\n&nbsp;&nbsp;&nbsp;&nbsp;java.lang.reflect.Method&nbsp;&nbsp;method&nbsp;=&nbsp;String.class.getMethod(&quot;indexOf&quot;,&nbsp;int.class);\r\n&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(method.getName());\r\n}\r\npublic&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args)&nbsp;throws&nbsp;Exception&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;HelloJavaLang&nbsp;test&nbsp;=&nbsp;new&nbsp;HelloJavaLang();\r\n&nbsp;&nbsp;&nbsp;&nbsp;test.helloWorld();\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre><p><br/></p>',1510070400,1,'',1,1,'POT','Java基本语法',1),(51,'','java.util介绍','<p><span class=\"zrd-lineblock zrd-chap-as-h\" style=\"box-sizing: border-box; display: inline-block; font-size: 24px; margin-top: 15px;\">1. java.util介绍</span></p><hr class=\"am-divider am-divider-default\" style=\"box-sizing: content-box; margin: 1.5rem auto; padding: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; border-image: initial; height: 0px; border-top-style: solid; border-top-color: rgb(221, 221, 221); clear: both;\"/><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-size: 15px; text-indent: 29px;\">Dears,&nbsp;</span><span style=\"box-sizing: border-box; font-size: 15px; text-indent: 29px;\">经过</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 15px; text-indent: 29px; font-family: Tahoma;\">java.lang</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 15px; text-indent: 29px;\">的学习</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 15px; text-indent: 29px; font-family: Tahoma;\">,&nbsp;</span><span style=\"box-sizing: border-box; font-size: 15px; text-indent: 29px;\">我们可以简单的处理下数字和字符串</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 15px; text-indent: 29px; font-family: Tahoma;\">, &nbsp;</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 15px; text-indent: 29px;\">而实际工作当中</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 15px; text-indent: 29px; font-family: Tahoma;\">,&nbsp;</span><span style=\"box-sizing: border-box; font-size: 15px; text-indent: 29px;\">我们对于数据进行聚合，拆分和处理</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 15px; text-indent: 29px; font-family: Tahoma;\">,&nbsp;</span><span style=\"box-sizing: border-box; font-size: 15px; text-indent: 29px;\">我们需要有学习一定的数据结构。</span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-size: 15px;\"><span style=\"box-sizing: border-box;\">单靠数组整合数据还未必足够</span>,&nbsp;<span style=\"box-sizing: border-box;\">因为数组是有界的， 总要自己拷贝扩容也影响编码效率。&nbsp;</span><span style=\"box-sizing: border-box; font-family: Tahoma;\">Java</span>&nbsp;<span style=\"box-sizing: border-box;\">语言的口碑</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">, &nbsp;</span>&nbsp;<span style=\"box-sizing: border-box;\">和其优秀的集合框架</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">(java collection framework)</span>&nbsp;<span style=\"box-sizing: border-box;\">，工具类设计是分不开的，</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">java.util</span>&nbsp;<span style=\"box-sizing: border-box;\">也是面试重点。下图是集合的关系图</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">我们继续。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><img src=\"http://www.javatree.cn/file-server/c/b2fa4306c86c456dbe79c807c5b57dcf.png\" title=\"b2fa4306c86c456dbe79c807c5b57dcf.png\" alt=\"image.png\" style=\"box-sizing: border-box; vertical-align: middle; border: 0px; max-width: 100%;\"/></p><p><br/></p>',1529483891,1,'',0,10,'POT','Java基本语法',9),(52,'','1. java.io文件类','<p><span class=\"zrd-lineblock zrd-chap-as-h\" style=\"box-sizing: border-box; display: inline-block; font-size: 24px; margin-top: 15px;\">1. java.io文件类</span></p><hr class=\"am-divider am-divider-default\" style=\"box-sizing: content-box; margin: 1.5rem auto; padding: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; border-image: initial; height: 0px; border-top-style: solid; border-top-color: rgb(221, 221, 221); clear: both;\"/><h3 style=\"box-sizing: border-box; margin: 0px 0px 1.6rem; font-size: 16px;\"><strong style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 21px;\">1.1 java.io.File<span style=\"box-sizing: border-box;\">文件</span></span></strong>&nbsp;<strong style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 21px;\"><span style=\"box-sizing: border-box;\">类</span></span></strong></h3><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">java.io.File<span style=\"box-sizing: border-box;\">是一个文件或路径的抽象</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 15px;\">,&nbsp;<span style=\"box-sizing: border-box;\">一些常用方法</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">.</span></span></p><table width=\"568\"><tbody style=\"box-sizing: border-box;\"><tr class=\"firstRow\" style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">方法<span style=\"box-sizing: border-box; font-family: Tahoma;\">/</span>&nbsp;<span style=\"box-sizing: border-box;\">属性</span></span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-left: none; border-top-color: windowtext; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">描述</span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">File(String pathname)</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">构造方法<span style=\"box-sizing: border-box; font-family: Tahoma;\">,</span>&nbsp;<span style=\"box-sizing: border-box;\">可以为绝对路径或相对路径</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">File(String parent, String child)</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">构造方法<span style=\"box-sizing: border-box; font-family: Tahoma;\">,</span>&nbsp;<span style=\"box-sizing: border-box;\">指定父目录和子路径</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">File(File parent, String child)</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">构造方法<span style=\"box-sizing: border-box; font-family: Tahoma;\">,</span>&nbsp;<span style=\"box-sizing: border-box;\">指定父子路径</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">父为</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">File</span>&nbsp;<span style=\"box-sizing: border-box;\">参数</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">File(URI uri)</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">URI&nbsp;<span style=\"box-sizing: border-box;\">例如</span></span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\"><a rel=\"nofollow\" style=\"box-sizing: border-box; color: rgb(14, 144, 210);\">file://c:/Windows</a></span>初始化为<span style=\"box-sizing: border-box; font-size: 15px;\">File</span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">String getName()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">返回文件或文件夹名称</span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">String getParent()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">返回父目录路径</span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">File getParentFile()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">返回父目录<span style=\"box-sizing: border-box; font-family: Tahoma;\">File</span>&nbsp;<span style=\"box-sizing: border-box;\">对象</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">String getPath()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">返回绝对路径或相对路径<span style=\"box-sizing: border-box; font-family: Tahoma;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">取决于是否</span></span><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">&nbsp;路径或相对路径初始化</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 15px;\">,&nbsp;<span style=\"box-sizing: border-box;\">慎用该返回值</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">boolean isAbsolute()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">返回<span style=\"box-sizing: border-box; font-family: Tahoma;\">File</span>&nbsp;<span style=\"box-sizing: border-box;\">的路径是否为绝对路径</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">,&nbsp;</span></span><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">true<span style=\"box-sizing: border-box;\">时为绝对路径</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 15px;\">,&nbsp;</span><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">false<span style=\"box-sizing: border-box;\">应是相对路径</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">String getAbsolutePath()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">返回</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">File<span style=\"box-sizing: border-box;\">的绝对路径</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">File getAbsoluteFile()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">返回绝对路径</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">File<span style=\"box-sizing: border-box;\">对象</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">String getCanonicalPath() throws IOException</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">返回正式的完整路径<span style=\"box-sizing: border-box; font-family: Tahoma;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">与</span></span><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">getAbsolutePath()<span style=\"box-sizing: border-box;\">有区别</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 15px;\">,<span style=\"box-sizing: border-box;\">见</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">Q1</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">File getCanonicalFile() throws IOException</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">返回正式的完整路径<span style=\"box-sizing: border-box; font-family: Tahoma;\">File</span>&nbsp;<span style=\"box-sizing: border-box;\">对象</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">URI toURI()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">转换为<span style=\"box-sizing: border-box; font-family: Tahoma;\">file://</span>&nbsp;<span style=\"box-sizing: border-box;\">的</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">URI</span>&nbsp;<span style=\"box-sizing: border-box;\">对象</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">boolean canRead()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">File<span style=\"box-sizing: border-box;\">是否可读</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">boolean canWrite()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">Fille<span style=\"box-sizing: border-box;\">是否可写</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">boolean exists()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">File<span style=\"box-sizing: border-box;\">是否存在</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">boolean isDirectory()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">File<span style=\"box-sizing: border-box;\">是否为目录</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">boolean isFile()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">File<span style=\"box-sizing: border-box;\">是否为文件</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">boolean isHidden()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">File<span style=\"box-sizing: border-box;\">是否是隐藏的</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">long lastModified()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">获取</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 15px;\">File<span style=\"box-sizing: border-box;\">最近修改时间戳</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">自</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">1970</span>&nbsp;<span style=\"box-sizing: border-box;\">年开始点毫秒数</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">long length()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">返回<span style=\"box-sizing: border-box;\">File</span>&nbsp;<span style=\"box-sizing: border-box;\">字节大小</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 15px;\">,&nbsp;<span style=\"box-sizing: border-box;\">对于文件夹返回长度没意义且不同文件系统结果诡异</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">不存在的</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">File</span>&nbsp;<span style=\"box-sizing: border-box;\">不同文件系统是</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">0</span>&nbsp;<span style=\"box-sizing: border-box;\">或不可预测</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">,</span><span style=\"box-sizing: border-box;\">尽量只用在存在的文件</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">boolean createNewFile()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">自动创建空文件</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 15px;\">,&nbsp;</span><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">仅当该文件不存在才回创建成功</span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">boolean delete()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">删除文件或文件夹</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 15px;\">,<span style=\"box-sizing: border-box;\">如果是文件夹为空的时候才能删除成功</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">vod deleteOnExit()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">JVM<span style=\"box-sizing: border-box;\">退出时删除文件或空文件夹</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">String[] list()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">列出下一级的<span style=\"box-sizing: border-box; font-family: Tahoma;\">File</span>&nbsp;<span style=\"box-sizing: border-box;\">路径数组</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">当前</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">File</span>&nbsp;<span style=\"box-sizing: border-box;\">为文件时返回</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">null,&nbsp;</span><span style=\"box-sizing: border-box;\">返回的字符串数组保证字母升序</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">String[] list(FilenameFilter filter)</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">通过<span style=\"box-sizing: border-box; font-family: Tahoma;\">FilenameFilter</span>&nbsp;<span style=\"box-sizing: border-box;\">过滤器列出下一级的</span><span style=\"box-sizing: border-box; font-family: Tahoma;\">File</span>&nbsp;<span style=\"box-sizing: border-box;\">路径数组</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">File[] listFiles()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">列出下一级的<span style=\"box-sizing: border-box; font-family: Tahoma;\">File[],&nbsp;</span><span style=\"box-sizing: border-box;\">当前</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">File</span>&nbsp;<span style=\"box-sizing: border-box;\">为文件时返回</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">null,&nbsp;</span><span style=\"box-sizing: border-box;\">返回的</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">File</span>&nbsp;<span style=\"box-sizing: border-box;\">数组保证路径字母升序</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">File[] listFiles(FilenameFilter filter)</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">通过<span style=\"box-sizing: border-box; font-family: Tahoma;\">FilenameFilter</span>&nbsp;<span style=\"box-sizing: border-box;\">过滤器列出下一级</span><span style=\"box-sizing: border-box; font-family: Tahoma;\">File[]</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">File[] listFiles(FileFilter filter)</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">通过<span style=\"box-sizing: border-box; font-family: Tahoma;\">FileFilter</span>&nbsp;<span style=\"box-sizing: border-box;\">过滤器列出下一级</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">File[]</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">boolean mkdir()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">创建文件夹<span style=\"box-sizing: border-box; font-family: Tahoma;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">要求文件夹不存在</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">且上一级目录存在</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">才能创建成功</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">boolean mkdirs()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">创建文件夹<span style=\"box-sizing: border-box; font-family: Tahoma;\">,</span>&nbsp;<span style=\"box-sizing: border-box;\">所依赖的多级父目录如果不存在</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">,</span>&nbsp;<span style=\"box-sizing: border-box;\">都会自动创建父目录</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">boolean renameTo(File dest)</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">重命名或移动当前<span style=\"box-sizing: border-box; font-family: Tahoma;\">File</span>&nbsp;<span style=\"box-sizing: border-box;\">到目标</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">File</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">boolean setLastModified(long time)</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">设置最新修改时间<span style=\"box-sizing: border-box; font-family: Tahoma;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">大多操作系统支持到秒</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">boolean setReadOnly()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">设置<span style=\"box-sizing: border-box; font-family: Tahoma;\">File</span>&nbsp;<span style=\"box-sizing: border-box;\">为只读</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">boolean setWritable(boolean writable, boolean ownerOnly)</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">设置<span style=\"box-sizing: border-box; font-family: Tahoma;\">File</span>&nbsp;<span style=\"box-sizing: border-box;\">是否可写</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">, ownerOnly</span>&nbsp;<span style=\"box-sizing: border-box;\">为</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">true</span><span style=\"box-sizing: border-box;\">设置应用到</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">File</span>&nbsp;<span style=\"box-sizing: border-box;\">所有者</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">,</span>&nbsp;<span style=\"box-sizing: border-box;\">否则所有人</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">boolean setReadable(boolean readable, boolean ownerOnly)</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">设置<span style=\"box-sizing: border-box; font-family: Tahoma;\">File</span>&nbsp;<span style=\"box-sizing: border-box;\">是否可读</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">, ownerOnly</span>&nbsp;<span style=\"box-sizing: border-box;\">为</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">true</span><span style=\"box-sizing: border-box;\">设置应用到</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">File</span>&nbsp;<span style=\"box-sizing: border-box;\">所有者</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">,</span>&nbsp;<span style=\"box-sizing: border-box;\">否则所有人</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">boolean setExecutable(boolean executable, boolean ownerOnly)</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">设置<span style=\"box-sizing: border-box; font-family: Tahoma;\">File</span>&nbsp;<span style=\"box-sizing: border-box;\">是否可执行</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">boolean canExecute()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">获取<span style=\"box-sizing: border-box; font-family: Tahoma;\">File</span>&nbsp;<span style=\"box-sizing: border-box;\">是否可执行</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><br/></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><br/></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">static File[] listRoots()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">返回文件系统的多个根目录</span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">long getTotalSpace()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">当前<span style=\"box-sizing: border-box; font-family: Tahoma;\">File</span>&nbsp;<span style=\"box-sizing: border-box;\">所在分区的最大磁盘容量</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">,</span>&nbsp;<span style=\"box-sizing: border-box;\">单位</span><span style=\"box-sizing: border-box; font-family: Tahoma;\">byte</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">long getFreeSpace()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">当前<span style=\"box-sizing: border-box; font-family: Tahoma;\">File</span>&nbsp;<span style=\"box-sizing: border-box;\">所在分区的可用磁盘容量</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">,</span>&nbsp;<span style=\"box-sizing: border-box;\">单位</span><span style=\"box-sizing: border-box; font-family: Tahoma;\">byte</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">long getUsableSpace()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">当前<span style=\"box-sizing: border-box; font-family: Tahoma;\">File</span>&nbsp;<span style=\"box-sizing: border-box;\">所在分区可用磁盘空间</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">如果可能会做额外检查可否可写和操作系统点其他限制</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">会比</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">getFreeSpace()</span>&nbsp;<span style=\"box-sizing: border-box;\">更精准一些</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">static File createTempFile(String prefix, String suffix,File directory)</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">静态方法创建一个临时文件<span style=\"box-sizing: border-box; font-family: Tahoma;\">, prefix</span>&nbsp;<span style=\"box-sizing: border-box;\">长度最小为</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">3, suffix</span>&nbsp;<span style=\"box-sizing: border-box;\">可为</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">null</span>&nbsp;<span style=\"box-sizing: border-box;\">默认为</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">.tmp, directory</span>&nbsp;<span style=\"box-sizing: border-box;\">为</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">null</span>&nbsp;<span style=\"box-sizing: border-box;\">时使用系统默认临时目录</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">int compareTo(File pathname)</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">实现<span style=\"box-sizing: border-box; font-family: Tahoma;\">java.lang.Comparable</span></span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">,<span style=\"box-sizing: border-box;\">默认是按照路径字符比较</span></span></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">Path toPath()</span></p></td><td width=\"284\" valign=\"top\" style=\"box-sizing: border-box; padding: 0px 7px; border-top: none; border-left: none; border-right-color: windowtext; border-bottom-color: windowtext;\"><p style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">Path<span style=\"box-sizing: border-box;\">是</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">java.nio</span>&nbsp;<span style=\"box-sizing: border-box;\">新</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">IO</span>&nbsp;<span style=\"box-sizing: border-box;\">包下的提供了更多系统级功能的新</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">API, NIO</span>&nbsp;<span style=\"box-sizing: border-box;\">后面高级篇补充</span></span></p></td></tr></tbody></table><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><strong style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">Q1:</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">File<span style=\"box-sizing: border-box;\">的</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 15px;\">getAbsolutePath()<span style=\"box-sizing: border-box;\">和</span></span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">getCanonicalPath()<span style=\"box-sizing: border-box;\">有什么区别</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 15px;\">?</span></strong></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">getCanonicalPath<span style=\"box-sizing: border-box;\">会把绝对路径上的</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 15px;\">.<span style=\"box-sizing: border-box;\">和</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">..</span>&nbsp;<span style=\"box-sizing: border-box;\">等甚至文件链接</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">驱动盘转为标准的值</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">.</span></span></p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, FontAwesome, monospace; font-size: 1.3rem; margin-top: 1rem; margin-bottom: 1rem; padding: 1rem; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: rgb(85, 85, 85); border: 1px solid rgb(222, 222, 222); border-radius: 0px;\">public&nbsp;void&nbsp;testFile()&nbsp;throws&nbsp;&nbsp;Exception&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;File&nbsp;dir&nbsp;=&nbsp;new&nbsp;File(&quot;e:/a/b/c&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(dir.mkdirs());\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;File&nbsp;dir1&nbsp;=&nbsp;new&nbsp;File(&quot;e:/a/b/../&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//输出e:\\a\\b\\..\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(dir1.getAbsolutePath());\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//输出E:\\a\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(dir1.getCanonicalPath());\r\n&nbsp;&nbsp;&nbsp;&nbsp;}</pre><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><strong style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">Q2: File<span style=\"box-sizing: border-box;\">的</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 15px;\">mkdir<span style=\"box-sizing: border-box;\">和</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">mkdirs</span>&nbsp;<span style=\"box-sizing: border-box;\">有什么区别</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">?</span></span></strong></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-size: 15px;\"><span style=\"box-sizing: border-box;\">如</span>Q1<span style=\"box-sizing: border-box;\">例子所示</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">如果</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">File</span>&nbsp;<span style=\"box-sizing: border-box;\">的上级目录不存在</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">,&nbsp;</span></span><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">mkdirs</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 15px;\"><span style=\"box-sizing: border-box;\">则一直往上创建</span>,&nbsp;<span style=\"box-sizing: border-box;\">直到所有上级目录都存在为止</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">;&nbsp;</span><span style=\"box-sizing: border-box;\">而</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">mkdir</span>&nbsp;<span style=\"box-sizing: border-box;\">如果上级目录不存在创建操作会直接失败</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">.</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><strong style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 15px;\">Q3: File<span style=\"box-sizing: border-box;\">的</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">setReadOnly</span>&nbsp;<span style=\"box-sizing: border-box;\">和</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">setReadable</span>&nbsp;<span style=\"box-sizing: border-box;\">有什么区别</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">?</span></span></strong></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-family: Tahoma; font-size: 15px;\">setReadOnly<span style=\"box-sizing: border-box;\">设置为只读</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 15px;\">,&nbsp;<span style=\"box-sizing: border-box;\">则</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">File</span>&nbsp;<span style=\"box-sizing: border-box;\">不能写</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">, setReadable</span>&nbsp;<span style=\"box-sizing: border-box;\">只是把</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">File</span>&nbsp;<span style=\"box-sizing: border-box;\">的设置为可读或不可读</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Tahoma;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">不会影响写属性。</span></span></p><p><br/></p>',1529484008,1,'',0,10,'POT','Java基本语法',16),(53,'','1. java.text包简介','<p><span class=\"zrd-lineblock zrd-chap-as-h\" style=\"box-sizing: border-box; display: inline-block; font-size: 24px; margin-top: 15px;\">1. java.text包简介</span></p><hr class=\"am-divider am-divider-default\" style=\"box-sizing: content-box; margin: 1.5rem auto; padding: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; border-image: initial; height: 0px; border-top-style: solid; border-top-color: rgb(221, 221, 221); clear: both;\"/><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1.6rem;\">java.text包提供以与自然语言无关的方式来处理文本、日期、数字和消息的类和接口。 这意味着所编写的主程序是与语言无关的，并且它可以依靠独立的、动态链接的本地化资源。这实现了随时为新本地化添加本地化的灵活性。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">这些类能够格式化日期、数字和消息、解析、搜索和排序字符串，以及迭代字符、单词、语句和换行符。此包包含类和接口的三大主要组：</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-family: Wingdings; font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;l&nbsp;</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">用于迭代文本的类</span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-family: Wingdings; font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;l&nbsp;</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">用于格式化和分析的类</span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-family: Wingdings; font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;l&nbsp;</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">用于整理字符串的类</span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><img src=\"http://www.javatree.cn/file-server/c/76025e70099341cca7288009d51c9a3d.png\" title=\"76025e70099341cca7288009d51c9a3d.png\" alt=\"image.png\" style=\"box-sizing: border-box; vertical-align: middle; border: 0px; max-width: 100%;\"/></p><p><br/></p>',1529484047,1,'',0,10,'','',19),(54,'','1. Java Bean读取修改','<p><span class=\"zrd-lineblock zrd-chap-as-h\" style=\"box-sizing: border-box; display: inline-block; font-size: 24px; margin-top: 15px;\">1. Java Bean读取修改</span></p><hr class=\"am-divider am-divider-default\" style=\"box-sizing: content-box; margin: 1.5rem auto; padding: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; border-image: initial; height: 0px; border-top-style: solid; border-top-color: rgb(221, 221, 221); clear: both;\"/><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-size: 14px;\">JavaBeans是一种类的规范,</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">&nbsp;<span style=\"box-sizing: border-box;\">是可重用软件组件</span>, 可以使用可视化工具维护的组件，</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">&nbsp;<span style=\"box-sizing: border-box;\">需要遵循关于命名、构造器、方法的特定规范</span>:</span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; margin-left: 28px;\"><span style=\"box-sizing: border-box; font-family: Wingdings; font-size: 14px;\">l&nbsp;</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">编写一个</span>public的无参数构造， 动态生成java&nbsp;</span><span style=\"box-sizing: border-box; font-size: 14px;\">bean默认使用该构造方法</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; margin-left: 28px;\"><span style=\"box-sizing: border-box; font-family: Wingdings; font-size: 14px;\">l&nbsp;</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">属性可以通过</span>get、set、is（可以替代get，用在布尔型属性上）方法或遵循特定命名规范的其他方法访问。</span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; margin-left: 28px;\"><span style=\"box-sizing: border-box; font-family: Wingdings; font-size: 14px;\">l&nbsp;</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">支持消息和属性</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; margin-left: 28px;\"><span style=\"box-sizing: border-box; font-family: Wingdings; font-size: 14px;\">l&nbsp;</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">支持持久化。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">具体可以参考官方文档</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><a href=\"http://www.oracle.com/technetwork/java/javase/documentation/spec-136004.html\" rel=\"nofollow\" style=\"box-sizing: border-box; text-decoration-line: none; color: rgb(14, 144, 210);\"><span style=\"box-sizing: border-box; text-decoration-line: underline;\"><span style=\"box-sizing: border-box; font-family: Calibri; color: rgb(5, 99, 193);\">http://www.oracle.com/technetwork/java/javase/documentation/spec-136004.html</span></span></a></p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, FontAwesome, monospace; font-size: 1.3rem; margin-top: 1rem; margin-bottom: 1rem; padding: 1rem; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: rgb(85, 85, 85); border: 1px solid rgb(222, 222, 222); border-radius: 0px;\">public&nbsp;class&nbsp;User&nbsp;implements&nbsp;Serializable&nbsp;{\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;String&nbsp;id&nbsp;=&nbsp;null;\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;String&nbsp;name&nbsp;=&nbsp;null;\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;int&nbsp;gender&nbsp;=&nbsp;0;\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;Date&nbsp;birthday&nbsp;=&nbsp;null;\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;String&nbsp;invisibleValue&nbsp;=&nbsp;null;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;String&nbsp;getId()&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;id;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;setId(String&nbsp;id)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.id&nbsp;=&nbsp;id;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;String&nbsp;getName()&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;name;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;setName(String&nbsp;name)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.name&nbsp;=&nbsp;name;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;int&nbsp;getGender()&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;gender;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;setGender(int&nbsp;gender)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.gender&nbsp;=&nbsp;gender;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;Date&nbsp;getBirthday()&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;birthday;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;setBirthday(Date&nbsp;birthday)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.birthday&nbsp;=&nbsp;birthday;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;String&nbsp;_test(String&nbsp;test)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;null;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;boolean&nbsp;isDone()&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;introspector()&nbsp;throws&nbsp;Exception&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;User&nbsp;user&nbsp;=&nbsp;new&nbsp;User();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BeanInfo&nbsp;beanInfo&nbsp;=&nbsp;Introspector.getBeanInfo(User.class);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Bean描述BeanDescriptor\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BeanDescriptor&nbsp;beanDesc&nbsp;=&nbsp;beanInfo.getBeanDescriptor();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//java.beans.BeanDescriptor[name=HelloBeans$User;&nbsp;beanClass=class&nbsp;com.javatree.sample.beans.HelloBeans$User]\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(beanDesc.toString());\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//属性描述PropertyDescriptor\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//应该截取set,get,is方法后的属性名,不完全等同于类的属性,例如有getClass()/isDone()方法,&nbsp;却无class和done这个属性&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PropertyDescriptor[]&nbsp;propertyDescs&nbsp;=&nbsp;beanInfo.getPropertyDescriptors();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Random&nbsp;rand&nbsp;=&nbsp;new&nbsp;Random();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(PropertyDescriptor&nbsp;propertyDesc&nbsp;:&nbsp;propertyDescs)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;========================================&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;name=&quot;&nbsp;+&nbsp;propertyDesc.getName());\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;propertyType=&quot;&nbsp;+&nbsp;propertyDesc.getPropertyType());\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;readMethod=&quot;&nbsp;+&nbsp;propertyDesc.getReadMethod());\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;writeMethod=&quot;&nbsp;+&nbsp;propertyDesc.getWriteMethod());\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;writeMethod=&quot;&nbsp;+&nbsp;propertyDesc.getWriteMethod());\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;propertyEditorClass=&quot;&nbsp;+&nbsp;propertyDesc.getPropertyEditorClass());\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//动态设值\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(&quot;name&quot;.equals(propertyDesc.getName()))&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;propertyDesc.getWriteMethod().invoke(user,&nbsp;&quot;小黑&quot;&nbsp;+&nbsp;rand.nextInt(100));//属性名可以是别名\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(user.getName());\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//方法描述\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;========================================&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MethodDescriptor[]&nbsp;methodDescs&nbsp;=&nbsp;beanInfo.getMethodDescriptors();//可见public方法\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(MethodDescriptor&nbsp;methodDesc&nbsp;:&nbsp;methodDescs)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;name=&quot;&nbsp;+&nbsp;methodDesc.getName()&nbsp;+&nbsp;&quot;,&nbsp;method=&quot;&nbsp;+&nbsp;methodDesc.getMethod());\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;\r\n}</pre><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\"><span style=\"box-sizing: border-box;\">注意</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">:</span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; margin-left: 28px;\"><span style=\"box-sizing: border-box; font-family: Wingdings; font-size: 14px;\">l&nbsp;</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">Java</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">&nbsp;beans</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">的</span>s</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">et<span style=\"box-sizing: border-box;\">方法无</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">返回参数即</span>void,&nbsp;<span style=\"box-sizing: border-box;\">有时为了返回自身可以连续的调用</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">setXX</span>&nbsp;<span style=\"box-sizing: border-box;\">方法</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">(</span>&nbsp;<span style=\"box-sizing: border-box;\">类似</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">StringBuilder.append</span>&nbsp;<span style=\"box-sizing: border-box;\">返回自身</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">)</span></span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">,&nbsp;<span style=\"box-sizing: border-box;\">但这个</span>&nbsp;<span style=\"box-sizing: border-box;\">writeMethod</span>&nbsp;<span style=\"box-sizing: border-box;\">是不符合</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">java beans<span style=\"box-sizing: border-box;\">规范</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span></span></p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, FontAwesome, monospace; font-size: 1.3rem; margin-top: 1rem; margin-bottom: 1rem; padding: 1rem; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: rgb(85, 85, 85); border: 1px solid rgb(222, 222, 222); border-radius: 0px;\">public&nbsp;User&nbsp;setName(String&nbsp;name)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;this.name&nbsp;=&nbsp;name;\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;this;\r\n}</pre><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; margin-left: 28px;\"><span style=\"box-sizing: border-box; font-family: Wingdings; font-size: 14px;\">l&nbsp;</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">Java</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">&nbsp;beans</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">的</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">PropertyDescriptor不是按照类的成员</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">(属性Field)去判断的, 而是以类的方法是否以set,get,is开头为判断， 所以以上例子getClass(), isDone()并没有对应的类成员Field, 但仍然视为一个Property, 只是它没有</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">writeMethod(set方法)。</span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">Java b eans规范广泛的应用于 java的各种框架和应用, JSP里面的UseBean标签 , IOC框架 Spring &nbsp;framework的主要注入方式就是 Java beans的set,get。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">Java beans的实现也是基于java的反射API实现， 我们要自然也可以自己封装处理, Introspector算是官方提供的标准的工具类。</p><p><br/></p>',1529484076,1,'',0,10,'','',23),(55,'','1. java.time新时间包来由','<p><span class=\"zrd-lineblock zrd-chap-as-h\" style=\"box-sizing: border-box; display: inline-block; font-size: 24px; margin-top: 15px;\">1. java.time新时间包来由</span></p><hr class=\"am-divider am-divider-default\" style=\"box-sizing: content-box; margin: 1.5rem auto; padding: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; border-image: initial; height: 0px; border-top-style: solid; border-top-color: rgb(221, 221, 221); clear: both;\"/><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">JDK1.8<span style=\"box-sizing: border-box;\">开始引入</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">java.time,&nbsp;<span style=\"box-sizing: border-box;\">为的是统一改进</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">java.util.Date, Calendar</span></span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">,DateFormat</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">一些不便利的操作。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; margin-left: 28px;\"><span style=\"box-sizing: border-box; font-family: Wingdings; font-size: 14px;\">l&nbsp;</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\"><span style=\"box-sizing: border-box;\">包的定义有些混乱</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">, java.util.Date, java.util.Calendar, java.sql.Date<span style=\"box-sizing: border-box;\">时间类对象</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">, java.text.DateFormat</span></span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">,&nbsp;<span style=\"box-sizing: border-box;\">日期处理的分布在不同的</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">package<span style=\"box-sizing: border-box;\">下。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; margin-left: 28px;\"><span style=\"box-sizing: border-box; font-family: Wingdings; font-size: 14px;\">l&nbsp;</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">J</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">ava.</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">sql.Date<span style=\"box-sizing: border-box;\">实际对应数据库精度应该是到天</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">,&nbsp;<span style=\"box-sizing: border-box;\">但实际又继承于</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">java.uitl.Date</span>&nbsp;<span style=\"box-sizing: border-box;\">包含了时分秒毫秒信息</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">两个类名字一样不容易区分</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">但为了兼容</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">JDBC</span>&nbsp;<span style=\"box-sizing: border-box;\">驱动必须保留。</span></span><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">Java.sql.Timestamp<span style=\"box-sizing: border-box;\">可以对应到数据库的</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">Datetime</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">/Timestamp</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">,&nbsp;<span style=\"box-sizing: border-box;\">不过不同</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">JDBC</span>&nbsp;<span style=\"box-sizing: border-box;\">驱动有时未必很好兼容。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; margin-left: 28px;\"><span style=\"box-sizing: border-box; font-family: Wingdings; font-size: 14px;\">l&nbsp;</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">Date,DateFormat,Calendar<span style=\"box-sizing: border-box;\">等是线程不安全</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">的</span>,&nbsp;<span style=\"box-sizing: border-box;\">可以随时修改值。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; margin-left: 28px;\"><span style=\"box-sizing: border-box; font-family: Wingdings; font-size: 14px;\">l&nbsp;</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">Calendar<span style=\"box-sizing: border-box;\">获取的月的值是从</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">0<span style=\"box-sizing: border-box;\">开始</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span></span><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\"><span style=\"box-sizing: border-box;\">即</span>0<span style=\"box-sizing: border-box;\">是一月。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\"><span style=\"box-sizing: border-box;\">而</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">java.time<span style=\"box-sizing: border-box;\">是参考</span></span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">Joda time<span style=\"box-sizing: border-box;\">开源项目</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">,&nbsp;<span style=\"box-sizing: border-box;\">按照</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">JSR310</span>&nbsp;<span style=\"box-sizing: border-box;\">规范实现的日期时间库</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">实现了新特性。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\"><span style=\"box-sizing: border-box;\">日期类都是不变性</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">,&nbsp;<span style=\"box-sizing: border-box;\">类似</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">String,</span></span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">&nbsp;<span style=\"box-sizing: border-box;\">线程安全</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">,&nbsp;<span style=\"box-sizing: border-box;\">在多线程中使用。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">分离了日期</span></span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">Date,&nbsp;<span style=\"box-sizing: border-box;\">时间</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">T</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">ime,&nbsp;<span style=\"box-sizing: border-box;\">日期时间</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">D</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">ateTime,&nbsp;<span style=\"box-sizing: border-box;\">时间戳</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">t</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">imestamp,&nbsp;<span style=\"box-sizing: border-box;\">甚至时区对应的日期类也有封装。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\"><span style=\"box-sizing: border-box;\">日期类的解析，转换，格式化，</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">&nbsp;</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\"><span style=\"box-sizing: border-box;\">日期的增加，减少等操作都在对应的日期类中完成，</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">&nbsp;<span style=\"box-sizing: border-box;\">不用再调用</span>D</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">ateFormat, Calendar<span style=\"box-sizing: border-box;\">去完成</span>&nbsp;<span style=\"box-sizing: border-box;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">封装使用易用。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">可扩展</span>,<span style=\"box-sizing: border-box;\">默认基于</span></span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">ISO-8601<span style=\"box-sizing: border-box;\">日历系统上</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">,&nbsp;</span><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">java.time.chrono<span style=\"box-sizing: border-box;\">包中的一些非标准的历法</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">。</span></span></p><p><br/></p>',1529484119,1,'',0,10,'','',25);
INSERT INTO `x_new` VALUES (56,'','1. HTTP 1.x协议','<p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">我们浏览器使用最多的一种通信协议就是HTTP, 我们先看下 HTTP 实际传输了什么报文。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">假设我们使用 chrome 敲入网址<a href=\"http://www.csdn.net/\" rel=\"nofollow\" style=\"box-sizing: border-box; background-color: transparent; text-decoration-line: none; color: rgb(14, 144, 210);\">www.csdn.net</a>.</p><h3 style=\"box-sizing: border-box; margin: 2em 0px 1.6rem; font-size: 16px; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><strong style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 14px;\">请求报文:</span></strong></h3><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><strong style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 14px;\"><img src=\"http://www.javatree.cn/file-server/c/fa38e9954cc34d629050907f3be793b7.png\" title=\"fa38e9954cc34d629050907f3be793b7.png\" alt=\"image.png\" style=\"box-sizing: border-box; vertical-align: middle; border: 0px; max-width: 100%;\"/></span></strong></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><strong style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 14px;\"></span></strong></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">( 1 ) 第一行 GET请求方式 , 请求 / 网站根目录 , 请求协议是 http/1.1 . 一般在浏览器直接输入网址 URL采访都是 GET 请求 , 请求参数只能通过 URL 带入 , 例如 GET /?a =1&amp;b=2</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">( 2 ) Host请求头指定当前请求的网站域名 或ip和端口 , 这个是 RFC2616 http1.1定义的规范 , &nbsp;如果缺少了服务器会返回 400 Bad Request. &nbsp; 由于web服务器可能有多个域名 , 浏览器带入不同的 Host域名 , 也方便服务器判断请求是来自哪个域名，服务器可以做分流等处理。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">(3) Connection:keep-alive是 http1.1新增的规范 , http1.0 定义的连接基本是短连接 , 服务器返回之后浏览器就把连接关闭了。由于网络连接创建连接都比较耗时耗资源 , http1.1 协议默认是支持长连接 , 实现连接的重用 , 即浏览器告诉服务器说 , 我创建连接后等网页返回之后我不会去关闭连接。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">( 4 ) &nbsp;Pragma是一个指示命令 , no-cache意思是要求服务器需要返回最新的 URL内容 , 这个指令是兼容 http1.0而存在 , 与http1.1 Cache-Control:no-cahce一致</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">( 5 ) &nbsp;Upgrade-Insecure-Requests:1浏览器发现当前请求 URL 是 http请求非 https (安全的 http ) , 告诉 web 服务器说客户端可以能支持 https, 待服务器如果响应 Content-Security-Policy: upgrade-insecure-requests, 那么浏览器就尝试替换网站的所有 URL 为 https . 这个例子看 CSDN不支持 https L</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">(6) User-Agent用于标记客户端的浏览器的类型和版本 , 而它的值是一个故事 ,</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.csdn.net/puppylpg/article/details/47319401\" rel=\"nofollow\" style=\"box-sizing: border-box; background-color: transparent; text-decoration-line: none; color: rgb(14, 144, 210);\">http://blog.csdn.net/puppylpg/article/details/47319401</a></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">(7) Accept 标记浏览器可以支持的 MIME多媒体类型 ( 可能是 html, 图片 ,xml,json 等格式 )</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">Q=0.9是一个权重 , 介入 0-1 之间 , 值越大越推荐使用前面制定的 MIME 类型</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">( 8 ) &nbsp;Accept-Encoding 告诉服务器浏览器可以支持gzip,deflat两种压缩的内容编码 , 如果服务器该 URL 支持压缩 , 会类似返回 Content-Encoding:gzip 之类</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">( 9 ) Accept-Language是告诉服务器支持的语言 ,这里是简体中文</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">( 10 ) &nbsp;cookie是 web 开发常用的小甜点 , 以前采访 CSDN 时 ,CSDN 返回 set-cookie 指令可以缓存小部分的内容到浏览器 ( 关闭浏览器也可以存在 ) , 再次请求 CSDN时浏览器检查 cookie 如果没超时 , 带上这些 cookie 的值。通常会用在我们的记住密码 , 标记同一个用户身份会话等场景中使用。 后面章节我们在 jsp/servlet session 中细讲。</p><h3 style=\"box-sizing: border-box; margin: 2em 0px 1.6rem; font-size: 16px; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">返回报文头</span></h3><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\"><img src=\"http://www.javatree.cn/file-server/c/64373ea1d084447abbc0f7c58bd4585a.png\" title=\"64373ea1d084447abbc0f7c58bd4585a.png\" alt=\"image.png\" style=\"box-sizing: border-box; vertical-align: middle; border: 0px; max-width: 100%;\"/></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\"></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">(1)&nbsp; http1.1标记服务器支持的 http1.1 协议 , 200 是 http 返回码标记成功 , OK 是服务器带的简短的返回信息</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">http基本用返回码标记响应的状态 , 1xx服务器收到请求需客户端继续操作 , 2 xx基本是正常 ,3xx基本是跳转 ,4xx 是客户端错误 ,5xx 是服务器内部错误 . &nbsp;具体的返回码含义见 w3c网站。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">(2)&nbsp; server返回头标记 web 服务器类型 , CSDN用的是 openresty,nginx lua 下的一个扩展 , 也可能是一个前置的代理机器 ; 其他的值还有可能是 apache,nginx,IIS 等</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">(3)&nbsp; Content-Type标记返回的内容的 MIME 多媒体类型 , 这里返回的是 html, 且页面编码为 UTF-8</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">(4)&nbsp; Transfer-Encoding标记传输内容的编码 , chunked是分块编码 , 对于 静态页面服务器很容易可以知道返回的内容长度可以用 content-length返回头标记 , 但是对于动态页面 ( php,asp,jsp等 ) , 除非全部渲染完整个页面字符串再输出 , 否则很难计算出要输出的总长度。 对于边解析边用输出的动态页面 , 分片是最好的选择。以下是分片的格式。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-size: 14px;\">\\r\\n</span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\"><span style=\"box-sizing: border-box;\">分片</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">1</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\"><span style=\"box-sizing: border-box;\">字节长度</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">\\r\\n</span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\"><span style=\"box-sizing: border-box;\">分片</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">1<span style=\"box-sizing: border-box;\">内容</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">\\r\\n</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\"><span style=\"box-sizing: border-box;\">分片</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">2<span style=\"box-sizing: border-box;\">字节长度</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">\\r\\n</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\"><span style=\"box-sizing: border-box;\">分片</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">2<span style=\"box-sizing: border-box;\">内容</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">\\r\\n</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">…</span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">0\\r\\n</span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">\\r\\n</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">&nbsp;</span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">(5)&nbsp; Connection:keep-alive, 对应浏览器请求的告诉浏览器是否保持连接 , keep-alive:timeout=20则设置连接过期时间为 20秒 ; &nbsp; 如果需要关闭则是Connection: close</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">(6)&nbsp; Vary: Accept-Encoding,是内容协商， &nbsp;有些前置代理服务器/缓存服务器 ( web服务器为了扩容 ,会有一些负责分流的前置机 ) 会忽略了 content-encoding:gzip, 导致只缓存了一个版本的内容 ; 为了更好的兼容 , web 服务器使用 vary:accept-encoding 告诉这些缓存服务器 , 要根据浏览器的哪些请求头分别缓存不同的版本 .</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">(7)&nbsp; ETag , 返回当前页面的最近修改时间和版本号 , 下次浏览器再请求的时候 , If-None-Match:ETag的值 , 如果 ETag 值服务器判断没变就直接返回 304 使用浏览器的原页面内容。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">(8)&nbsp; Last-Modified服务器标记当前 URL 最新修改时间 , 如果浏览器再次请求时加入 If-Modified-Since:上次修改的时间值 , 服务器判断时间版本没修改 , &nbsp;可能会返回 304 让浏览器使用之前 URL缓存内容。 ETag优先级高于 Last_Modified .</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">(9)&nbsp; Content-Encoding,内容编码一般是标记是否压缩 ,zip,deflate 等</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">在WEB开发实践中 , 为了更好的优化好 WEB 的性能 , 有必要 熟悉HTTP的协议 , 而HTTP的其他头部和具体协议还远不止上面介绍的 , HTTP2.0 也已经崭露头角 , 学无止境 , 继续前行。</p><p><br/></p>',1529484175,1,'',0,10,'','',29),(57,'','1. WEB开发历史','<p><span class=\"zrd-lineblock zrd-chap-as-h\" style=\"box-sizing: border-box; display: inline-block; font-size: 24px; margin-top: 15px;\">1. WEB开发历史</span></p><hr class=\"am-divider am-divider-default\" style=\"box-sizing: content-box; margin: 1.5rem auto; padding: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; border-image: initial; height: 0px; border-top-style: solid; border-top-color: rgb(221, 221, 221); clear: both;\"/><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1.6rem;\">93年 , World Wild Web万维网创建 , 这时的服务器都是支持静态网页 , HTML, 图片这些 , 人们大多是浏览为主。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">同年CGI( Common Gateway Interface ) , web服务器可以采访外部应用程序 , 这些程序可以标准输出返回动态的 HTML 内容 , 这些程序用 shell,C/C++,Perl 编写。而 CGI 一次调用基本就是一个进程 , 调用开销大 , HTML 代码和 CGI 代码混合维护成本也高。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">94年 PHP(Hypertext Preprocessor), HTML可以较好的分离开 , FastCGI进程池管理也优化了调用。 96 年 ASP 诞生 , 99年 J2EE平台诞生 , JSP/Servlet 则是 J2EE 规范的一部分 , 2000 年 ASP. NET和 J2EE 的相互学习和竞争 。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">随之而来的 , 也有着各种 WEB 开发语言和框架的演变 , MVC, ORM, Spring DI/IOC, Ruby On Rail, NodeJs, MVVM。前端 , 后端 , 移动端 , H5, 混合型等 各种新技术爆炸增长 , 学无止境。</p><p><br/></p>',1529484211,1,'',0,10,'','',32),(58,'','1. JSP实现原理','<p><span class=\"zrd-lineblock zrd-chap-as-h\" style=\"box-sizing: border-box; display: inline-block; font-size: 24px; margin-top: 15px;\">1. JSP实现原理</span></p><hr class=\"am-divider am-divider-default\" style=\"box-sizing: content-box; margin: 1.5rem auto; padding: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; border-image: initial; height: 0px; border-top-style: solid; border-top-color: rgb(221, 221, 221); clear: both;\"/><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-size: 14px;\">以</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px; font-family: Calibri, sans-serif;\">Apache tomcat</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">实现为例</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px; font-family: Calibri, sans-serif;\">, tomcat/config/web.xml,&nbsp;</span><span style=\"box-sizing: border-box; font-size: 14px;\">我们可以看到所有</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px; font-family: Calibri, sans-serif;\">jsp</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">页面请求实际是</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px; font-family: Calibri, sans-serif;\">JspServlet</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">来处理</span>。</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, FontAwesome, monospace; font-size: 1.3rem; margin-top: 1rem; margin-bottom: 1rem; padding: 1rem; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: rgb(85, 85, 85); border: 1px solid rgb(222, 222, 222); border-radius: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&lt;servlet&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;servlet-name&gt;jsp&lt;/servlet-name&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;servlet-class&gt;org.apache.jasper.servlet.JspServlet&lt;/servlet-class&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;init-param&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;param-name&gt;fork&lt;/param-name&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;param-value&gt;false&lt;/param-value&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/init-param&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;init-param&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;param-name&gt;xpoweredBy&lt;/param-name&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;param-value&gt;false&lt;/param-value&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/init-param&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;load-on-startup&gt;3&lt;/load-on-startup&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;/servlet&gt;\r\n&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--&nbsp;The&nbsp;mappings&nbsp;for&nbsp;the&nbsp;JSP&nbsp;servlet&nbsp;--&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;servlet-mapping&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;servlet-name&gt;jsp&lt;/servlet-name&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;url-pattern&gt;*.jsp&lt;/url-pattern&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;url-pattern&gt;*.jspx&lt;/url-pattern&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;/servlet-mapping&gt;</pre><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; text-indent: 28px;\">JspServlet<span style=\"box-sizing: border-box;\">类似一个</span>JSP<span style=\"box-sizing: border-box;\">解析器</span>,&nbsp;<span style=\"box-sizing: border-box;\">会去解析和翻译</span>JSP<span style=\"box-sizing: border-box;\">内容为一个</span>servlet(HttpJspBase<span style=\"box-sizing: border-box;\">为一个</span>servlet<span style=\"box-sizing: border-box;\">类</span>)<span style=\"box-sizing: border-box;\">。例如对于</span>helloJsp.jsp</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, FontAwesome, monospace; font-size: 1.3rem; margin-top: 1rem; margin-bottom: 1rem; padding: 1rem; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: rgb(85, 85, 85); border: 1px solid rgb(222, 222, 222); border-radius: 0px;\">&lt;%@&nbsp;page&nbsp;language=&quot;java&quot;&nbsp;contentType=&quot;text/html;&nbsp;charset=UTF-8&quot;&nbsp;pageEncoding=&quot;UTF-8&quot;%&gt;\r\n&lt;!DOCTYPE&nbsp;html&nbsp;PUBLIC&nbsp;&quot;-//W3C//DTD&nbsp;HTML&nbsp;4.01&nbsp;Transitional//EN&quot;&nbsp;&quot;http://www.w3.org/TR/html4/loose.dtd&quot;&gt;\r\n&lt;html&gt;\r\n&lt;body&gt;\r\n&lt;h2&gt;你好,JSP&lt;/h2&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box;\">我们在执行</span>&nbsp;<a href=\"http://localhost:8080/servlet-sample/helloJsp.jsp\" rel=\"nofollow\" style=\"box-sizing: border-box; text-decoration-line: none; color: rgb(14, 144, 210);\">http://localhost:8080/servlet-sample/helloJsp.jsp</a>&nbsp;<span style=\"box-sizing: border-box;\">之后</span>,&nbsp;<span style=\"box-sizing: border-box;\">在</span>tomcat/work\\Catalina\\localhost\\servlet-sample\\\\org\\apache\\jsp\\helloJsp_jsp.java, helloJsp_jsp.class</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, FontAwesome, monospace; font-size: 1.3rem; margin-top: 1rem; margin-bottom: 1rem; padding: 1rem; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: rgb(85, 85, 85); border: 1px solid rgb(222, 222, 222); border-radius: 0px;\">/*\r\n&nbsp;*&nbsp;Generated&nbsp;by&nbsp;the&nbsp;Jasper&nbsp;component&nbsp;of&nbsp;Apache&nbsp;Tomcat\r\n&nbsp;*&nbsp;Version:&nbsp;Apache&nbsp;Tomcat/8.5.16\r\n&nbsp;*&nbsp;Generated&nbsp;at:&nbsp;2017-07-19&nbsp;08:26:46&nbsp;UTC\r\n&nbsp;*&nbsp;Note:&nbsp;The&nbsp;last&nbsp;modified&nbsp;time&nbsp;of&nbsp;this&nbsp;file&nbsp;was&nbsp;set&nbsp;to\r\n&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;last&nbsp;modified&nbsp;time&nbsp;of&nbsp;the&nbsp;source&nbsp;file&nbsp;after\r\n&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;generation&nbsp;to&nbsp;assist&nbsp;with&nbsp;modification&nbsp;tracking.\r\n&nbsp;*/\r\npackage&nbsp;org.apache.jsp;\r\n&nbsp;\r\nimport&nbsp;javax.servlet.*;\r\nimport&nbsp;javax.servlet.http.*;\r\nimport&nbsp;javax.servlet.jsp.*;\r\n&nbsp;\r\npublic&nbsp;final&nbsp;class&nbsp;helloJsp_jsp&nbsp;extends&nbsp;org.apache.jasper.runtime.HttpJspBase\r\n&nbsp;&nbsp;&nbsp;&nbsp;implements&nbsp;org.apache.jasper.runtime.JspSourceDependent,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;org.apache.jasper.runtime.JspSourceImports&nbsp;{\r\n&nbsp;\r\n&nbsp;&nbsp;private&nbsp;static&nbsp;final&nbsp;javax.servlet.jsp.JspFactory&nbsp;_jspxFactory&nbsp;=\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;javax.servlet.jsp.JspFactory.getDefaultFactory();\r\n&nbsp;\r\n&nbsp;&nbsp;private&nbsp;static&nbsp;java.util.Map&lt;java.lang.String,java.lang.Long&gt;&nbsp;_jspx_dependants;\r\n&nbsp;\r\n&nbsp;&nbsp;private&nbsp;static&nbsp;final&nbsp;java.util.Set&lt;java.lang.String&gt;&nbsp;_jspx_imports_packages;\r\n&nbsp;\r\n&nbsp;&nbsp;private&nbsp;static&nbsp;final&nbsp;java.util.Set&lt;java.lang.String&gt;&nbsp;_jspx_imports_classes;\r\n&nbsp;\r\n&nbsp;&nbsp;static&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;_jspx_imports_packages&nbsp;=&nbsp;new&nbsp;java.util.HashSet&lt;&gt;();\r\n&nbsp;&nbsp;&nbsp;&nbsp;_jspx_imports_packages.add(&quot;javax.servlet&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;_jspx_imports_packages.add(&quot;javax.servlet.http&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;_jspx_imports_packages.add(&quot;javax.servlet.jsp&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;_jspx_imports_classes&nbsp;=&nbsp;null;\r\n&nbsp;&nbsp;}\r\n&nbsp;\r\n&nbsp;&nbsp;private&nbsp;volatile&nbsp;javax.el.ExpressionFactory&nbsp;_el_expressionfactory;\r\n&nbsp;&nbsp;private&nbsp;volatile&nbsp;org.apache.tomcat.InstanceManager&nbsp;_jsp_instancemanager;\r\n&nbsp;\r\n&nbsp;&nbsp;public&nbsp;java.util.Map&lt;java.lang.String,java.lang.Long&gt;&nbsp;getDependants()&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;_jspx_dependants;\r\n&nbsp;&nbsp;}\r\n&nbsp;\r\n&nbsp;&nbsp;public&nbsp;java.util.Set&lt;java.lang.String&gt;&nbsp;getPackageImports()&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;_jspx_imports_packages;\r\n&nbsp;&nbsp;}\r\n&nbsp;\r\n&nbsp;&nbsp;public&nbsp;java.util.Set&lt;java.lang.String&gt;&nbsp;getClassImports()&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;_jspx_imports_classes;\r\n&nbsp;&nbsp;}\r\n&nbsp;\r\n&nbsp;&nbsp;public&nbsp;javax.el.ExpressionFactory&nbsp;_jsp_getExpressionFactory()&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(_el_expressionfactory&nbsp;==&nbsp;null)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;synchronized&nbsp;(this)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(_el_expressionfactory&nbsp;==&nbsp;null)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_el_expressionfactory&nbsp;=&nbsp;_jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;_el_expressionfactory;\r\n&nbsp;&nbsp;}\r\n&nbsp;\r\n&nbsp;&nbsp;public&nbsp;org.apache.tomcat.InstanceManager&nbsp;_jsp_getInstanceManager()&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(_jsp_instancemanager&nbsp;==&nbsp;null)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;synchronized&nbsp;(this)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(_jsp_instancemanager&nbsp;==&nbsp;null)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_jsp_instancemanager&nbsp;=&nbsp;org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;_jsp_instancemanager;\r\n&nbsp;&nbsp;}\r\n&nbsp;\r\n&nbsp;&nbsp;public&nbsp;void&nbsp;_jspInit()&nbsp;{\r\n&nbsp;&nbsp;}\r\n&nbsp;\r\n&nbsp;&nbsp;public&nbsp;void&nbsp;_jspDestroy()&nbsp;{\r\n&nbsp;&nbsp;}\r\n&nbsp;\r\n&nbsp;&nbsp;public&nbsp;void&nbsp;_jspService(final&nbsp;javax.servlet.http.HttpServletRequest&nbsp;request,&nbsp;final&nbsp;javax.servlet.http.HttpServletResponse&nbsp;response)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throws&nbsp;java.io.IOException,&nbsp;javax.servlet.ServletException&nbsp;{\r\n&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;final&nbsp;java.lang.String&nbsp;_jspx_method&nbsp;=&nbsp;request.getMethod();\r\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!&quot;GET&quot;.equals(_jspx_method)&nbsp;&amp;&amp;&nbsp;!&quot;POST&quot;.equals(_jspx_method)&nbsp;&amp;&amp;&nbsp;!&quot;HEAD&quot;.equals(_jspx_method)&nbsp;&amp;&amp;&nbsp;!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType()))&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED,&nbsp;&quot;JSPs&nbsp;only&nbsp;permit&nbsp;GET&nbsp;POST&nbsp;or&nbsp;HEAD&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;final&nbsp;javax.servlet.jsp.PageContext&nbsp;pageContext;\r\n&nbsp;&nbsp;&nbsp;&nbsp;javax.servlet.http.HttpSession&nbsp;session&nbsp;=&nbsp;null;\r\n&nbsp;&nbsp;&nbsp;&nbsp;final&nbsp;javax.servlet.ServletContext&nbsp;application;\r\n&nbsp;&nbsp;&nbsp;&nbsp;final&nbsp;javax.servlet.ServletConfig&nbsp;config;\r\n&nbsp;&nbsp;&nbsp;&nbsp;javax.servlet.jsp.JspWriter&nbsp;out&nbsp;=&nbsp;null;\r\n&nbsp;&nbsp;&nbsp;&nbsp;final&nbsp;java.lang.Object&nbsp;page&nbsp;=&nbsp;this;\r\n&nbsp;&nbsp;&nbsp;&nbsp;javax.servlet.jsp.JspWriter&nbsp;_jspx_out&nbsp;=&nbsp;null;\r\n&nbsp;&nbsp;&nbsp;&nbsp;javax.servlet.jsp.PageContext&nbsp;_jspx_page_context&nbsp;=&nbsp;null;\r\n&nbsp;\r\n&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;try&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;response.setContentType(&quot;text/html;&nbsp;charset=UTF-8&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pageContext&nbsp;=&nbsp;_jspxFactory.getPageContext(this,&nbsp;request,&nbsp;response,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;null,&nbsp;true,&nbsp;8192,&nbsp;true);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_jspx_page_context&nbsp;=&nbsp;pageContext;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;application&nbsp;=&nbsp;pageContext.getServletContext();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;config&nbsp;=&nbsp;pageContext.getServletConfig();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;session&nbsp;=&nbsp;pageContext.getSession();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out&nbsp;=&nbsp;pageContext.getOut();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_jspx_out&nbsp;=&nbsp;out;\r\n&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out.write(&quot;\\r\\n&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out.write(&quot;&lt;!DOCTYPE&nbsp;html&nbsp;PUBLIC&nbsp;\\&quot;-//W3C//DTD&nbsp;HTML&nbsp;4.01&nbsp;Transitional//EN\\&quot;&nbsp;\\&quot;http://www.w3.org/TR/html4/loose.dtd\\&quot;&gt;\\r\\n&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out.write(&quot;&lt;html&gt;\\r\\n&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out.write(&quot;&lt;body&gt;\\r\\n&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out.write(&quot;&lt;h2&gt;你好,JSP&lt;/h2&gt;\\r\\n&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out.write(&quot;&lt;/body&gt;\\r\\n&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out.write(&quot;&lt;/html&gt;&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;catch&nbsp;(java.lang.Throwable&nbsp;t)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!(t&nbsp;instanceof&nbsp;javax.servlet.jsp.SkipPageException)){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out&nbsp;=&nbsp;_jspx_out;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(out&nbsp;!=&nbsp;null&nbsp;&amp;&amp;&nbsp;out.getBufferSize()&nbsp;!=&nbsp;0)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(response.isCommitted())&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out.flush();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out.clearBuffer();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;catch&nbsp;(java.io.IOException&nbsp;e)&nbsp;{}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(_jspx_page_context&nbsp;!=&nbsp;null)&nbsp;_jspx_page_context.handlePageException(t);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;throw&nbsp;new&nbsp;ServletException(t);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;finally&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_jspxFactory.releasePageContext(_jspx_page_context);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;}\r\n}</pre><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box;\">可以看到</span>helloJsp.jsp<span style=\"box-sizing: border-box;\">被编译成为</span>helloJsp_jsp.java, HttpJspBase<span style=\"box-sizing: border-box;\">会调用</span>helloJsp_jsp. _jspService()<span style=\"box-sizing: border-box;\">方法渲染页面。</span>&nbsp;<span style=\"box-sizing: border-box;\">只要</span>helloJsp.jsp<span style=\"box-sizing: border-box;\">的有修改</span>,<span style=\"box-sizing: border-box;\">则</span>tomcat<span style=\"box-sizing: border-box;\">会重新编译为新的类执行。</span></p><p><br/></p>',1529484270,1,'',0,10,'','',36),(59,'','1. HTML','<p><span class=\"zrd-lineblock zrd-chap-as-h\" style=\"box-sizing: border-box; display: inline-block; font-size: 24px; margin-top: 15px;\">1. HTML</span></p><hr class=\"am-divider am-divider-default\" style=\"box-sizing: content-box; margin: 1.5rem auto; padding: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; border-image: initial; height: 0px; border-top-style: solid; border-top-color: rgb(221, 221, 221); clear: both;\"/><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1.6rem; text-indent: 28px;\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">HTML,HyperText Markup Language<span style=\"box-sizing: border-box;\">超文本标记语言</span>&nbsp;<span style=\"box-sizing: border-box;\">,</span>&nbsp;<span style=\"box-sizing: border-box;\">除了文本</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">,HTML<span style=\"box-sizing: border-box;\">还可以包含图片</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,</span>&nbsp;<span style=\"box-sizing: border-box;\">视频</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,</span>&nbsp;<span style=\"box-sizing: border-box;\">音频</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,</span>&nbsp;<span style=\"box-sizing: border-box;\">动画等多媒体内容。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; text-indent: 28px;\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\"><span style=\"box-sizing: border-box;\">现在使用最广的版本是</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">HTML4,&nbsp;<span style=\"box-sizing: border-box;\">同时由于</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">chrome</span>&nbsp;<span style=\"box-sizing: border-box;\">和</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">android</span>&nbsp;<span style=\"box-sizing: border-box;\">的流行</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">移动端</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">HTML5</span>&nbsp;<span style=\"box-sizing: border-box;\">也越来越流行。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; text-indent: 28px;\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">HTML<span style=\"box-sizing: border-box;\">页面主要由</span>&nbsp;<span style=\"box-sizing: border-box;\">&lt;!doctype&gt;&lt;html&gt;&lt;head&gt;..&lt;/head&gt;&lt;body&gt;..&lt;/body&gt;&lt;/html&gt;</span>&nbsp;<span style=\"box-sizing: border-box;\">几部分组成。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\"><span style=\"box-sizing: border-box;\">我们简单学习下常用的一些</span>HTML<span style=\"box-sizing: border-box;\">节点和元素。</span></span></p><p><br/></p>',1529484367,1,'',0,10,'','',40),(60,'','1. MySQL&工具安装','<p><span class=\"zrd-lineblock zrd-chap-as-h\" style=\"box-sizing: border-box; display: inline-block; font-size: 24px; margin-top: 15px;\">1. MySQL&amp;工具安装</span></p><hr class=\"am-divider am-divider-default\" style=\"box-sizing: content-box; margin: 1.5rem auto; padding: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; border-image: initial; height: 0px; border-top-style: solid; border-top-color: rgb(221, 221, 221); clear: both;\"/><h3 style=\"box-sizing: border-box; margin: 0px 0px 1.6rem; font-size: 16px;\"><strong style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 21px;\">1.1</span></strong>&nbsp;<strong style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 21px;\">MySQL<span style=\"box-sizing: border-box;\">安装</span></span></strong></h3><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\"><span style=\"box-sizing: border-box;\">我们可以到</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">MySQL<span style=\"box-sizing: border-box;\">官网下载最新的</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">MySQL5.7,&nbsp;</span><span style=\"box-sizing: border-box;\">选择离线版本安装</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">按照安装向导设置端口，</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">root</span>&nbsp;<span style=\"box-sizing: border-box;\">帐号可以安装为</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">windows</span>&nbsp;<span style=\"box-sizing: border-box;\">服务启动。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><a href=\"https://dev.mysql.com/downloads/mysql/\" rel=\"nofollow\" style=\"box-sizing: border-box; text-decoration-line: none; color: rgb(14, 144, 210);\"><span style=\"box-sizing: border-box; text-decoration-line: underline;\"><span style=\"box-sizing: border-box; font-family: Calibri; color: rgb(5, 99, 193);\">https://dev.mysql.com/downloads/mysql/</span></span></a></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><img src=\"http://www.javatree.cn/file-server/c/a7524192c05f426a904f73f1388e87f9.png\" title=\"a7524192c05f426a904f73f1388e87f9.png\" alt=\"image.png\" style=\"box-sizing: border-box; vertical-align: middle; border: 0px; max-width: 100%;\"/>&nbsp;<img src=\"http://www.javatree.cn/file-server/c/322a08f547174e1080907ee3aacc6a0c.png\" title=\"322a08f547174e1080907ee3aacc6a0c.png\" alt=\"image.png\" style=\"box-sizing: border-box; vertical-align: middle; border: 0px; max-width: 100%;\"/></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\"><span style=\"box-sizing: border-box;\">如果不喜欢安装服务占用资源</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">,&nbsp;<span style=\"box-sizing: border-box;\">也可以安装</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">SAMPP</span>&nbsp;<span style=\"box-sizing: border-box;\">集成版</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">解压即用的绿色版</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">必须解压到某个分区的根目录。不过集成的数据库实际是</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">MariaDB,MySQL</span>&nbsp;<span style=\"box-sizing: border-box;\">之父的非商业版的分支。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><a href=\"https://www.apachefriends.org/download.html\" rel=\"nofollow\" style=\"box-sizing: border-box; text-decoration-line: none; color: rgb(14, 144, 210);\"><span style=\"box-sizing: border-box; text-decoration-line: underline;\"><span style=\"box-sizing: border-box; font-family: Calibri; color: rgb(5, 99, 193);\">https://www.apachefriends.org/download.html</span></span></a></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><img src=\"http://www.javatree.cn/file-server/c/298557971fe24c5e8f51c80b06c3f439.png\" title=\"298557971fe24c5e8f51c80b06c3f439.png\" alt=\"image.png\" style=\"box-sizing: border-box; vertical-align: middle; border: 0px; max-width: 100%;\"/></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\"><span style=\"box-sizing: border-box;\">解压根目录</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">后运行</span>xampp-control.exe,&nbsp;<span style=\"box-sizing: border-box;\">例如</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">:E:/xampp/xampp-control.exe</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><img src=\"http://www.javatree.cn/file-server/c/f08d1364e26049d8abdc4f157eaeecf1.png\" title=\"f08d1364e26049d8abdc4f157eaeecf1.png\" alt=\"image.png\" style=\"box-sizing: border-box; vertical-align: middle; border: 0px; max-width: 100%;\"/>&nbsp;<img src=\"http://www.javatree.cn/file-server/c/df847c4349824b988dcfb4edee27389c.png\" title=\"df847c4349824b988dcfb4edee27389c.png\" alt=\"image.png\" style=\"box-sizing: border-box; vertical-align: middle; border: 0px; max-width: 100%;\"/></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-size: 14px;\">MySQL<span style=\"box-sizing: border-box;\">启动后</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">默认的帐号是</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">root,&nbsp;</span><span style=\"box-sizing: border-box;\">密码为空</span></span></p><p><br/></p><h3 style=\"box-sizing: border-box; margin: 0px 0px 1.6rem; font-size: 16px; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><strong style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 21px;\">1.2&nbsp;</span></strong><strong style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 21px;\">&nbsp;MySQL<span style=\"box-sizing: border-box;\">客户端工具</span></span></strong></h3><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255); text-indent: 28px;\"><span style=\"box-sizing: border-box; font-size: 14px;\">MySQL<span style=\"box-sizing: border-box;\">是个服务器</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">我们需要个客户端去连接操作数据库。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255); text-indent: 28px;\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\"><span style=\"box-sizing: border-box;\">如果你不嫌弃麻烦可以也有</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">MySQL SQL<span style=\"box-sizing: border-box;\">命令基础</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">可以用</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">E:/xampp/mysql/bin/mysql.exe</span>&nbsp;<span style=\"box-sizing: border-box;\">去连。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-size: 14px;\">&nbsp;&nbsp;<span style=\"box-sizing: border-box;\">如果想可视化去操作，</span>&nbsp;<span style=\"box-sizing: border-box;\">可以下载官方的客户端工具</span>mysqlworkbench,&nbsp;<span style=\"box-sizing: border-box;\">但需要安装</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">.net framework</span>&nbsp;<span style=\"box-sizing: border-box;\">和必要的</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">vc</span>&nbsp;<span style=\"box-sizing: border-box;\">发行包。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><a href=\"https://dev.mysql.com/downloads/workbench/\" rel=\"nofollow\" style=\"box-sizing: border-box; background-color: transparent; text-decoration-line: none; color: rgb(14, 144, 210);\"><span style=\"box-sizing: border-box; text-decoration-line: underline;\"><span style=\"box-sizing: border-box; font-family: Calibri; color: rgb(5, 99, 193);\">https://dev.mysql.com/downloads/workbench/</span></span></a></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><img src=\"http://www.javatree.cn/file-server/c/a2bdce6369224d61a762cca6aa7a479d.png\" title=\"a2bdce6369224d61a762cca6aa7a479d.png\" alt=\"image.png\" style=\"box-sizing: border-box; vertical-align: middle; border: 0px; max-width: 100%;\"/>&nbsp;<img src=\"http://www.javatree.cn/file-server/c/fda86942e9c0482d8b00679808ee1f96.png\" title=\"fda86942e9c0482d8b00679808ee1f96.png\" alt=\"image.png\" style=\"box-sizing: border-box; vertical-align: middle; border: 0px; max-width: 100%;\"/></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><img src=\"http://www.javatree.cn/file-server/c/e25497485570406f8d4fa639f61f6adf.png\" title=\"e25497485570406f8d4fa639f61f6adf.png\" alt=\"image.png\" style=\"box-sizing: border-box; vertical-align: middle; border: 0px; max-width: 100%;\"/></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\"><span style=\"box-sizing: border-box;\">安装好之后建立新连接</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">,<span style=\"box-sizing: border-box;\">帐号</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">root,</span>&nbsp;<span style=\"box-sizing: border-box;\">空密码</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span></span><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">“Test Connection”<span style=\"box-sizing: border-box;\">是否连通</span>&nbsp;<span style=\"box-sizing: border-box;\">,</span>&nbsp;<span style=\"box-sizing: border-box;\">有警告也继续。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><img src=\"http://www.javatree.cn/file-server/c/dcc16c934d044db89b6210e7eae0f6d3.png\" title=\"dcc16c934d044db89b6210e7eae0f6d3.png\" alt=\"image.png\" style=\"box-sizing: border-box; vertical-align: middle; border: 0px; max-width: 100%;\"/></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\"><span style=\"box-sizing: border-box;\">登进去之后我们可以看到左边有个</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">test<span style=\"box-sizing: border-box;\">的数据库</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">我们现在新建立一个数据库。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">CREATE DATABASE `sample` DEFAULT CHARACTER SET utf8 COLLATE utf8_bin;</span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><img src=\"http://www.javatree.cn/file-server/c/2bd1ae5ae4aa4903ae0c4ae0412bd046.png\" title=\"2bd1ae5ae4aa4903ae0c4ae0412bd046.png\" alt=\"image.png\" style=\"box-sizing: border-box; vertical-align: middle; border: 0px; max-width: 100%;\"/></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\">Navigation<span style=\"box-sizing: border-box;\">右键</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">refresh all<span style=\"box-sizing: border-box;\">可以看到新建的</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">sample</span>&nbsp;<span style=\"box-sizing: border-box;\">数据库</span></span></p><p><br/></p><p><span class=\"zrd-lineblock zrd-chap-as-h\" style=\"box-sizing: border-box; display: inline-block; font-size: 24px; margin-top: 15px;\">1. MySQL&amp;工具安装</span></p><hr class=\"am-divider am-divider-default\" style=\"box-sizing: content-box; margin: 1.5rem auto; padding: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; border-image: initial; height: 0px; border-top-style: solid; border-top-color: rgb(221, 221, 221); clear: both;\"/><h3 style=\"box-sizing: border-box; margin: 0px 0px 1.6rem; font-size: 16px;\"><strong style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 21px;\">1.3&nbsp;</span></strong><strong style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 21px;\">&nbsp;MySQL JDBC<span style=\"box-sizing: border-box;\">驱动</span></span></strong></h3><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><a href=\"https://dev.mysql.com/downloads/connector/j/\" rel=\"nofollow\" style=\"box-sizing: border-box; text-decoration-line: none; color: rgb(14, 144, 210);\"><span style=\"box-sizing: border-box; text-decoration-line: underline;\"><span style=\"box-sizing: border-box; font-family: Calibri; color: rgb(5, 99, 193);\">https://dev.mysql.com/downloads/connector/j/</span></span></a></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><img src=\"http://www.javatree.cn/file-server/c/38e7d9a526284a5d966e83956018850d.png\" title=\"38e7d9a526284a5d966e83956018850d.png\" alt=\"image.png\" style=\"box-sizing: border-box; vertical-align: middle; border: 0px; max-width: 100%;\"/>&nbsp;<img src=\"http://www.javatree.cn/file-server/c/9359bf3bf9ce4bc384aeca61197df54b.png\" title=\"9359bf3bf9ce4bc384aeca61197df54b.png\" alt=\"image.png\" style=\"box-sizing: border-box; vertical-align: middle; border: 0px; max-width: 100%;\"/></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\"><span style=\"box-sizing: border-box;\">解压下载的</span>mysql-connector-java-5.1.43.zip,&nbsp;<span style=\"box-sizing: border-box;\">找到里面的</span>&nbsp;<span style=\"box-sizing: border-box;\">mysql-connector-java-5.1.43-bin.jar</span>&nbsp;<span style=\"box-sizing: border-box;\">，</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 14px;\"><span style=\"box-sizing: border-box;\">拷贝到我们之前的例子</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">/servlet-sample/WebContent/WEB-INF/lib<span style=\"box-sizing: border-box;\">下</span></span></p><p><br/></p>',1529484594,1,'',0,10,'','',44),(61,'','1. MVC介绍','<p><span class=\"zrd-lineblock zrd-chap-as-h\" style=\"box-sizing: border-box; display: inline-block; font-size: 24px; margin-top: 15px;\">1. MVC介绍</span></p><hr class=\"am-divider am-divider-default\" style=\"box-sizing: content-box; margin: 1.5rem auto; padding: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; border-image: initial; height: 0px; border-top-style: solid; border-top-color: rgb(221, 221, 221); clear: both;\"/><p>To be continued</p><p><br/></p>',1529484659,1,'',0,10,'','',47),(62,'','1. Java技术概要介绍','<p><span class=\"zrd-lineblock zrd-chap-as-h\" style=\"box-sizing: border-box; display: inline-block; font-size: 24px; margin-top: 15px;\">1. Java技术概要介绍</span></p><hr class=\"am-divider am-divider-default\" style=\"box-sizing: content-box; margin: 1.5rem auto; padding: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; border-image: initial; height: 0px; border-top-style: solid; border-top-color: rgb(221, 221, 221); clear: both;\"/><h3 style=\"box-sizing: border-box; margin: 0px 0px 1.6rem; font-size: 16px;\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 21px;\">1.1&nbsp;</span>&nbsp;<strong style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 21px;\">Java<span style=\"box-sizing: border-box;\">技术即是一门编程语言</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,</span>&nbsp;<span style=\"box-sizing: border-box;\">也是一个平台</span></span></strong></h3><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-size: 14px;\">Java<span style=\"box-sizing: border-box;\">编程语言具有以下流行的特性。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">简单</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">面向对象</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">分布式</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">多线程</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">动态</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">体系结构中立</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">便携</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">高性能</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">稳健性</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">安全</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">在</span>java<span style=\"box-sizing: border-box;\">编程语言里</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">所有的源代码都会保存在</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">.java</span>&nbsp;<span style=\"box-sizing: border-box;\">后缀名的纯文本文件里面。这些源码会被</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">javac</span>&nbsp;<span style=\"box-sizing: border-box;\">编译器编译成为</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">.class</span>&nbsp;<span style=\"box-sizing: border-box;\">文件。一个</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">.class</span>&nbsp;<span style=\"box-sizing: border-box;\">文件并不包含本地处理器的原生代码</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">, &nbsp;</span>&nbsp;<span style=\"box-sizing: border-box;\">而是包含</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">bytecodes</span>&nbsp;<span style=\"box-sizing: border-box;\">字节码</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">是</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">Java Virtual Machine</span>&nbsp;<span style=\"box-sizing: border-box;\">虚拟机的机器语言。 而</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">java</span>&nbsp;<span style=\"box-sizing: border-box;\">启动工具可以作为</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">JVM</span>&nbsp;<span style=\"box-sizing: border-box;\">的一个实例启动我们编写的</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">java</span>&nbsp;<span style=\"box-sizing: border-box;\">应用程序。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><img src=\"http://www.javatree.cn/file-server/c/9f1671b90d3b4f1d820c1be2984af507.png\" title=\"9f1671b90d3b4f1d820c1be2984af507.png\" alt=\"image.png\" style=\"box-sizing: border-box; vertical-align: middle; border: 0px; max-width: 100%;\"/></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><span style=\"box-sizing: border-box; font-size: 14px;\">JVM<span style=\"box-sizing: border-box;\">可以用在许多不同的操作系统</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">同一个</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">.class</span>&nbsp;<span style=\"box-sizing: border-box;\">文件可以在</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">Windows, Solaris, Linux, Mac OS</span>&nbsp;<span style=\"box-sizing: border-box;\">等。一些虚拟机</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">例如</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">Java SE HotSpot at a Glance,&nbsp;</span><span style=\"box-sizing: border-box;\">在运行期会执行更多的步骤和操作以提升应用性能</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">这包括一系列的任务例如查找性能瓶颈</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,</span>&nbsp;<span style=\"box-sizing: border-box;\">常用代码再编译为本地代码。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><img src=\"http://www.javatree.cn/file-server/c/04ff6088c25549208fc6a7d13c0b13b6.png\" title=\"04ff6088c25549208fc6a7d13c0b13b6.png\" alt=\"image.png\" style=\"box-sizing: border-box; vertical-align: middle; border: 0px; max-width: 100%;\"/></p><p><br/></p><h3 style=\"box-sizing: border-box; margin: 0px 0px 1.6rem; font-size: 16px; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><strong style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 21px;\">1.2 Java<span style=\"box-sizing: border-box;\">平台</span></span></strong></h3><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">平台是指一个程序运行的硬件或软件的环境。我们常见的微软</span>Windows, Solaris, Linux, Mac OS<span style=\"box-sizing: border-box;\">等大多是底层硬件和操作系统的整合。而</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">Java</span>&nbsp;<span style=\"box-sizing: border-box;\">平台只是运行在硬件平台的一个软件平台。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-size: 14px;\">Java<span style=\"box-sizing: border-box;\">平台包括两个组件</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">:</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-size: 14px;\">Java<span style=\"box-sizing: border-box;\">虚拟机</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-size: 14px;\">Java<span style=\"box-sizing: border-box;\">应用编程接口</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">(API)</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-size: 14px;\">API<span style=\"box-sizing: border-box;\">是一系列的现成的软件组件</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,</span>&nbsp;<span style=\"box-sizing: border-box;\">可提供许多便利的功能。这些库按照接口或类归类</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">这些库通常就是我们使用的包</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">(packages)</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><img src=\"http://www.javatree.cn/file-server/c/e75244ee31854e9d916058f45f218b30.png\" title=\"e75244ee31854e9d916058f45f218b30.png\" alt=\"image.png\" style=\"box-sizing: border-box; vertical-align: middle; border: 0px; max-width: 100%;\"/></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">作为独立于平台的运行环境</span>, Java<span style=\"box-sizing: border-box;\">平台会比原生代码稍慢一些</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">但是编译器和虚拟机的不断优化</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">Java</span>&nbsp;<span style=\"box-sizing: border-box;\">代码可以接近原生代码且不影响其跨平台和便携性。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-size: 14px;\">JVM(Java Virtual Machine)<span style=\"box-sizing: border-box;\">我们简写为</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">Java</span>&nbsp;<span style=\"box-sizing: border-box;\">平台的一个虚拟机。</span></span></p><p><br/></p><h3 style=\"box-sizing: border-box; margin: 0px 0px 1.6rem; font-size: 16px; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><strong style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 21px;\">1.3 Java<span style=\"box-sizing: border-box;\">技术能够干什么</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">?</span></span></strong></h3><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-size: 14px;\">Java<span style=\"box-sizing: border-box;\">作为高级编程语言是一个功能强大的软件平台，完整的</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">Java</span>&nbsp;<span style=\"box-sizing: border-box;\">平台可以我们以下功能：</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; margin-left: 28px; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-family: Wingdings; font-size: 14px;\">l&nbsp;</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">开发工具</span>:&nbsp;<span style=\"box-sizing: border-box;\">包含编译，运行，监控，调试和文档生成。作为新开发者，主要的编译工具是</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">javac, java</span>&nbsp;<span style=\"box-sizing: border-box;\">启动器和</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">javadoc</span>&nbsp;<span style=\"box-sizing: border-box;\">文档工具。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; margin-left: 28px; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-family: Wingdings; font-size: 14px;\">l&nbsp;</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">应用编程接口</span>API: &nbsp;API<span style=\"box-sizing: border-box;\">提供了</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">Java</span>&nbsp;<span style=\"box-sizing: border-box;\">编程语言的核心功能</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">它包含基本对象</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">网络</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">安全</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">数据库采访等需要大量的功能。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; margin-left: 28px; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-family: Wingdings; font-size: 14px;\">l&nbsp;</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">部署技术</span>: JDK(Java<span style=\"box-sizing: border-box;\">开发工具集</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">)</span>&nbsp;<span style=\"box-sizing: border-box;\">提供了应用部署的标准</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">例如</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">Java Web Start,&nbsp;</span><span style=\"box-sizing: border-box;\">和</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">Java</span>&nbsp;<span style=\"box-sizing: border-box;\">插件</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; margin-left: 28px; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-family: Wingdings; font-size: 14px;\">l&nbsp;</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">用户接口工具集</span>: JavaFX, Java 2D<span style=\"box-sizing: border-box;\">提供了负责</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">GUI</span>&nbsp;<span style=\"box-sizing: border-box;\">处理</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; margin-left: 28px; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-family: Wingdings; font-size: 14px;\">l&nbsp;</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">统一的库</span>:&nbsp;<span style=\"box-sizing: border-box;\">包含</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">Java IDL, JDBC, JNDI, Java RMI, RMI-IIOP,&nbsp;</span><span style=\"box-sizing: border-box;\">库的接口统一</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">而厂商可以按照库接口各自实现具体的库。</span></span></p><p><br/></p><h3 style=\"box-sizing: border-box; margin: 0px 0px 1.6rem; font-size: 16px; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><strong style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 21px;\">1.4 Java<span style=\"box-sizing: border-box;\">技术如何改变我们的生活</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">?</span></span></strong></h3><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255); text-indent: 28px;\"><span style=\"box-sizing: border-box; font-size: 14px;\">Java<span style=\"box-sizing: border-box;\">语言是全球最流行的编程语言</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,</span>&nbsp;<span style=\"box-sizing: border-box;\">在企业信息化</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,</span>&nbsp;<span style=\"box-sizing: border-box;\">互联网</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,</span>&nbsp;<span style=\"box-sizing: border-box;\">手机端</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,</span>&nbsp;<span style=\"box-sizing: border-box;\">大数据等方面都有着广泛的应用。</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">Java</span>&nbsp;<span style=\"box-sizing: border-box;\">端的开源技术和框架页十分广泛</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">, android</span>&nbsp;<span style=\"box-sizing: border-box;\">的流行</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,JDK9</span>&nbsp;<span style=\"box-sizing: border-box;\">的持续进化</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">都证明</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">Java</span>&nbsp;<span style=\"box-sizing: border-box;\">语言有着广泛的前景</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">学好</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">Java</span>&nbsp;<span style=\"box-sizing: border-box;\">技术很有必要。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255); text-indent: 28px;\"><span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">就开发语言自身而言</span>,<span style=\"box-sizing: border-box;\">使用</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">Java</span>&nbsp;<span style=\"box-sizing: border-box;\">相对易用一些</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">付出少一些的工作</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">也可以编写出好的程序。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; margin-left: 28px; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-family: Wingdings; font-size: 14px;\">l&nbsp;</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">入门简单快速</span>: Java<span style=\"box-sizing: border-box;\">入门简单</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">语法与</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">C/C++</span>&nbsp;<span style=\"box-sizing: border-box;\">相似</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">有编程基础的人学习入门很快。</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">代码精简</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">:&nbsp;</span><span style=\"box-sizing: border-box; font-size: 14px;\">相同的程序</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px; font-family: Calibri;\">, Java</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">实现的代码要比</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px; font-family: Calibri;\">C++</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">代码少</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px; font-family: Calibri;\">4</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">倍。</span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; margin-left: 28px; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-family: Wingdings; font-size: 14px;\">l&nbsp;</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">稳健的代码</span>: Java<span style=\"box-sizing: border-box;\">编程语言鼓励好的编码实践，自动垃圾回收有效防止内存泄漏。面向</span></span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">对象的技术</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">, JavaBean</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">的组件架构，广泛的易扩展的</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px; font-family: Calibri;\">API</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\">，让我们更好的重用代码，测试代码和减少代码</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px; font-family: Calibri;\">bugs.</span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; margin-left: 28px; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-family: Wingdings; font-size: 14px;\">l&nbsp;</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">快速开发</span>: Java<span style=\"box-sizing: border-box;\">比</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">C++</span>&nbsp;<span style=\"box-sizing: border-box;\">要简单</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,</span>&nbsp;<span style=\"box-sizing: border-box;\">编码速度比</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">C++</span>&nbsp;<span style=\"box-sizing: border-box;\">快两倍且需要更少的代码。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; margin-left: 28px; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-family: Wingdings; font-size: 14px;\">l&nbsp;</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">避免平台依赖</span>:&nbsp;<span style=\"box-sizing: border-box;\">避免使用其他语言的库</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">, Java</span>&nbsp;<span style=\"box-sizing: border-box;\">可保证其便携性。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; margin-left: 28px; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-family: Wingdings; font-size: 14px;\">l&nbsp;</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">一次编写</span>,<span style=\"box-sizing: border-box;\">跨平台运行： 因为</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">Java</span>&nbsp;<span style=\"box-sizing: border-box;\">编译为字节码</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">所以可以一致的运行在各个</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">Java</span>&nbsp;<span style=\"box-sizing: border-box;\">环境上。</span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; margin-left: 28px; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-family: Wingdings; font-size: 14px;\">l&nbsp;</span>&nbsp;<span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\">更容易分发软件</span>&nbsp;: Java web start<span style=\"box-sizing: border-box;\">等自动版本检查更新</span>&nbsp;<span style=\"box-sizing: border-box; font-family: Calibri;\">,&nbsp;</span><span style=\"box-sizing: border-box;\">可保证应用自动升级安装。</span></span></p><p><br/></p>',1529484775,1,'href=\"/the/ip/kp/50.M\"',0,10,'','',50),(63,'','1. 什么是对象?','<p><span class=\"zrd-lineblock zrd-chap-as-h\" style=\"box-sizing: border-box; display: inline-block; font-size: 24px; margin-top: 15px;\">1. 什么是对象?</span></p><hr class=\"am-divider am-divider-default\" style=\"box-sizing: content-box; margin: 1.5rem auto; padding: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; border-image: initial; height: 0px; border-top-style: solid; border-top-color: rgb(221, 221, 221); clear: both;\"/><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1.6rem;\">对象是一个相关状态和行为的软件包, 软件对象通常是对真实世界的一个建模。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">对象是面向对象技术的关键。现实生活中我们可以找到很多对象，你的狗，凳子，电视机或自行车。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">现实生活的对象有两个显著的特点,都拥有状态和行为。狗拥有状态 ( 名字，颜色，种类，饥饿 ) ， 拥有行为 ( 吠叫 , 奔跑，摇尾巴等 ) 。自行车拥有踏板，齿轮，速度等状态属性，拥有齿轮变速，改变踏板节奏，刹车等行为。这些状态和行为是面向对象编程的好的学习例子。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">花几分钟观察下现实生活中的对象。问自己两个问题，这个对象可能拥有什么的状态? 这个对象能执行什么动作和行为 ? 现实生活中的对象是复杂的，桌子上的灯拥有开和关两种状态 , 可能就拥有开和关两种动作。收音机可能拥有更多的状态 ( 开，关，当前音量，当前频道 ) 和行为 ( 开，关，增加音量，减少音量，搜索，扫描，调频 )</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\"><img src=\"http://www.javatree.cn/file-server/c/0d893cf3a5954bf7b42c96a5d17cf788.png\" title=\"0d893cf3a5954bf7b42c96a5d17cf788.png\" alt=\"image.png\" style=\"box-sizing: border-box; vertical-align: middle; border: 0px; max-width: 100%;\"/></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">软件对象在概念上和实际世界的对象类似。一个对象使用成员属性Field(其它语言或成为变量 ) 存储状态 , 使用方法 Method( 其它语言或成为函数 ) 表示对象的行为。 方法的用于操作对象的内部状态，是对象和对象通信的主要机制。隐藏对象的内部状态而只通过方法采访状态和交互我们称为数据的封装，这是面向对象的一个基本的原则。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; text-indent: 28px;\"><span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\"><img src=\"http://www.javatree.cn/file-server/c/63da201171b040ef9a6c0aac01addad5.png\" title=\"63da201171b040ef9a6c0aac01addad5.png\" alt=\"image.png\" style=\"box-sizing: border-box; vertical-align: middle; border: 0px; max-width: 100%;\"/></span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; text-indent: 28px;\"><span style=\"box-sizing: border-box; font-size: 14px;\"><span style=\"box-sizing: border-box;\"></span></span></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">一个对象可以设置属性和通过方法改变状态, 但对象仍保留了外部如何采访状态的控制。例如，自行车可 6 个齿轮，自行车对象提供了修改齿轮的方法，但拒绝不合法的齿轮值（小于 1 或大于 6 ） .</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">将一系列的代码抽取为单独的软件对象有以下的好处：</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp; 模块化: 抽取为对象的代码能独立编写和维护，一旦编写好，可以很容易传递给系统使用。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp; 信息隐藏： 只使用对象方法交互, 内部如何实现的细节对外部隐藏。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp; 代码重用： 如果一个对象已经存在(可能是另外一个软件的作者编写 ) ，在你的程序中你可以重用这个对象。一些技术专家实现的复杂的，面向任务处理的对象，我们就可以不造车轮拿来使用。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp; 插件化和调试便利: 如果系统中的一个对象有问题，我们就可以把它替换另外一个可用的对象，而不是替换整个系统。</p><p><br/></p>',1529484816,1,'',0,10,'','',53),(64,'','1. java变量','<p><span class=\"zrd-lineblock zrd-chap-as-h\" style=\"box-sizing: border-box; display: inline-block; font-size: 24px; margin-top: 15px;\">1. java变量</span></p><hr class=\"am-divider am-divider-default\" style=\"box-sizing: content-box; margin: 1.5rem auto; padding: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; border-image: initial; height: 0px; border-top-style: solid; border-top-color: rgb(221, 221, 221); clear: both;\"/><h3 style=\"box-sizing: border-box; margin: 0px 0px 1.6rem; font-size: 16px;\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 21px;\">1.1&nbsp;</span>&nbsp;<strong style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 21px;\"><span style=\"box-sizing: border-box;\">变量</span></span></strong></h3><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">从上章节学习, 以下是Bicycle类的成员变量（Field）,类通过成员属性保存对象的状态。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">int cadence = 0;</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">int speed = 0;</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">int gear = 1;</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">那有什么规则或惯例去定义这些成员变量的呢？除了整型int, 还有其它数据类型吗？成员变量声明的时候需要初始化吗？成员变量没做初始化的时候有默认的值吗？学习之前，有一些技术术语需要声明下，Field成员和Variable变量会同时使用，基本上它们指的是同一个东西。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">Java语言定义了以下几种变量。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">&nbsp;&nbsp;&nbsp;&nbsp;a）实例变量(非静态变量),对象通常把状态值保存在非静态(non-static)成员变量中，一个类可以有多是实例，每个实例有各自的实例变量值。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">&nbsp;&nbsp;&nbsp;&nbsp;b)类变量（静态成员）：类的变量是以关键字static声明的，无论类的实例创建多少次，类变量只存在一份值。例如static int numGears = 6;定义了所有的自行车有6个齿轮，额外的final关键字可限制变量值不可修改, static final int numGears = 6;定义所有的自行车有且只有6个齿轮。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">&nbsp;&nbsp;&nbsp;&nbsp;c) 局部变量: 方法内部经常需要保存临时变量和状态，声明局部变量的语法和声明类成员变量类似，例如int count = 0; 而局部变量的生命周期取决于它所在的{}大括号对， 它只在最靠近的大括号对内可见。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">&nbsp;&nbsp;&nbsp;&nbsp;d) 参数: 在以上例子main函数, public static void main(String[] args), args就是main函数的入参, 重要的一点是我们只是把参数归类为变量, 而不是Field成员。</p><p><br/></p>',1529484844,1,'',0,10,'','',58);
INSERT INTO `x_new` VALUES (65,'','1. Java类','<p><span class=\"zrd-lineblock zrd-chap-as-h\" style=\"box-sizing: border-box; display: inline-block; font-size: 24px; margin-top: 15px;\">1. Java类</span></p><hr class=\"am-divider am-divider-default\" style=\"box-sizing: content-box; margin: 1.5rem auto; padding: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; border-image: initial; height: 0px; border-top-style: solid; border-top-color: rgb(221, 221, 221); clear: both;\"/><h3 style=\"box-sizing: border-box; margin: 0px 0px 1.6rem; font-size: 16px;\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 21px;\">1.1&nbsp;</span>&nbsp;<strong style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 21px;\"><span style=\"box-sizing: border-box;\">自行车类例子</span></span></strong></h3><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">面向对象的章节我们介绍了自行车Bicycle, 它还有山地车，比赛自行车等子类。以下是自行车的具体实现，我们可以看下具体的成员Field和方法Method,接下来我们一步步的具体学习。</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, FontAwesome, monospace; font-size: 1.3rem; margin-top: 1rem; margin-bottom: 1rem; padding: 1rem; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: rgb(85, 85, 85); border: 1px solid rgb(222, 222, 222); border-radius: 0px;\">public&nbsp;class&nbsp;Bicycle&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;the&nbsp;Bicycle&nbsp;class&nbsp;has\r\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;three&nbsp;fields\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;int&nbsp;cadence;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;int&nbsp;gear;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;int&nbsp;speed;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;the&nbsp;Bicycle&nbsp;class&nbsp;has\r\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;one&nbsp;constructor\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;Bicycle(int&nbsp;startCadence,&nbsp;int&nbsp;startSpeed,&nbsp;int&nbsp;startGear)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gear&nbsp;=&nbsp;startGear;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cadence&nbsp;=&nbsp;startCadence;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;speed&nbsp;=&nbsp;startSpeed;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;the&nbsp;Bicycle&nbsp;class&nbsp;has\r\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;four&nbsp;methods\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;setCadence(int&nbsp;newValue)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cadence&nbsp;=&nbsp;newValue;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;setGear(int&nbsp;newValue)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gear&nbsp;=&nbsp;newValue;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;applyBrake(int&nbsp;decrement)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;speed&nbsp;-=&nbsp;decrement;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;speedUp(int&nbsp;increment)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;speed&nbsp;+=&nbsp;increment;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n}</pre><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">而山地车的具体实现代码如下:</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, FontAwesome, monospace; font-size: 1.3rem; margin-top: 1rem; margin-bottom: 1rem; padding: 1rem; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: rgb(85, 85, 85); border: 1px solid rgb(222, 222, 222); border-radius: 0px;\">public&nbsp;class&nbsp;MountainBike&nbsp;extends&nbsp;Bicycle&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;the&nbsp;MountainBike&nbsp;subclass&nbsp;has\r\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;one&nbsp;field\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;int&nbsp;seatHeight;\r\n&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;the&nbsp;MountainBike&nbsp;subclass&nbsp;has\r\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;one&nbsp;constructor\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;MountainBike(int&nbsp;startHeight,&nbsp;int&nbsp;startCadence,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;startSpeed,&nbsp;int&nbsp;startGear)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;super(startCadence,&nbsp;startSpeed,&nbsp;startGear);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;seatHeight&nbsp;=&nbsp;startHeight;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;the&nbsp;MountainBike&nbsp;subclass&nbsp;has\r\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;one&nbsp;method\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;setHeight(int&nbsp;newValue)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;seatHeight&nbsp;=&nbsp;newValue;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;\r\n&nbsp;\r\n}</pre><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">MountainBike继承于Bicycle， 还额外增加了seatHeiht的属性和对应的setHeight方法，因为山地车可以调整座位的高低。</p><p><br/></p>',1529484891,1,'',0,10,'','',62),(66,'','1. 注解介绍','<p><span class=\"zrd-lineblock zrd-chap-as-h\" style=\"box-sizing: border-box; display: inline-block; font-size: 24px; margin-top: 15px;\">1. 注解介绍</span></p><hr class=\"am-divider am-divider-default\" style=\"box-sizing: content-box; margin: 1.5rem auto; padding: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; border-image: initial; height: 0px; border-top-style: solid; border-top-color: rgb(221, 221, 221); clear: both;\"/><h3 style=\"box-sizing: border-box; margin: 0px 0px 1.6rem; font-size: 16px;\"><strong style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 21px;\">1.1&nbsp;<span style=\"box-sizing: border-box;\">注解的格式</span></span></strong></h3><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">简单的形式，一个注解类似下例子</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, FontAwesome, monospace; font-size: 1.3rem; margin-top: 1rem; margin-bottom: 1rem; padding: 1rem; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: rgb(85, 85, 85); border: 1px solid rgb(222, 222, 222); border-radius: 0px;\">@Entity</pre><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">字符@告诉编译器后面跟着一个注解。下一个例子注解的名字是Override</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, FontAwesome, monospace; font-size: 1.3rem; margin-top: 1rem; margin-bottom: 1rem; padding: 1rem; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: rgb(85, 85, 85); border: 1px solid rgb(222, 222, 222); border-radius: 0px;\">@Override\r\nvoid&nbsp;mySuperMethod()&nbsp;{&nbsp;...&nbsp;}</pre><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">注解可以包含元素，类似键值对，每个元素都有对应的值。</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, FontAwesome, monospace; font-size: 1.3rem; margin-top: 1rem; margin-bottom: 1rem; padding: 1rem; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: rgb(85, 85, 85); border: 1px solid rgb(222, 222, 222); border-radius: 0px;\">@Author(\r\n&nbsp;&nbsp;&nbsp;name&nbsp;=&nbsp;&quot;Benjamin&nbsp;Franklin&quot;,\r\n&nbsp;&nbsp;&nbsp;date&nbsp;=&nbsp;&quot;3/27/2003&quot;\r\n)\r\nclass&nbsp;MyClass()&nbsp;{&nbsp;...&nbsp;}</pre><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">或</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, FontAwesome, monospace; font-size: 1.3rem; margin-top: 1rem; margin-bottom: 1rem; padding: 1rem; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: rgb(85, 85, 85); border: 1px solid rgb(222, 222, 222); border-radius: 0px;\">@SuppressWarnings(value&nbsp;=&nbsp;&quot;unchecked&quot;)\r\nvoid&nbsp;myMethod()&nbsp;{&nbsp;...&nbsp;}</pre><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">如果只有一个元素，且元素名为value， 则可以简写为</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, FontAwesome, monospace; font-size: 1.3rem; margin-top: 1rem; margin-bottom: 1rem; padding: 1rem; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: rgb(85, 85, 85); border: 1px solid rgb(222, 222, 222); border-radius: 0px;\">@SuppressWarnings(&quot;unchecked&quot;)\r\nvoid&nbsp;myMethod()&nbsp;{&nbsp;...&nbsp;}</pre><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">如果注解没有元素，那么括号也可以省略，就好像@Override的写法。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">同一个声明上可以支持多个注解。</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, FontAwesome, monospace; font-size: 1.3rem; margin-top: 1rem; margin-bottom: 1rem; padding: 1rem; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: rgb(85, 85, 85); border: 1px solid rgb(222, 222, 222); border-radius: 0px;\">@Author(name&nbsp;=&nbsp;&quot;Jane&nbsp;Doe&quot;)\r\n@EBook\r\nclass&nbsp;MyClass&nbsp;{&nbsp;...&nbsp;}</pre><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">如果注解存在重复的类型，那么称之为可重复的注解。</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, FontAwesome, monospace; font-size: 1.3rem; margin-top: 1rem; margin-bottom: 1rem; padding: 1rem; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: rgb(85, 85, 85); border: 1px solid rgb(222, 222, 222); border-radius: 0px;\">@Author(name&nbsp;=&nbsp;&quot;Jane&nbsp;Doe&quot;)\r\n@Author(name&nbsp;=&nbsp;&quot;John&nbsp;Smith&quot;)\r\nclass&nbsp;MyClass&nbsp;{&nbsp;...&nbsp;}</pre><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">可重复的注解JDK1.8后开始支持。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">注解类型主要在java.lang或java.lang.annotation包中定义。以上的例子中，Override和SuppressWarnings是Java预定义的注解，我们也可以定义自己的注解。上面例子的EBook和Author都是自定义的注解。</p><p><br/></p>',1529484921,1,'',0,10,'','',67),(67,'','1. 接口的定义和实现','<p><span class=\"zrd-lineblock zrd-chap-as-h\" style=\"box-sizing: border-box; display: inline-block; font-size: 24px; margin-top: 15px;\">1. 接口的定义和实现</span></p><hr class=\"am-divider am-divider-default\" style=\"box-sizing: content-box; margin: 1.5rem auto; padding: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; border-image: initial; height: 0px; border-top-style: solid; border-top-color: rgb(221, 221, 221); clear: both;\"/><h3 style=\"box-sizing: border-box; margin: 0px 0px 1.6rem; font-size: 16px;\"><span style=\"box-sizing: border-box; font-family: Calibri; font-size: 21px;\">1.1&nbsp;</span>&nbsp;<strong style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 21px;\"><span style=\"box-sizing: border-box;\">接口介绍</span></span></strong></h3><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">在软件工程里面有很多场景和情况，有一点很重要的是，对于多个群组的编程者，他们都需要赞同使用一种“合同”规范去阐明软件是如何交互的。每个群组的人在不需要知道其它群组的代码的如何编写，也能够很好的编写自己的代码。通常，接口就是这里说的合同规范。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">例如，假设未来社会的自动驾驶，无需人工司机的参与，计算机控制的自动驾驶汽车将能带领乘客穿梭街道。汽车制造商编写软件控制汽车的停车，发动，加速，拐弯等。另外一个工业群组，电子导航设备制造商，制造电脑系统接收GPS位置数据，无线传输交通的状况，根据路况自动驾驶。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">自动化的制造商必须发布工业标准的接口和细节，阐明车辆驾驶的时候什么方法会被调用。导航制造商才编写软件调用这些接口去实现控制车辆的运行。任何一方的工业组，都不需要知道其它组的软件如何实现。 实际上，每个组都会考虑各自软件的专利权，保持权利去修改自己的软件， 持续的发布自己的接口。</p><h3 style=\"box-sizing: border-box; margin: 0px 0px 1.6rem; font-size: 16px; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><strong style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 21px;\">1.2 Java<span style=\"box-sizing: border-box;\">的接口</span></span></strong></h3><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">在Java语言里, 接口是引用类型，和类类似。接口只能包含常量，方法签名，默认方法，静态方法和嵌套类型。方法体只有在默认方法和静态方法的时候才存在。接口不能被实例化， 接口只能被类去实现，或者被其它接口继承。定义一个接口和创建新类相似。</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, FontAwesome, monospace; font-size: 1.3rem; margin-top: 1rem; margin-bottom: 1rem; padding: 1rem; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: rgb(85, 85, 85); border: 1px solid rgb(222, 222, 222); border-radius: 0px;\">public&nbsp;interface&nbsp;OperateCar&nbsp;{\r\n&nbsp;\r\n&nbsp;&nbsp;&nbsp;//&nbsp;constant&nbsp;declarations,&nbsp;if&nbsp;any\r\n&nbsp;\r\n&nbsp;&nbsp;&nbsp;//&nbsp;method&nbsp;signatures\r\n&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;//&nbsp;An&nbsp;enum&nbsp;with&nbsp;values&nbsp;RIGHT,&nbsp;LEFT\r\n&nbsp;&nbsp;&nbsp;int&nbsp;turn(Direction&nbsp;direction,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;double&nbsp;radius,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;double&nbsp;startSpeed,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;double&nbsp;endSpeed);\r\n&nbsp;&nbsp;&nbsp;int&nbsp;changeLanes(Direction&nbsp;direction,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;double&nbsp;startSpeed,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;double&nbsp;endSpeed);\r\n&nbsp;&nbsp;&nbsp;int&nbsp;signalTurn(Direction&nbsp;direction,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;boolean&nbsp;signalOn);\r\n&nbsp;&nbsp;&nbsp;int&nbsp;getRadarFront(double&nbsp;distanceToCar,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;double&nbsp;speedOfCar);\r\n&nbsp;&nbsp;&nbsp;int&nbsp;getRadarRear(double&nbsp;distanceToCar,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;double&nbsp;speedOfCar);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;......\r\n&nbsp;&nbsp;&nbsp;//&nbsp;more&nbsp;method&nbsp;signatures\r\n}</pre><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">注意到一般情况下，接口方法签名后没有大括号方法体，跟着分号就结束了。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">要使用接口，我们就需要写一个类实现这个接口，实现接口的方法的逻辑。</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, FontAwesome, monospace; font-size: 1.3rem; margin-top: 1rem; margin-bottom: 1rem; padding: 1rem; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: rgb(85, 85, 85); border: 1px solid rgb(222, 222, 222); border-radius: 0px;\">public&nbsp;class&nbsp;OperateBMW760i&nbsp;implements&nbsp;OperateCar&nbsp;{\r\n&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;the&nbsp;OperateCar&nbsp;method&nbsp;signatures,&nbsp;with&nbsp;implementation&nbsp;--\r\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;for&nbsp;example:\r\n&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;signalTurn(Direction&nbsp;direction,&nbsp;boolean&nbsp;signalOn)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;code&nbsp;to&nbsp;turn&nbsp;BMW&#39;s&nbsp;LEFT&nbsp;turn&nbsp;indicator&nbsp;lights&nbsp;on\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;code&nbsp;to&nbsp;turn&nbsp;BMW&#39;s&nbsp;LEFT&nbsp;turn&nbsp;indicator&nbsp;lights&nbsp;off\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;code&nbsp;to&nbsp;turn&nbsp;BMW&#39;s&nbsp;RIGHT&nbsp;turn&nbsp;indicator&nbsp;lights&nbsp;on\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;code&nbsp;to&nbsp;turn&nbsp;BMW&#39;s&nbsp;RIGHT&nbsp;turn&nbsp;indicator&nbsp;lights&nbsp;off\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;other&nbsp;members,&nbsp;as&nbsp;needed&nbsp;--&nbsp;for&nbsp;example,&nbsp;helper&nbsp;classes&nbsp;not&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;visible&nbsp;to&nbsp;clients&nbsp;of&nbsp;the&nbsp;interface\r\n}</pre><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem; color: rgb(68, 68, 67); font-family: &quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, FreeSans, Arimo, &quot;Droid Sans&quot;, &quot;wenquanyi micro hei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, FontAwesome, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">在自动驾驶汽车的例子里，汽车制造商要实现各自的接口。Chevrolet雪佛兰公司具体的实现肯定和Toyota丰田的不一样，但都是相同的OperateCar接口。导航制造上就是这些接口的使用者和客户，他们会构造系统使用GPS数据定义车的位置，街道数字地图和交通状况数据去驾驶车辆，导航系统将会调用这些接口方法:run,brake,turn等。</p><p><br/></p>',1529484965,1,'',0,10,'','',72),(68,'','1. 数字类介绍','<p><span class=\"zrd-lineblock zrd-chap-as-h\" style=\"box-sizing: border-box; display: inline-block; font-size: 24px; margin-top: 15px;\">1. 数字类介绍</span></p><hr class=\"am-divider am-divider-default\" style=\"box-sizing: content-box; margin: 1.5rem auto; padding: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; border-image: initial; height: 0px; border-top-style: solid; border-top-color: rgb(221, 221, 221); clear: both;\"/><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1.6rem;\">学习数字，大多的时候我们用到的是原生数据类型。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">int i = 500;</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">float gpa = 3.65f;</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">byte mask = 0xff;</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">但有一些原因我们使用数字类取代原生数据类型，Java平台为每个原生数据类型都提供了wrapper包装类，这些类包装原生数据类型到对象里面。很多时候，是通过编译器完成包装。我们把原生数据类型赋值给数字对象的时候，编译器会原生数据类型装箱(box)为包装类。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">我们把数字对象赋值给原生数据类型，编译器会把数字对象拆箱(unbox)为原生数字类型。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">具体细节我们在稍后的自动装箱拆箱中讲解。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">所有数字类型的包装类结构如下：</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">&nbsp;<img src=\"http://www.javatree.cn/file-server/c/9d8b003c53e844eea1f163c7ed297493.png\" title=\"9d8b003c53e844eea1f163c7ed297493.png\" alt=\"image.png\" style=\"box-sizing: border-box; vertical-align: middle; border: 0px; max-width: 100%;\"/></p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">注意：有4中Number的子类我们没在这里讨论，BigDecimal和BigInteger用于高精度计算，AtomicInteger和AtomicLong用于多线程应用。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">以下场景考虑使用Number类而不是原生数据类型：</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">a）方法需要一个对象作为参数（经常用在操作数字的集合）。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">b）为了使用类中定义的常量，例如MIN_VALUE和MAX_VALUE, 它提供数字类型的上下边界值。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">c）使用类的方法转换用于字符串和数字的相互转换，数字类型相互转换。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">Number的子类实现的方法</p><table width=\"568\"><tbody style=\"box-sizing: border-box;\"><tr class=\"firstRow\" style=\"box-sizing: border-box;\"><td width=\"253\" style=\"box-sizing: border-box; padding: 4px; border-style: outset; border-color: windowtext;\"><p style=\"box-sizing: border-box; margin-bottom: 1.6rem;\"><strong style=\"box-sizing: border-box;\">方法</strong></p></td><td width=\"314\" style=\"box-sizing: border-box; padding: 4px; border-left: none;\"><p style=\"box-sizing: border-box; margin-bottom: 1.6rem;\"><strong style=\"box-sizing: border-box;\">描述</strong></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"253\" style=\"box-sizing: border-box; padding: 4px; border-top: none; border-right-style: outset; border-right-color: windowtext; border-left-style: outset; border-left-color: windowtext;\"><p style=\"box-sizing: border-box; margin-bottom: 1.6rem;\">byte byteValue()<br style=\"box-sizing: border-box;\"/>short shortValue()<br style=\"box-sizing: border-box;\"/>int intValue()<br style=\"box-sizing: border-box;\"/>long longValue()<br style=\"box-sizing: border-box;\"/>float floatValue()<br style=\"box-sizing: border-box;\"/>double doubleValue()</p></td><td width=\"314\" style=\"box-sizing: border-box; padding: 4px; border-left: none;\"><p style=\"box-sizing: border-box; margin-bottom: 1.6rem;\">转换Number对象值为原生数据类型</p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"253\" style=\"box-sizing: border-box; padding: 4px; border-top: none; border-right-style: outset; border-right-color: windowtext; border-left-style: outset; border-left-color: windowtext;\"><p style=\"box-sizing: border-box; margin-bottom: 1.6rem;\">int compareTo(Byte anotherByte)<br style=\"box-sizing: border-box;\"/>int compareTo(Double anotherDouble)<br style=\"box-sizing: border-box;\"/>int compareTo(Float anotherFloat)<br style=\"box-sizing: border-box;\"/>int compareTo(Integer anotherInteger)<br style=\"box-sizing: border-box;\"/>int compareTo(Long anotherLong)<br style=\"box-sizing: border-box;\"/>int compareTo(Short anotherShort)</p></td><td width=\"314\" style=\"box-sizing: border-box; padding: 4px; border-left: none;\"><p style=\"box-sizing: border-box; margin-bottom: 1.6rem;\">与另外一个Number对象比较值</p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"253\" style=\"box-sizing: border-box; padding: 4px; border-top: none; border-right-style: outset; border-right-color: windowtext; border-left-style: outset; border-left-color: windowtext;\"><p style=\"box-sizing: border-box; margin-bottom: 1.6rem;\">boolean equals(Object obj)</p></td><td width=\"314\" style=\"box-sizing: border-box; padding: 4px; border-left: none;\"><p style=\"box-sizing: border-box; margin-bottom: 1.6rem;\">决定当前Number对象是否与传入的对象相等。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">传入对象非null且与当前Number类型相同，有相同的值时方法返回true.</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">浮点数包装类则还有其它比较要求需要参考Java Doc</p></td></tr></tbody></table><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">每个具体的Number实现类都提供了很多转换的方法，如下表格java.lang.Integer的方法：</p><table width=\"568\"><tbody style=\"box-sizing: border-box;\"><tr class=\"firstRow\" style=\"box-sizing: border-box;\"><td width=\"257\" style=\"box-sizing: border-box; padding: 4px; border-style: outset; border-color: windowtext;\"><p style=\"box-sizing: border-box; margin-bottom: 1.6rem;\"><strong style=\"box-sizing: border-box;\">方法</strong></p></td><td width=\"310\" style=\"box-sizing: border-box; padding: 4px; border-left: none;\"><p style=\"box-sizing: border-box; margin-bottom: 1.6rem;\"><strong style=\"box-sizing: border-box;\">描述</strong></p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"257\" style=\"box-sizing: border-box; padding: 4px; border-top: none; border-right-style: outset; border-right-color: windowtext; border-left-style: outset; border-left-color: windowtext;\"><p style=\"box-sizing: border-box; margin-bottom: 1.6rem;\">static Integer decode(String s)</p></td><td width=\"310\" style=\"box-sizing: border-box; padding: 4px; border-left: none;\"><p style=\"box-sizing: border-box; margin-bottom: 1.6rem;\">&nbsp;字符串解码为整数, 可接受16进制，8进制，小数作为输入</p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"257\" style=\"box-sizing: border-box; padding: 4px; border-top: none; border-right-style: outset; border-right-color: windowtext; border-left-style: outset; border-left-color: windowtext;\"><p style=\"box-sizing: border-box; margin-bottom: 1.6rem;\">static int parseInt(String s)</p></td><td width=\"310\" style=\"box-sizing: border-box; padding: 4px; border-left: none;\"><p style=\"box-sizing: border-box; margin-bottom: 1.6rem;\">返回一个整数&nbsp;(支持小数字符串).</p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"257\" style=\"box-sizing: border-box; padding: 4px; border-top: none; border-right-style: outset; border-right-color: windowtext; border-left-style: outset; border-left-color: windowtext;\"><p style=\"box-sizing: border-box; margin-bottom: 1.6rem;\">static int parseInt(String s, int radix)</p></td><td width=\"310\" style=\"box-sizing: border-box; padding: 4px; border-left: none;\"><p style=\"box-sizing: border-box; margin-bottom: 1.6rem;\">返回整数，radix是表示字符串是几进制. (10, 2, 8, 或16)</p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"257\" style=\"box-sizing: border-box; padding: 4px; border-top: none; border-right-style: outset; border-right-color: windowtext; border-left-style: outset; border-left-color: windowtext;\"><p style=\"box-sizing: border-box; margin-bottom: 1.6rem;\">String toString()</p></td><td width=\"310\" style=\"box-sizing: border-box; padding: 4px; border-left: none;\"><p style=\"box-sizing: border-box; margin-bottom: 1.6rem;\">返回字符串表示整数值</p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"257\" style=\"box-sizing: border-box; padding: 4px; border-top: none; border-right-style: outset; border-right-color: windowtext; border-left-style: outset; border-left-color: windowtext;\"><p style=\"box-sizing: border-box; margin-bottom: 1.6rem;\">static String toString(int i)</p></td><td width=\"310\" style=\"box-sizing: border-box; padding: 4px; border-left: none;\"><p style=\"box-sizing: border-box; margin-bottom: 1.6rem;\">返回一个字符串表示传入整数的值</p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"257\" style=\"box-sizing: border-box; padding: 4px; border-top: none; border-right-style: outset; border-right-color: windowtext; border-left-style: outset; border-left-color: windowtext;\"><p style=\"box-sizing: border-box; margin-bottom: 1.6rem;\">static Integer valueOf(int i)</p></td><td width=\"310\" style=\"box-sizing: border-box; padding: 4px; border-left: none;\"><p style=\"box-sizing: border-box; margin-bottom: 1.6rem;\">原生数据类型转换为包装类</p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"257\" style=\"box-sizing: border-box; padding: 4px; border-top: none; border-right-style: outset; border-right-color: windowtext; border-left-style: outset; border-left-color: windowtext;\"><p style=\"box-sizing: border-box; margin-bottom: 1.6rem;\">static Integer valueOf(String s)</p></td><td width=\"310\" style=\"box-sizing: border-box; padding: 4px; border-left: none;\"><p style=\"box-sizing: border-box; margin-bottom: 1.6rem;\">字符串转为包装类</p></td></tr><tr style=\"box-sizing: border-box;\"><td width=\"257\" style=\"box-sizing: border-box; padding: 4px; border-top: none; border-right-style: outset; border-right-color: windowtext; border-left-style: outset; border-left-color: windowtext;\"><p style=\"box-sizing: border-box; margin-bottom: 1.6rem;\">static Integer valueOf(String s, int radix)</p></td><td width=\"310\" style=\"box-sizing: border-box; padding: 4px; border-left: none;\"><p style=\"box-sizing: border-box; margin-bottom: 1.6rem;\">字符串转为包装类且指定进制.</p></td></tr></tbody></table><p><br/></p>',1529484998,1,'',0,10,'','',84),(69,'','1. 泛型简介和类型','<p><span class=\"zrd-lineblock zrd-chap-as-h\" style=\"box-sizing: border-box; display: inline-block; font-size: 24px; margin-top: 15px;\">1. 泛型简介和类型</span></p><hr class=\"am-divider am-divider-default\" style=\"box-sizing: content-box; margin: 1.5rem auto; padding: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; border-image: initial; height: 0px; border-top-style: solid; border-top-color: rgb(221, 221, 221); clear: both;\"/><h3 style=\"box-sizing: border-box; margin: 0px 0px 1.6rem; font-size: 16px;\"><strong style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 21px;\">1.1&nbsp;<span style=\"box-sizing: border-box;\">为什么使用泛型？</span></span></strong></h3><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">简言而之，定义类，接口，方法的时候泛型允许数据类型（类和接口）作为参数。就像方法声明的正式参数一样，类型参数在不同的输入的情况下提供了重用相同代码的能力。区别是方法的正式参数的输入是值，而类型参数的输入是数据类型。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">使用泛型的好处</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">a）在编译期更强的类型检查。Java编译器会开启强类型检查，如果类型有误则报错。修复编译期的错误要比修复运行期的错误要简单，运行期的错误较难定位。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">b）减少类型转换</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">以下代码</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">List list = new ArrayList();</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">list.add(&quot;hello&quot;);</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">String s = (String) list.get(0);</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">使用泛型重写，代码就不需要类型转换</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">List&lt;String&gt; list = new ArrayList&lt;String&gt;();</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">list.add(&quot;hello&quot;);</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">String s = list.get(0); &nbsp;&nbsp;// no cast</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">c）允许开发者实现通用的算法。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">使用泛型，开发者可以实现在不同数据类型都通用的算法，可定制化，类型安全，代码也容易</p><p><br/></p>',1529485035,1,'',0,10,'','',93),(70,'','1. 创建package','<p><span class=\"zrd-lineblock zrd-chap-as-h\" style=\"box-sizing: border-box; display: inline-block; font-size: 24px; margin-top: 15px;\">1. 创建package</span></p><hr class=\"am-divider am-divider-default\" style=\"box-sizing: content-box; margin: 1.5rem auto; padding: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; border-image: initial; height: 0px; border-top-style: solid; border-top-color: rgb(221, 221, 221); clear: both;\"/><h3 style=\"box-sizing: border-box; margin: 0px 0px 1.6rem; font-size: 16px;\"><strong style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-size: 21px;\">1.1 package<span style=\"box-sizing: border-box;\">简介</span></span></strong></h3><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">为了让类型容易查找和使用，避免命名冲突，控制权限采访，我们可以打包相关的类型到package里面。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">定义：package是一组相关的类型的集合，可提供采访保护和命名空间的管理。这里的类型涉及到类，接口，枚举，注解。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">类型是Java平台的一部分，主要根据功能打为不同的包。基础类可以在java.lang中找到，读写类可以在java.io中找到。我们也可以把自己编写的类打包。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">假设我们编写了一组图形对象。</p><pre style=\"box-sizing: border-box; white-space: pre-wrap; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, FontAwesome, monospace; font-size: 1.3rem; margin-top: 1rem; margin-bottom: 1rem; padding: 1rem; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: rgb(85, 85, 85); border: 1px solid rgb(222, 222, 222); border-radius: 0px;\">//in&nbsp;the&nbsp;Draggable.java&nbsp;file\r\npublic&nbsp;interface&nbsp;Draggable&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;...\r\n}\r\n&nbsp;\r\n//in&nbsp;the&nbsp;Graphic.java&nbsp;file\r\npublic&nbsp;abstract&nbsp;class&nbsp;Graphic&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;...\r\n}\r\n&nbsp;\r\n//in&nbsp;the&nbsp;Circle.java&nbsp;file\r\npublic&nbsp;class&nbsp;Circle&nbsp;extends&nbsp;Graphic\r\n&nbsp;&nbsp;&nbsp;&nbsp;implements&nbsp;Draggable&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;.&nbsp;.&nbsp;.\r\n}\r\n&nbsp;\r\n//in&nbsp;the&nbsp;Rectangle.java&nbsp;file\r\npublic&nbsp;class&nbsp;Rectangle&nbsp;extends&nbsp;Graphic\r\n&nbsp;&nbsp;&nbsp;&nbsp;implements&nbsp;Draggable&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;.&nbsp;.&nbsp;.\r\n}\r\n&nbsp;\r\n//in&nbsp;the&nbsp;Point.java&nbsp;file\r\npublic&nbsp;class&nbsp;Point&nbsp;extends&nbsp;Graphic\r\n&nbsp;&nbsp;&nbsp;&nbsp;implements&nbsp;Draggable&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;.&nbsp;.&nbsp;.\r\n}\r\n&nbsp;\r\n//in&nbsp;the&nbsp;Line.java&nbsp;file\r\npublic&nbsp;class&nbsp;Line&nbsp;extends&nbsp;Graphic\r\n&nbsp;&nbsp;&nbsp;&nbsp;implements&nbsp;Draggable&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;.&nbsp;.&nbsp;.\r\n}</pre><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">我们打包类或接口的一些原因。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">a） 自己或其它开发者可以很容易的确定哪些类型是相关的。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">b）&nbsp;本例中，自己或其它开发者可以快速找到图形相关的类型。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">c）&nbsp;自己包下的创建的类型名称不会和其它包下的名字冲突。</p><p style=\"box-sizing: border-box; margin-top: 1.6rem; margin-bottom: 1.6rem;\">d）&nbsp;包下的类型可以互相无限制的采访，但又可让其它包的类型提供有限制的采访。</p><p><br/></p>',1529485129,1,'',0,10,'','',100),(71,'','1. 进程和线程','<h1 class=\"postTitle\" style=\"margin: 0px 0px 20px; padding: 0px; font-size: 28px; font-weight: 400; line-height: 1.8; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><a id=\"cb_post_title_url\" class=\"postTitle2\" href=\"https://www.cnblogs.com/fuchongjundream/p/3829508.html\" style=\"margin: 0px; padding: 0px; color: rgb(51, 51, 51); text-decoration-line: none;\">进程、线程、多线程相关总结</a></h1><p style=\"text-align:center;margin: 10px auto; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; font-size: 15px;\"><strong style=\"margin: 0px; padding: 0px; line-height: 1.5;\">一、</strong><strong style=\"margin: 0px; padding: 0px; line-height: 1.5;\">说说概念</strong></span></p><p style=\"text-align:left;margin: 10px auto; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; font-size: 15px;\"><strong style=\"margin: 0px; padding: 0px;\">1</strong><strong style=\"margin: 0px; padding: 0px;\">、进程（process</strong><strong style=\"margin: 0px; padding: 0px;\">）</strong></span></p><p style=\"text-align:left;margin: 10px auto; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; font-size: 15px;\"><strong style=\"margin: 0px; padding: 0px;\">狭义定义：</strong>进程就是一段程序的执行过程。</span></p><p style=\"text-align:left;margin: 10px auto; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; font-size: 15px;\"><strong style=\"margin: 0px; padding: 0px;\">广义定义：</strong>进程是一个具有一定独立功能的程序关于某个数据集合的一次运行活动。它是操作系统动态执行的基本单元，在传统的操作系统中，进程既是基本的分配单元，也是基本的执行单元。</span></p><p style=\"text-align:left;margin: 10px auto; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; font-size: 15px;\"><strong style=\"margin: 0px; padding: 0px;\">简单的来讲进程的概念主要有两点</strong>：<strong style=\"margin: 0px; padding: 0px;\">第一</strong>，进程是一个实体。每一个进程都有它自己的地址空间，一般情况下，包括文本区域（text region）、数据区域（data region）和堆栈（stack region）。文本区域存储处理器执行的代码；数据区域存储变量和进程执行期间使用的动态分配的内存；堆栈区域存储着活动过程调用的指令和本地变量。<strong style=\"margin: 0px; padding: 0px;\">第二</strong>，进程是一个“执行中的程序”。程序是一个没有生命的实体，只有处理器赋予程序生命时，它才能成为一个活动的实体，我们称其为进程。</span></p><p style=\"text-align:left;margin: 10px auto; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; font-size: 15px;\"><strong style=\"margin: 0px; padding: 0px;\">进程状态：</strong>进程有三个状态，就绪、运行和阻塞。就绪状态其实就是获取了出cpu外的所有资源，只要处理器分配资源就可以马上执行。就绪状态有排队序列什么的，排队原则不再赘述。运行态就是获得了处理器分配的资源，程序开始执行。阻塞态，当程序条件不够时候，需要等待条件满足时候才能执行，如等待i/o操作时候，此刻的状态就叫阻塞态。</span></p><p style=\"text-align:left;margin: 10px auto; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; font-size: 15px;\"><strong style=\"margin: 0px; padding: 0px;\">2</strong><strong style=\"margin: 0px; padding: 0px;\">、程序</strong></span></p><p style=\"text-align:left;margin: 10px auto; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; font-size: 15px;\">说起进程，就不得不说下程序。先看定义：程序是指令和数据的有序集合，其本身没有任何运行的含义，是一个静态的概念。而进程则是在处理机上的一次执行过程，它是一个动态的概念。这个不难理解，其实进程是包含程序的，进程的执行离不开程序，进程中的文本区域就是代码区，也就是程序。</span></p><p style=\"text-align:left;margin: 10px auto; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; font-size: 15px;\"><strong style=\"margin: 0px; padding: 0px;\">3</strong><strong style=\"margin: 0px; padding: 0px;\">、线程</strong></span></p><p style=\"text-align:left;margin: 10px auto; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; font-size: 15px;\">通常在一个进程中可以包含若干个线程，当然一个进程中至少有一个线程，不然没有存在的意义。线程可以利用进程所拥有的资源，在引入线程的操作系统中，通常都是把进程作为分配资源的基本单位，而把线程作为独立运行和独立调度的基本单位，由于线程比进程更小，基本上不拥有系统资源，故对它的调度所付出的开销就会小得多，能更高效的提高系统多个程序间并发执行的程度。</span></p><p style=\"text-align:left;margin: 10px auto; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; font-size: 15px;\"><strong style=\"margin: 0px; padding: 0px;\">4</strong><strong style=\"margin: 0px; padding: 0px;\">、多线程</strong></span></p><p style=\"text-align:left;margin: 10px auto; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; font-size: 15px;\">在一个程序中，这些独立运行的程序片段叫作“线程”（Thread），利用它编程的概念就叫作“多线程处理”。多线程是为了同步完成多项任务，不是为了提高运行效率，而是为了提高资源使用效率来提高系统的效率。线程是在同一时间需要完成多项任务的时候实现的。</span></p><p style=\"text-align:left;margin: 10px auto; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; font-size: 15px;\">最简单的比喻多线程就像火车的每一节车厢，而进程则是火车。车厢离开火车是无法跑动的，同理火车也不可能只有一节车厢。多线程的出现就是为了提高效率。</span></p><p style=\"text-align:left;margin: 10px auto; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; font-size: 15px;\"><strong style=\"margin: 0px; padding: 0px;\">二、</strong><strong style=\"margin: 0px; padding: 0px;\">说说区别</strong></span></p><p style=\"text-align:left;margin: 10px auto; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; font-size: 15px;\"><strong style=\"margin: 0px; padding: 0px;\">1</strong><strong style=\"margin: 0px; padding: 0px;\">、进程与线程的区别：</strong></span></p><p style=\"text-align:left;margin: 10px auto; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; font-size: 15px;\">进程和线程的主要差别在于它们是不同的操作系统资源管理方式。进程有独立的地址空间，一个进程崩溃后，在保护模式下不会对其它进程产生影响，而线程只是一个进程中的不同执行路径。线程有自己的堆栈和局部变量，但线程之间没有单独的地址空间，<strong style=\"margin: 0px; padding: 0px;\">一个线程死掉就等于整个进程死掉</strong>，<strong style=\"margin: 0px; padding: 0px;\">所以多进程的程序要比多线程的程序健壮</strong>，但在进程切换时，耗费资源较大，效率要差一些。但对于一些要求同时进行并且又要共享某些变量的并发操作，只能用线程，不能用进程。</span></p><p style=\"text-align:left;margin: 10px auto; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; font-size: 15px;\">1) 简而言之,一个程序至少有一个进程,一个进程至少有一个线程.</span></p><p style=\"text-align:left;margin: 10px auto; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; font-size: 15px;\">2) 线程的划分尺度小于进程，使得多线程程序的并发性高。</span></p><p style=\"text-align:left;margin: 10px auto; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; font-size: 15px;\">3) 另外，进程在执行过程中拥有独立的内存单元，而多个线程共享内存，从而极大地提高了程序的运行效率。</span></p><p style=\"text-align:left;margin: 10px auto; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; font-size: 15px;\">4) 线程在执行过程中与进程还是有区别的。每个独立的线程有一个程序运行的入口、顺序执行序列和程序的出口。但是线程不能够独立执行，必须依存在应用程序中，由应用程序提供多个线程执行控制。</span></p><p style=\"text-align:left;margin: 10px auto; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; font-size: 15px;\">5) 从逻辑角度来看，多线程的意义在于一个应用程序中，有多个执行部分可以同时执行。但操作系统并没有将多个线程看做多个独立的应用，来实现进程的调度和管理以及资源分配。这就是进程和线程的重要区别。</span></p><p style=\"text-align:left;margin: 10px auto; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; font-size: 15px;\"><strong style=\"margin: 0px; padding: 0px;\">三、说说优缺点</strong></span></p><p style=\"text-align:left;margin: 10px auto; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; font-size: 15px;\">线程和进程在使用上各有优缺点：线程执行开销小，但不利于资源的管理和保护；而进程正相反。同时，线程适合于在SMP(多核处理机)机器上运行，而进程则可以跨机器迁移。</span></p><p style=\"text-align:left;margin: 10px auto; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; font-size: 15px;\"><strong style=\"margin: 0px; padding: 0px;\">四、总结</strong></span></p><p style=\"text-align:left;margin: 10px auto; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; font-size: 15px;\">入职第一天闲的无聊，参考下别人的总结自己也简单总结了下。知道以上的基本面试够用了，至于进程、线程的细节，底层构成，调度等问题是操作系统的东西。我就不详述了。</span></p><p style=\"text-align:left;margin: 10px auto; padding: 0px;\"><strong style=\"margin: 0px; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; font-size: 15.2381px; line-height: 20.9524px;\">五、实例</span></strong></p><p style=\"text-align:left;margin: 10px auto; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; font-size: 15.2381px; line-height: 20.9524px;\">1、多线程写日志，涉及到单例模式，异步写</span></p><p><br/></p>',1529485260,1,'',0,10,'','',110),(72,'','1. IO流常用类','<h1 style=\"margin: 10px 0px; padding: 0px; font-size: 28px; line-height: 1.5; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; background-color: rgb(51, 204, 204);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(255, 255, 255);\">一、IO流的分类</span>　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　</span></h1><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\">　　　　1.1、按数据流的方向分为&nbsp;<span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(255, 0, 0); font-size: 16px;\">输入流</span>、<span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\">输出流</span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\">　　　　　　　　此输入、输出是相对于我们写的代码程序而言，</p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\">　　　　　　　　输入流：从别的地方(本地文件，网络上的资源等)获取资源&nbsp;<span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(255, 0, 0);\">输入</span>到 我们的程序中</p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\">　　　　　　　　输出流：从我们的程序中 输出到 别的地方(本地文件)， 将一个字符串保存到本地文件中，就需要使用输出流。</p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\">　　　　1.2、按处理数据单位不同分为&nbsp;<span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\">字节流</span>、<span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\">字符流&nbsp;&nbsp;<br style=\"margin: 0px; padding: 0px;\"/></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\">　　　　　　　　　1字符 = 2字节 、 1字节(byte) = 8位(bit)&nbsp; 、 一个汉字占两个字节长度</span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\">　　　　　　　<span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\">字节流：每次读取(写出)一个字节，当传输的资源文件有中文时，就会出现乱码，</span></span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\">　　　　　　　　字符流：每次读取(写出)两个字节，有中文时，使用该流就可以正确传输显示中文。</span></span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\">　　　　1.3、按功能不同分为&nbsp;<span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(255, 0, 0); font-size: 16px;\">节点流</span>、<span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\">处理流</span></span></span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\">　　　　　　　<span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\">节点流：以从或向一个特定的地方（节点）读写数据。如FileInputStream　</span></span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\">　　　　　　　&nbsp;&nbsp; 处理流：是对一个已存在的流的连接和封装，通过所封装的流的功能调用实现数据读写。如BufferedReader。处理流的构造方法总是要带一个其他的流对象做参数。一个流对象经过其他流的多次包装</span>，</span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\">　　　　　　　这里就涉及到了</span></span><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(255, 0, 0);\">装饰者模式</span><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\">，在后面会详细讲解该模式在IO中的体现。</span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\">&nbsp;</p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\">　　　　1.4、4个基本的抽象流类型，所有的流都继承这四个。</span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\">　　　　　　　　　　　输入流　　　　　　输出流</span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\">　　　　　　字节流　　InputStream　　outputStream</span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\">　　　　　　字符流　　Reader　　　　　　Writer</span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\">　　　　　　inputStream：字节输入流</span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\">　　　　　　outputStream：字节输出流</span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\">　　　　　　Reader：字符输入流</span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\">　　　　　　Writer：字符输出流</span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\">　　　　　</span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\">　　　　<span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\">1.5、总结流的分类</span></span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\">　　　　　　　　看上面的几个分类，可能对于初次学io的同学会感觉到有些混乱，那什么时候用字节流，什么时候该用输出流呢？其实非常简单，举一个例子就学会了，</span></span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\">　　　　　　　　1、首先自己要知道是选择输入流还是输出流，这就要根据自己的情况而定，如果你想从程序写东西到别的地方，那么就选择输出流，反之用输入流</span></span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\">　　　　　　　　2、然后考虑你传输数据时，是选择使用字节流传输还是字符流，也就是每次传1个字节还是2个字节，有中文肯定就选择字符流了。</span></span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\">　　　　　　　　3、前面两步就可以选出一个合适的节点流了，比如字节输入流inputStream，如果要在此基础上增强功能，那么就在处理流中选择一个合适的即可。</span></span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\">&nbsp;</p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 18pt; color: rgb(255, 0, 0); background-color: rgb(51, 204, 204);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(255, 255, 255);\">二、4个基本抽象类的继承关系分析</span>　　　　　　　　　　　　　　　　　　　　　　　　　　　　</span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\">　　　　　<span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(255, 0, 0); font-size: 16px;\">2.1、InputStream 字节输入流</span><br style=\"margin: 0px; padding: 0px;\"/></span></span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\">　　　　　　　　　　<img src=\"https://images2015.cnblogs.com/blog/874710/201705/874710-20170530112251336-478728150.png\" alt=\"\" width=\"532\" height=\"207\" style=\"margin: 0px; padding: 0px; border: 0px; max-width: 900px;\"/></span></span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\">　　　　　　　2.1.1、认识每个类的功能即作用</span></span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\">　　　　　　　　　　　现在就认识一下即可，详细的功能会在后面的博客中写出来。</span></span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\">　　　　　　　　　ByteArrayInputStream：字节数组输入流，该类的功能就是从字节数组(<span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 255);\">byte<span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\">[])中进行以字节为单位的读取，也就是将资源文件都以字节的形式存入到该类中的字节数组中去，我们拿也是从这个字节数组中拿</span></span></span></span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 255);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\">　　　　　　　　　PipedInputStream：管道字节输入流，<span style=\"margin: 0px; padding: 0px; line-height: 1.5;\">它和PipedOutputStream一起使用，能实现多线程间的管道通信</span></span></span></span></span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 255);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5;\">　　　　　　　　　FilterInputStream ：装饰者模式中处于装饰者，具体的装饰者都要继承它，所以在该类的子类下都是用来装饰别的流的，也就是处理类。具体装饰者模式在下面会讲解到，到时就明白了</span></span></span></span></span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 255);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5;\">　　　　　　　　　　　　　　BufferedInputStream：缓冲流，对处理流进行装饰，增强，内部会有一个缓存区，用来存放字节，每次都是将缓存区存满然后发送，而不是一个字节或两个字节这样发送。效率更高</span></span></span></span></span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 255);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5;\">　　　　　　　　　　　　　　DataInputStream：数据输入流，<span style=\"margin: 0px; padding: 0px; line-height: 1.5;\">它是用来装饰其它输入流，它“允许应用程序以与机器无关方式从底层输入流中读取基本 Java 数据类型”</span></span></span></span></span></span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 255);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5;\">　　　　　　　　　FileInputSream：<span style=\"margin: 0px; padding: 0px; line-height: 1.5;\">文件输入流。它通常用于对文件进行读取操作</span></span></span></span></span></span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 255);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(0, 0, 0);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5;\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5;\">　　　　　　　　　　　　File：对指定目录的文件进行操作，具体可以查看讲解File的博文。注意，该类虽然是在IO包下，但是并不继承自四大基础类。</span></span></span></span></span></span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\">&nbsp;　　　　　　&nbsp; 　　ObjectInputStream：对象输入流，<span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\">用来提供对“基本数据或对象”的持久存储。通俗点讲，也就是能直接传输对象，</span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\">&nbsp;</p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\">　　　　　　<span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(255, 0, 0); font-size: 16px;\">2.2、OutputStream 字节输出流</span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\">　　　　　　　　　　　　　　<img src=\"https://images2015.cnblogs.com/blog/874710/201705/874710-20170530121318274-160516931.png\" alt=\"\" width=\"544\" height=\"271\" style=\"margin: 0px; padding: 0px; border: 0px; max-width: 900px;\"/></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\">　　　　　　　　　　具体分析在上面分析过了，只不过和inputStream是相对的，但作用是相同的。</span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\">　　　　　　<span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(255, 0, 0); font-size: 16px;\">2.3、Reader 字符输入流</span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\">　　　　　　　　　　　　　　　　<img src=\"https://images2015.cnblogs.com/blog/874710/201705/874710-20170530121521321-799067835.png\" alt=\"\" width=\"520\" height=\"210\" style=\"margin: 0px; padding: 0px; border: 0px; max-width: 900px;\"/></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\">　　　　　　　　　　　功能也差不多，类似。这里分析一个。</span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\">　　　　　　　　　　　InputStreamReader：转换流&nbsp; 将 字节输入流&nbsp; 转换为&nbsp; 字符输入流。<span style=\"margin: 0px; padding: 0px; line-height: 1.5;\">它是字节流通向字符流的桥梁</span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5;\">　　　　　　<span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(255, 0, 0); font-size: 16px;\">2.4、Writer 字符输出流</span></span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5;\">　　　　　　　　　　　　　　　　　<img src=\"https://images2015.cnblogs.com/blog/874710/201705/874710-20170530121746211-57243059.png\" alt=\"\" width=\"525\" height=\"234\" style=\"margin: 0px; padding: 0px; border: 0px; max-width: 900px;\"/>　</span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 18pt; background-color: rgb(51, 204, 204);\">&nbsp;<span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(255, 255, 255);\">三、装饰者模式的运用</span>　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　<br style=\"margin: 0px; padding: 0px;\"/></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\">　　　　　　<span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 16px; color: rgb(255, 0, 0);\">3.1、什么是装饰者模式？</span></span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 14px;\">　　　　　　　　　　　　推荐一篇博文，<a title=\"http://blog.csdn.net/jason0539/article/details/22713711\" href=\"http://blog.csdn.net/jason0539/article/details/22713711\" target=\"_blank\" style=\"margin: 0px; padding: 0px; color: rgb(7, 93, 179);\">http://blog.csdn.net/jason0539/article/details/22713711</a>&nbsp; 就详细说明了什么是装饰者模式？用我自己的话来说，就是往一个添加更多的功能，而我们首先想到的是继承，继承就很好的符合了我们的要求，不管你想加多少层的功能，都可以使用继承一层层的实现，但是这带来了一个问题，一旦我需要改变我的需求，那么我就需要往源码中改东西，再就是在这个继承链中某个类做一些修改，这不符合我们的设计模式思想，所以就有了装饰者模式，装饰者中拥有被装饰者的实例，然后有什么具体的装饰我们都另写一个类来继承该装饰者，当我们需要该装饰时，就new出该类来，然后将其被装饰者当作参数传递进去。</span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\">&nbsp;　　　　　　　　　　　　　　　　　　<img src=\"https://images2015.cnblogs.com/blog/874710/201705/874710-20170530152826571-1924640286.png\" alt=\"\" width=\"625\" height=\"418\" style=\"margin: 0px; padding: 0px; border: 0px; max-width: 900px;\"/></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\">　　　　　　　　　　关说可能没理解那么清楚，现在来看看一个具体的实例。比如，我们需要制作一份鸡腿堡，流程是怎样的呢？看下图</p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\">　　　　　　　　　　　　　　1、先有基本原料，也就是两块面包，这是不管做什么汉堡都需要的，</p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\">　　　　　　　　　　　　　　2、做什么汉堡，取决于加什么材料，比如生菜，鸡肉等，所以根据材料来做汉堡，想做什么汉堡就加什么材料</p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\">　　　　　　　　　　　　　　3、所有材料加完之后，直接计算价格即可</p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\">　　　　　　　　　　　　这样使用装饰者模式，是不是比一直使用继承方便的多的多呢？换一种汉堡，也不需要改源码，什么也不需要，希望你能够理解清楚其中的思想。</p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\">　　　　　　　　　　　　　　　　　　　　<img src=\"https://images2015.cnblogs.com/blog/874710/201705/874710-20170530160335977-1889860348.png\" alt=\"\" width=\"812\" height=\"351\" style=\"margin: 0px; padding: 0px; border: 0px; max-width: 900px;\"/></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\">&nbsp;</p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\">　　　　　　<span style=\"margin: 0px; padding: 0px; line-height: 1.5; color: rgb(255, 0, 0); font-size: 16px;\">3.2、io流中的装饰者模式的运用</span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\">　　　　　　　　　　　　画张图，在结合源码和自己写的代码来看。</p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\">　　　　　　　　　　　　　　　　　　<img src=\"https://images2015.cnblogs.com/blog/874710/201705/874710-20170530162636930-1288255116.png\" alt=\"\" width=\"887\" height=\"367\" style=\"margin: 0px; padding: 0px; border: 0px; max-width: 900px;\"/></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\">&nbsp;</p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\">　　　　　　　　　　到这里，应该可以对前面的处理流和节点流有所理解了把，其实处理流就是一个具体的装饰者，而节点流就是被装饰者。</p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\">&nbsp;</p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5; font-size: 18pt; background-color: rgb(51, 204, 204); color: rgb(255, 255, 255);\">四、总结　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　</span></p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\">　　　　　　　4.1、应该知道io流的各种类的结构关系，平常我们使用的io类是处于什么样的位置，是一个什么样的流(节点流还是处理流，输入流还是输出流，字节流还是字符流)</p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\">　　　　　　　4.2、装饰者模式在io流中的运用和什么是装饰者模式</p><p style=\"margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);\">　　　　　　　4.3、为什么在使用io流时会将是那样的格式进行编写，将一个流的实例放入另一个流的构造方法中？</p><p><br/></p>',1529485224,1,'',0,10,'','',117),(73,'','1. 配置工具类','<h1 class=\"postTitle\" style=\"margin: 0px; padding: 0px 64px 0px 10px; list-style-type: none; list-style-image: none; font-size: 20px; font-weight: normal; border-left: 3px solid rgb(33, 117, 188);\"><a id=\"cb_post_title_url\" class=\"postTitle2\" href=\"https://www.cnblogs.com/hwaggLee/p/5718733.html\" style=\"text-decoration-line: none; color: black;\">java-工具类-读取配置文件</a></h1><p style=\"margin: 10px auto; padding: 0px; list-style-type: none; list-style-image: none;\">&nbsp;</p><p style=\"margin: 10px auto; padding: 0px; list-style-type: none; list-style-image: none;\">&nbsp;java读取配置文件，当发现文件被修改后则重新加载</p><p style=\"margin: 10px auto; padding: 0px; list-style-type: none; list-style-image: none;\">&nbsp;</p><br/><pre style=\"margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; padding: 0px; list-style-type: none; list-style-image: none; font-family: &quot;Courier New&quot; !important;\">package&nbsp;com.zg.config;import&nbsp;java.io.File;import&nbsp;java.io.FileInputStream;import&nbsp;java.io.IOException;import&nbsp;java.io.InputStreamReader;import&nbsp;java.net.URL;import&nbsp;java.util.Properties;/**\r\n&nbsp;*&nbsp;系统配置文件读取\r\n&nbsp;*&nbsp;@author&nbsp;huage\r\n&nbsp;*&nbsp;*/public&nbsp;class&nbsp;SysConfig&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;Properties&nbsp;props&nbsp;=&nbsp;null;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;File&nbsp;configFile&nbsp;=&nbsp;null;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;long&nbsp;fileLastModified&nbsp;=&nbsp;0L;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;String&nbsp;configFileName&nbsp;=&nbsp;&quot;properties/sys/system.properties&quot;;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;void&nbsp;init()&nbsp;{&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;URL&nbsp;url&nbsp;=&nbsp;SysConfig.class.getClassLoader().getResource(configFileName);&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;configFile&nbsp;=&nbsp;new&nbsp;File(url.getFile());&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fileLastModified&nbsp;=&nbsp;configFile.lastModified();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;props&nbsp;=&nbsp;new&nbsp;Properties();&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;load();&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;void&nbsp;load()&nbsp;{&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try&nbsp;{&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;props.load(new&nbsp;InputStreamReader(new&nbsp;FileInputStream(configFile),&quot;UTF-8&quot;));&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fileLastModified&nbsp;=&nbsp;configFile.lastModified();&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;catch&nbsp;(IOException&nbsp;e)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw&nbsp;new&nbsp;RuntimeException(e);&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;String&nbsp;getConfig(String&nbsp;key)&nbsp;{&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;((configFile&nbsp;==&nbsp;null)&nbsp;||&nbsp;(props&nbsp;==&nbsp;null))&nbsp;init();&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(configFile.lastModified()&nbsp;&gt;&nbsp;fileLastModified)&nbsp;load();&nbsp;//当检测到文件被修改时重新加载配置文件\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;props.getProperty(key);&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(getConfig(&quot;sys.index.name&quot;));&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}}</pre><p><span style=\"line-height: 1.5 !important;\"><br/></span></p><p><span class=\"cnblogs_code_copy\" style=\"padding-right: 5px; line-height: 1.5 !important;\"><a title=\"复制代码\" style=\"color: rgb(51, 153, 255); border: none !important;\"></a></span></p><p><br/></p>',1529485427,1,'',0,10,'','',119);

#
# Structure for table "x_oc"
#

CREATE TABLE `x_oc` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `bb` text NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=13 DEFAULT CHARSET=utf8 COMMENT='武汉大学课程简介';

#
# Data for table "x_oc"
#

INSERT INTO `x_oc` VALUES (1,'<p>课程内容：</p><p>java分为三个平台，分别是J2SE，J2EE,J2ME。</p><p>J2SE</p><p>java标准基础应用平台，J2SE主要是一些JAVA的基础类东西和一些桌面软件的开发是和VB还有Deliph一样的东西，属于C/S架构的，不怎么使用了主要是打打基础的语言。</p><p>J2EE</p><p>企业级开发应用平台，主要的框架有Struts+Spring+Hibernate等主要框架。</p><p>J2EE是一套全然不同于传统应用开发的技术架构，包含许多组件，主要可简化且规范应用系统的开发与部署，进而提高可移植性、安全与再用价值。</p><p>J2EE核心是一组技术规范与指南，其中所包含的各类组件、服务架构及技术层次，均有共通的标准及规格，让各种依循J2EE架构的不同平台之间，存在良好的兼容性，解决过去企业后端使用的信息产品彼此之间无法兼容，导致企业内部或外部难以互通的窘境。</p><p>J2ME</p><p>微缩版开发应用平台，主要是手机类开发用的。</p><p>J2ME是一种高度优化的Java运行环境，主要针对消费类电子设备的，例如蜂窝电话和可视电话、数字机顶盒、汽车导航系统等等。J2ME技术在1999年的JavaOne Developer Conference大会上正式推出，它将Java语言的与平台无关的特性移植到小型电子设备上,允许移动无线设备之间共享应用程序。</p><p><br/></p><p>培养目标：</p><p>1、精通JavaEE平台开发的java软件工程师，能够胜任各种行业的企业级软件开发工作；</p><p>2、具备一年以上软件开发经验；</p><p>3、熟悉java软件开发流程；具备解决主要问题的能力；</p><p>4、良好的语言表达、沟通能力、工作责任心和团队意识。</p><p><br/></p>');

#
# Structure for table "x_outstandingpro_pid"
#

CREATE TABLE `x_outstandingpro_pid` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=8 DEFAULT CHARSET=utf8 COMMENT='武汉大学成员类别';

#
# Data for table "x_outstandingpro_pid"
#

INSERT INTO `x_outstandingpro_pid` VALUES (1,'指导老师'),(2,'项目组'),(3,'往届学生');

#
# Structure for table "x_outstandingprogram"
#

CREATE TABLE `x_outstandingprogram` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `pid` int(10) NOT NULL COMMENT '视频类别id',
  `name` varchar(255) NOT NULL COMMENT '简介',
  `ynum` varchar(255) NOT NULL COMMENT '标题',
  `snum` varchar(255) NOT NULL COMMENT '视频截图',
  `is_show` int(2) NOT NULL DEFAULT '1' COMMENT '1显示 0不显示',
  `sort` int(10) NOT NULL DEFAULT '10',
  `is_s` int(10) NOT NULL DEFAULT '0',
  `is_t` int(10) NOT NULL DEFAULT '0',
  `img` varchar(255) DEFAULT NULL,
  `content` text,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=112 DEFAULT CHARSET=utf8 COMMENT='武汉大学学校成员';

#
# Data for table "x_outstandingprogram"
#

INSERT INTO `x_outstandingprogram` VALUES (3,3,'秦可晨 ','本科生','qinkechen@whu.edu.cn ',1,10,1,0,'2018-06-20/5b2a1d7b39f9e.jpg','<p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><strong>秦可晨</strong><br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\">本科生<br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); text-align: justify; position: relative; left: 20px;\">邮箱:qinkechen@whu.edu.cn&nbsp;</p><p><br/></p>'),(4,3,'徐洁斌   ','本科生','xujiebin@whu.edu.cn ',1,10,1,0,'2018-06-20/5b2a1db122743.jpg','<p><span style=\"font-size: 18px;\"></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><strong>徐洁斌</strong><br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\">本科生<br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); text-align: justify; position: relative; left: 20px;\">邮箱:xujiebin@whu.edu.cn&nbsp;<br/></p><p><ul><li><p><span style=\"font-size: 18px;\"></span></p></li><br/></ul></p><p><br/></p>'),(5,3,'万瑞卿   ','本科生','wanruiqing@whu.edu.cn ',1,10,1,0,'2018-06-20/5b2a1dc5b9d60.jpg','<p><span style=\"font-size: 18px;\"></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><strong>万瑞卿</strong><br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\">本科生<br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); text-align: justify; position: relative; left: 20px;\">邮箱:wanruiqing@whu.edu.cn</p><p><ul><li><p><span style=\"font-size: 18px;\"></span></p></li><br/></ul></p><p><br/></p>'),(6,3,'杨南海   ','本科生','yangnanhai@whu.edu.cn ',1,10,1,1,'2018-06-20/5b2a1dea0f9c1.jpg','<p><span style=\"font-size: 18px;\"></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><strong>杨南海</strong><br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\">本科生<br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); text-align: justify; position: relative; left: 20px;\">邮箱:yangnanhai@whu.edu.cn</p><p><ul><li><p><span style=\"font-size: 18px;\"></span></p></li><br/></ul></p><p><br/></p>'),(7,3,'高琦     ','本科生','gaoqi@whu.edu.cn ',1,10,1,1,'2018-06-20/5b2a1e0423522.jpg','<p><span style=\"font-size: 18px;\"></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><strong>高琦</strong><br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\">本科生<br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); text-align: justify; position: relative; left: 20px;\">邮箱:gaoqi@whu.edu.cn</p><p><ul><li><p><span style=\"font-size: 18px;\"></span></p></li><br/></ul></p><p><br/></p>'),(8,3,'杨承瑞   ','本科生',' yangchengrui@whu.edu.cn ',1,10,1,1,'2018-06-20/5b2a1e30de810.jpg','<p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><strong>杨承瑞</strong><br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\">本科生<br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); text-align: justify; position: relative; left: 20px;\">邮箱:yangchengrui@whu.edu.cn&nbsp;</p><p><br/></p>'),(9,3,'刘靓雯   ','本科生','liuliangwen@whu.edu.cn ',1,10,1,1,'2018-06-20/5b2a1e4025630.jpg','<p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><strong>刘靓雯</strong><br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\">本科生<br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); text-align: justify; position: relative; left: 20px;\">邮箱:liuliangwen@whu.edu.cn</p><p><br/></p>'),(10,2,'智能制造小组','陈舜尧','',1,10,0,1,'2018-06-20/5b2a227ead027.jpg','<p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><strong>智能制造小组</strong><br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><img src=\"/ueditor/php/upload/image/20180620/1529491086215244.jpg\" title=\"1529491086215244.jpg\" alt=\"1529491086215244.jpg\" width=\"128\" height=\"128\" border=\"0\" vspace=\"0\" style=\"width: 128px; height: 128px;\"/>成员：陈舜尧<br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); text-align: justify; position: relative; left: 20px;\">开发的同泰智能数字制造平台是数控编程和工艺规划软件。 借助于计算机软硬件技术和支撑环境，利用计算机进行数值计算、逻辑判断和推理等的功能来制定零件机械加工工艺过程。 用于解决手工工艺设计效率低、一致性差、质量不稳定、不易达到优化等问题。&nbsp;</p><p><br/></p>'),(11,3,'张杨 ','研究生 ',' zhangyang@whu.edu.cn',1,10,1,1,'2018-06-20/5b2a1e4963fc5.jpg','<p><span style=\"font-size: 18px;\"></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><strong>张杨</strong><br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\">研究生<br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); text-align: justify; position: relative; left: 20px;\"><span style=\"font-size: 12px; color: rgb(0, 0, 0);\">邮箱:zhangyang@whu.edu.cn</span></p><p><ul><li><p><span style=\"font-size: 18px;\"></span></p></li><br/></ul></p><p><br/></p>'),(12,1,'韩波','副教授','hanboemail@163.com ',1,3,0,1,'2018-06-20/5b2a201bdba50.jpg','<p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><strong>韩波</strong><br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\">副教授<br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); text-align: justify; position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\">邮箱:hanboemail@163.com</span></p><p><br/></p>'),(13,1,'朱卫平','副教授','wpzhu@whu.edu.cn ',1,1,1,1,'2018-06-20/5b2a200419ad5.jpg','<p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(242, 242, 242);\"><span style=\"font-size:24px\">朱卫平博士<br/></span>副教授，楚天学子，珞珈青年学者&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(242, 242, 242);\">朱卫平博士毕业于香港理工大学电子计算学系, 硕士和本科分别毕业上海交通大学和重庆大学。在加入武汉大学之前，曾先后在香港大学任多年技术主任和在香港理工大学任博士后研究员。也曾到法国IRISA-INRIA研究所(法国国家科学研究院, 法国国立计算机及自动化研究院, 雷恩一大成立的联合研究机构)进行访问研究，取得了丰富的研究成果。2014年6月作为优秀青年学术骨干以人才引进的方式加入武汉大学, 当年评选为“珞珈青年学者”,随后入选湖北省“楚天学子”人才计划。</p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(242, 242, 242);\">主要研究兴趣为RFID与传感器网络、大数据和云计算、分布式计算。总计发表论文四十余篇，其中SCI十四篇、EI二十余篇，以第一作者在中国计算机学会推荐的A类国际顶级期刊/会议（IEEE Transactions on Parallel and Distributed Systems（TPDS）、IEEE Transactions on Computers(TC)、IEEE INFOCOM）上发表有4篇高质量论文。获得了国际会议CCBD 2014最佳论文奖,CCBD 2015最佳论文奖提名,2017年全国智能科学技术教育暨教学学术研讨会优秀论文奖。作为全球杰出青年学者之一参加了第三届海德堡获奖者论坛, 与图灵奖、阿贝尔奖、菲尔兹奖获得者等顶尖学者进行座谈。是多个国际会议如MobiSPC 2014，CCBD 2014，TENSYMP 2015，UIC/ATC 2015，Smartcomp 2016, NCSC 2017, UIC 2018的研讨会主席或技术委员会成员，和多个国际顶级或知名SCI期刊（TPDS, TC, TMC, JPDC, PPNA, PMC, IEEE Network, Ad Hoc &amp; Sensor Wireless Networks， KSII Transactions on Internet and Information Systems，Mobile Networks and Applications）的审稿人。</p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(242, 242, 242);\">目前主持国家自然科学基金青年项目1项，湖北省自然科学基金1项，国家重点实验室开发课题1项，中央高校基本业务经费项目1项，武汉大学引进人才基金项目1项，横向项目多项。其作为关键成员在曾参与过多项香港科研项目和与法国、德国的国际合作项目。其中包括香港研究资助局优配研究基金、香港创新科技署创新技术基金、法国国家研究署与香港研究资助局联合研究项目、德国/香港联合研究项目、法国/香港联合研究项目等。在应用开发上也有丰富经验，作为关键成员开发了第7届全国大学生运动会武术评分系统、香港中小学移动式电子学习平台、深圳盐田港RFID集装箱堆场系统等。获得软件著作权6项，申请专利3项。</p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(242, 242, 242);\">具有丰富的学生指导经验，每年指导毕业本科生研究生十余名，累计指导多名学生参加各类学科竞赛，包括成功申请3项国家级大学生创新创业训练项目，3项武汉大学大学生创新创业训练项目，指导获得高校物联网创新大赛三等奖等。每位团队成员均由本人亲自悉心指导。</p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(242, 242, 242);\">机会总是青睐有准备的人，欢迎计算机、软件、数学及相关专业的研究生和本科生加入课题组一起学习工作！课题组力求发表高水平论文、专利和开发高智能应用。课题组将为每一位学生提供优越的科研环境和良好的成长氛围，努力为大家创造学术交流和出国深造的机会和条件。也欢迎各位同学提前准备毕业设计、学科竞赛、学术会议投稿等项目。</p><p><img src=\"http://wh.zbsykwx.com/Public/ueditor/themes/default/images/spacer.gif\" style=\"background:url(http://wh.zbsykwx.com/Public/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/%E9%AA%91%E8%A1%8C%E8%80%85/Desktop/%E6%96%B0%E5%BB%BA%E6%96%87%E4%BB%B6%E5%A4%B9/web/web/images/stories/zhuweiping_homepage.jpg\"/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\"><a href=\"http://www.bdcclab.com/recruit.ppt\" style=\"color: rgb(51, 51, 51);\"><strong><span style=\"color:#FF0000\">学生招募信息（点击下载）</span></strong></a></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\">欢迎选修或旁观本人教授课程&nbsp;<br/>信息安全 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;地点：国软201教室&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 时间：1--18周 星期四 3-4节&nbsp;<br/>模式识别 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;地点：国软504教室&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 时间：1--18周 星期五 3-4节&nbsp;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;或者&nbsp; 地点：国软404教室&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 时间：1--18周 星期五 6-7节&nbsp;<br/>新型计算与应用模式 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;地点：国软501教室&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 时间：3--8周 &nbsp;星期三&nbsp; 6-8节</p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\"><br/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\">曾讲授课程<br/>1)商务智能与数据挖掘 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br/>2)数据库原理&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br/>3)云计算与云存储<br/>4)新型计算与应用模式 （博士课程）&nbsp;<br/>5)信息与网络安全<br/>6)软件工程&nbsp;<br/>7)软件需求分析&nbsp;<br/>8)中间件技术</p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(242, 242, 242);\">有用信息&nbsp;<br/>1)&nbsp;<a href=\"http://www.comp.polyu.edu.hk/\" target=\"new\" style=\"color: rgb(51, 51, 51);\">香港理工大学电子计算学系博士生招生计划</a>：博士研究生每年提供至少18万以上奖学金。特别优秀的申请人如果申请到香港博士研究生计划，学生每年的奖学金是36万，并免除4万2千的学费&nbsp;<br/>2)&nbsp;<a href=\"http://l.web.umkc.edu/lizhu/\" target=\"new\" style=\"color: rgb(51, 51, 51);\">University of Missouri, Kansas City，Dr. Zhu Li 博士生招募</a>：PhD Scholarships are available for 2 self-motivated students.<br/>2) 欢迎访问海德堡论坛官网：<a href=\"http://www.heidelberg-laureate-forum.org/event_2015/\" style=\"color: rgb(51, 51, 51);\">http://www.heidelberg-laureate-forum.org/event_2015</a></p><p><br/></p>'),(14,1,'杨威','博士','yangweisklse@whu.edu.cn ',1,2,0,1,'2018-06-20/5b2a2010dd4d6.jpg','<p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><strong>杨威</strong><br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\">博士<br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); text-align: justify; position: relative; left: 20px;\">邮箱:yangweisklse@whu.edu.cn&nbsp;</p><p><br/></p>'),(15,1,'崔晓辉','教授','xcui@whu.edu.cn ',1,9,1,1,'2018-06-20/5b2a1ff97eb50.jpg','<p><span style=\"font-size: 18px;\">基本信息</span></p><p><img src=\"http://www.wuhandaxue.com/Public/ueditor/themes/default/images/spacer.gif\" style=\"background:url(http://www.wuhandaxue.com/Public/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/zbsyk1001/Desktop/web/web/images/stories/cuixiaohui.jpg\"/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px;\"><span style=\"font-size: 18px;\"><span style=\"font-size: 24px;\">崔晓晖教授<br/>国际软件学院院长<br/>湖北省“百人计划”入选者</span><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔晓晖教授毕业于美国路易斯维尔大学，目前是经全球招聘后被选任的武汉大学国际软件学院院长。在此之前，崔教授在美国能源部橡树岭国家实验室任正研究员。同时还担任了美国路易斯维尔大学的讲座副教授，美国田纳西大学、纽约理工大学兼职教授等职务。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授长期从事计算机软件工程、集群智能以及高性能计算的理论与实践研究。崔教授领导团队用群集智能和图形加速器技术用于加速大规模城市交通模拟并进行大数据分析，该成果被用于美国多个部门采用。崔教授发展了异构型并行计算的编程模型和运行环境，提高了异构型集群并行计算的性能和能源利用效率。其成果被应用于对橡树岭实验室克雷XT5超级通用计算机，从而在2012年保住了橡树岭实验室世界最快计算机的称号。崔教授丰富的理论和项目经验可以为本项目的理论建模、方法设计、仿真系统开发提供指导。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;崔教授发表论文60多篇，其中SCI 6篇。曾承担美国5项国家重大项目，纵向课题费近300万，目前承担国家自然科学基金面上项目和湖北省自然基金重点项目各一项。崔教授是北美计算社会及组织科学协会，北美交通委员会会员，也长期担任美国国防部，能源部和空军等研究项目评委。他受邀或被遴选为国际会议报告人 50多次。崔教授的研究工作已被美国NBC电视台，时代自由周刊以及英国新科学家杂志等新闻媒体报道，并获得多个奖励，包括美国能源部杰出导师奖（2008，2009）、美国国家实验室特级贡献奖（2009），橡树岭国家实验室特别事件奖（2009)等。</span></p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">教育经历</span></h3><li><p><span style=\"font-size: 18px;\">2000/09 - 2004/06 美国路易斯维尔大学，计算机系,博士</span></p></li><li><p><span style=\"font-size: 18px;\">1997/09 -2000/06 武汉大学，计算机系，硕士</span></p></li><li><p><span style=\"font-size: 18px;\">1992/09 -1996/06 武汉测绘科技大学，光仪系，工学学士</span></p></li><h3 style=\"font-family: &quot;Microsoft YaHei&quot;, Arial, Helvetica, sans-serif; font-size: 20px; margin: 1em 0px; padding: 0px;\"><span style=\"font-size: 18px;\">工作经历</span></h3><li><p><span style=\"font-size: 18px;\">2013 －至今武汉大学国际软件学院院长</span></p></li><li><p><span style=\"font-size: 18px;\">2010 – 2013 美国能源部橡树岭国家实验室，计算数据分析部,研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2011 – 2013纽约理工大学，计算机系，院长助理（兼）</span></p></li><li><p><span style=\"font-size: 18px;\">2009 – 2012 路易斯维尔大学，计算机系， 副教授</span></p></li><li><p><span style=\"font-size: 18px;\">2006 – 2010 美国能源部橡树岭国家实验室， 应用软件工程部， 副研究员</span></p></li><li><p><span style=\"font-size: 18px;\">2004 – 2006 美国能源部橡树岭国家实验室，博士后</span></p></li><li><p><span style=\"font-size: 18px;\">2000 – 2004 美国路易斯维尔大学，计算机系，研究助理</span></p></li><li><p><span style=\"font-size: 18px;\">2000 武汉测绘科技大学，副高级工程师</span></p></li><li><p><span style=\"font-size: 18px;\">1997 – 2000 武汉测绘科技大学，网络中心，副主任</span></p></li><li><p><span style=\"font-size: 18px;\">1992 – 1997武汉测绘科技大学，设备处，工程师</span></p></li></ul><p><br/></p>'),(16,1,'王志波','博士','wangzhibo@whu.edu.cn ',1,4,0,1,'2018-06-20/5b2a2026ae9d0.jpg','<p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><strong>王志波</strong><br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\">博士<br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); text-align: justify; position: relative; left: 20px;\">邮箱:wangzhibo@whu.edu.cn</p><p><br/></p>'),(17,1,'李伟','博士','lw8484654@163.com',1,5,0,1,'2018-06-20/5b2a202da7d20.jpg','<p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><strong>李伟</strong><br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\">博士<br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); text-align: justify; position: relative; left: 20px;\">邮箱:lw8484654@163.com&nbsp;</p><p><br/></p>'),(18,2,'云计算小组','熊光裕、刘佳兴、张闻','',1,10,0,0,'2018-06-20/13.jpg','<p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><strong>云计算小组</strong><br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><img src=\"/ueditor/php/upload/image/20180620/1529491573128286.jpg\" title=\"1529491573128286.jpg\" alt=\"13.jpg\"/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\">成员：熊光裕、刘佳兴、张闻<br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); text-align: justify; position: relative; left: 20px;\">云计算小组基于openstack云平台在Hadoop云系统下进行海量遥感数据的存储与处理。使用自行编写的下载器及GDAL工具辅助实现的各种图像处理方法，旨在摒弃传统GIS低效率处理的特点，于大规模集群上并行高效的进行运作。&nbsp;<br/></p><p><br/></p>'),(19,2,'大数据与人口迁移组','李汉杰、孙田润、纪煜杰','',1,10,0,1,'2018-06-20/5b2a21ffe7a84.jpg','<p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><strong style=\"font-size: 14.4px; color: rgb(0, 0, 0);\">大数据与人口迁移组</strong><br/></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><img src=\"/ueditor/php/upload/image/20180620/1529491813917136.jpg\" title=\"1529491813917136.jpg\" alt=\"1529491813917136.jpg\" width=\"128\" height=\"128\" style=\"width: 128px; height: 128px;\" border=\"0\" vspace=\"0\"/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\">成员：李汉杰、孙田润、纪煜杰<br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); text-align: justify; position: relative; left: 20px;\">人口迁移组之前研究人口迁移与气候变化的关联模型（仿真），目前正在研究地图火灾后人员逃生的仿真。主要是利用angent模型，然后设计寻路算法，模拟人员的逃跑路线。仿真结果通过unity3d展示。</p><p><br/></p><p><br/></p><p><br/></p><p><br/></p><p><br/></p><p><br/></p>'),(20,2,'Halo云计算小组','李颖、胡快、李高乐','',1,10,0,1,'2018-06-20/12.jpg','<p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><strong>Halo云计算小组</strong><br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><img src=\"/ueditor/php/upload/image/20180620/1529491159847640.jpg\" title=\"1529491159847640.jpg\" alt=\"1529491159847640.jpg\" width=\"128\" height=\"128\" border=\"0\" vspace=\"0\" style=\"width: 128px; height: 128px;\"/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\">成员：李颖、<a href=\"file:///C:/Users/zbsyk1001/Desktop/web/web/members/hukuai_ch.htm\" style=\"color: rgb(51, 51, 51);\">胡快</a>、<a href=\"file:///C:/Users/zbsyk1001/Desktop/web/web/members/ligaole_ch.htm\" style=\"color: rgb(51, 51, 51);\">李高乐</a><br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); text-align: justify; position: relative; left: 20px;\">Halo云计算小组目前有三位2012级软件工程国际班的同学组成，他们以较好的英语学习水平和专业知识为背景，学习探索云计算领域的相关课题。（曾经完成过基于Openstack的教学系统设计与基于云平台的自主可控系统设计，）目前主要学习方向是遥感图像的云计算与云存储。</p><p><br/></p>'),(21,2,'移动医疗小组','卢鹏、李文雷、梁越','',1,10,0,1,'2018-06-20/11.jpg','<p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><strong>移动医疗小组</strong><br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><img src=\"/ueditor/php/upload/image/20180620/1529491272665529.jpg\" title=\"1529491272665529.jpg\" alt=\"1529491272665529.jpg\" width=\"128\" height=\"128\" border=\"0\" vspace=\"0\" style=\"width: 128px; height: 128px;\"/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\">成员：卢鹏、李文雷、梁越<br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); text-align: justify; position: relative; left: 20px;\">利用手机内置传感器和智能手环采集加速度、心率、位置等数据，以智能手机为平台进行处理、传输和展示，手机端将采集的数据进行及时处理，结果通过直观的界面展示出来，利用手机通信将采集的数据传输到远程服务器存储和共享，服务器端通过长期的数据分析得到健康状况并生成健康方案推送到手机上。&nbsp;</p><p><br/></p>'),(22,2,'智能家居','王帅、井溢洋','',1,10,0,0,'2018-06-20/14.jpg','<p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><strong>智能家居</strong><br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><img src=\"/ueditor/php/upload/image/20180620/1529491320786534.jpg\" title=\"1529491320786534.jpg\" alt=\"14.jpg\"/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\">成员：王帅、井溢洋<br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); text-align: justify; position: relative; left: 20px;\">小组主要参与智能家居部分的拓展研发。现阶段主要做通过蓝牙4.0控制锅体，进而实现‘一键’智能炒菜（或买菜）。 未来希望能做到对更多家居设备的远程便捷‘一键’操作。</p><p><br/></p>'),(23,2,'复杂网络组','汪旭方、杨拓','',1,10,0,0,'2018-06-20/1.jpg','<p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><strong>复杂网络组</strong><br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><img src=\"/ueditor/php/upload/image/20180620/1529491367295025.jpg\" title=\"1529491367295025.jpg\" alt=\"1.jpg\"/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\">成员：汪旭方、杨拓<br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); text-align: justify; position: relative; left: 20px;\">在网络理论的研究中，复杂网络是由数量巨大的节点和节点之间错综复杂的关系共同构成的网络结构。对复杂网络的定量与定性特征的研究正 渗透到数理学科、生命学科和工程学科等众多不同的领域。目前正在研究武汉的公交、地铁网络。&nbsp;<br/></p><p><br/></p>'),(24,2,'RFID仿真模拟组','裴祎鹏、万宏宇','',1,10,0,0,'2018-06-20/5.jpg','<p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><strong>RFID仿真模拟组</strong><br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><img src=\"/ueditor/php/upload/image/20180620/1529491397136625.jpg\" title=\"1529491397136625.jpg\" alt=\"5.jpg\"/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\">成员：裴祎鹏、万宏宇<br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); text-align: justify; position: relative; left: 20px;\">RFID仿真组主要是大规模RFID系统中的复杂数据收集的仿真与研究，包括身份识别，数目估计，种类识别等。目前主要研究的是RFID身份识别，主要研究的包括ALOHA，Tree，ASAP等RFID标签防碰撞算法，及这些算法的模拟实现与时效，帧成功率，能效等各项相关数据的分析。<br/></p><p><br/></p>'),(25,2,'手机资费优化系统','何桂挺','',1,10,0,0,'2018-06-20/8.jpg','<p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><strong>手机资费优化系统</strong><br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><img src=\"/ueditor/php/upload/image/20180620/1529491510197343.jpg\" title=\"1529491510197343.jpg\" alt=\"8.jpg\"/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\">成员：何桂挺<br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); text-align: justify; position: relative; left: 20px;\">完成对移动通信资费采集与分析系统。包括： 移动通信资费采集、移动通信资费数据分析两块内容。该系统将采集用户手机历史通话信息和资费信息，根据采集到的数据分别统计分析用户与其他联系人的通信情况信息。</p><p><br/></p>'),(26,2,'RFID中间件设计','李小刚、欧阳俊、黎作友、张碧蓉、杜晓涵','',1,10,0,0,'2018-06-20/6.jpg','<p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><strong>RFID中间件设计</strong><br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><img src=\"/ueditor/php/upload/image/20180620/1529491541296187.jpg\" title=\"1529491541296187.jpg\" alt=\"6.jpg\"/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\">成员：李小刚、欧阳俊、黎作友、张碧蓉、杜晓涵<br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); text-align: justify; position: relative; left: 20px;\">小组主要研究任务是管理固定式读写器和移动式读写器，并从读写器中读取原始数据，同时进行数据处理。然后利用有效的数据在移动端做设备管理的应用系统，在固定端做人员考勤的应用系统，对于他们的表现，让我们拭目以待！<br/></p><p><br/></p>'),(27,2,'网络信息聚合小组','高天培、韦晓慷','',1,10,0,0,'2018-06-20/9.jpg','<p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><strong>网络信息聚合小组</strong><br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><img src=\"/ueditor/php/upload/image/20180620/1529491685223593.jpg\" title=\"1529491685223593.jpg\" alt=\"Twitter.jpg\"/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\">成员：高天培、韦晓慷<br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); text-align: justify; position: relative; left: 20px;\">针对日益激增的网络信息，人们迫切需要一个简单快捷的办法来聚合这些信息，以便能高效接收。网络信息聚合小组的任务就是研究并设计出这样一套系统，根据用户定制的内容对海量网络信息进行分析、提取并整合，最终将整理好的信息反馈给用户。这将大大节省用户不必要的时间。</p><p><br/></p>'),(28,2,'推特情感挖掘项目组','陈伦荣、贾若英、高山、向昊','',1,10,0,0,'2018-06-20/10.jpg','主要研究基于twitter平台的情感分类以及情感实体挖掘。爬取twitter上的推文数据并存储到mongodb中，搭建分类器进行情感分类，并进一步实现情感实体的挖掘，探索诱发此类情感的实体因素。'),(29,2,'城市交通模拟','侯泽远、孔梦蝶、王聪伟','',1,10,0,0,'2018-06-20/2.jpg','<p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><strong>城市交通模拟</strong><br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><img src=\"/ueditor/php/upload/image/20180620/1529491721133562.jpg\" title=\"1529491721133562.jpg\" alt=\"jiaotongmoni.jpg\"/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\">成员：侯泽远、孔梦蝶、王聪伟<br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); text-align: justify; position: relative; left: 20px;\">主要研究智能交通在城市交通模拟方面的应用，包括基于绿色驾驶的路线规划、交互式智能交通、分布式智能交通模拟以 及智能交通灯。</p><p><br/></p>'),(30,2,'库内导航小组','罗贤明、鲁茜','',1,10,0,0,'2018-06-20/3.jpg','<p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><strong>库内导航小组</strong><br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><img src=\"/ueditor/php/upload/image/20180620/1529491741125011.jpg\" title=\"1529491741125011.jpg\" alt=\"kuneidaohang.jpg\"/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\">成员：罗贤明、鲁茜<br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); text-align: justify; position: relative; left: 20px;\">设计并完成基于Android的库内导航系统。系统为C/S架构，为美的武汉工业园的材料供应链提供信息化的系统管理。实现了导航定位、消息推送、路况查询、运输业务流程管理、基础信息数据管理、帐号信息管理等功能。</p><p><br/></p>'),(31,2,'社交媒体信息融合组','王帅、詹辉、周重邑、孙嘉文','',1,10,0,0,'2018-06-20/7.jpg','<p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><strong>社交媒体信息融合组</strong><br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\"><img src=\"/ueditor/php/upload/image/20180620/1529491764572925.jpg\" title=\"1529491764572925.jpg\" alt=\"shejiaoxinxi.jpg\"/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); position: relative; left: 20px;\"><span style=\"color: rgb(0, 0, 0);\">成员：王帅、詹辉、周重邑、孙嘉文<br/></span></p><p style=\"margin-top: 1em; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, Helvetica, sans-serif; font-size: 14.4px; white-space: normal; background-color: rgb(242, 242, 242); text-align: justify; position: relative; left: 20px;\">本组主要研究基于多社交媒体的用户身份识别与个体信息融合。主要研究内容分为两个部分，用户身份识别与个体信息融合，前者使用社交关系矩阵相似性计算的办法识别在不同社交网络中的用户，后者使用自然语言处理的办法融合个体在不同社交网络中的信息。&nbsp;<br/></p><p><br/></p>');

#
# Structure for table "x_sanke"
#

CREATE TABLE `x_sanke` (
  `id` int(10) NOT NULL,
  `pid` int(10) NOT NULL COMMENT '视频类别id',
  `name` varchar(255) NOT NULL COMMENT '简介',
  `is_show` int(2) NOT NULL DEFAULT '1' COMMENT '1显示 0不显示',
  `sort` int(10) NOT NULL DEFAULT '10',
  `is_s` int(10) NOT NULL DEFAULT '0'
) ENGINE=MyISAM AUTO_INCREMENT=56 DEFAULT CHARSET=utf8 COMMENT='武汉大学课程三级分类';

#
# Data for table "x_sanke"
#

INSERT INTO `x_sanke` VALUES (14,4,'2. Java面向对象入门',1,2,1),(15,4,'3. Java基本语法',1,3,1),(22,4,'4. Java类和对象',1,4,1),(23,4,'5. Java注解',1,5,1),(26,4,'6. Java接口和继承',1,6,1),(27,4,'7. 数字与字符串',1,7,1),(16,4,'8. Java泛型',1,8,1),(25,4,'9. Java包结构',1,9,1),(18,4,'10. Java异常',1,10,1),(19,4,'11. Java并发入门',1,11,1),(20,4,'12. Java IO基础类',1,12,1),(21,4,'13. Java系统平台常用类',1,13,1),(24,4,'1. Java技术起步',1,1,1),(2,2,'1. Java.lang基础',1,1,1),(3,2,'2. java.util基础',1,2,1),(9,3,'2. Servlet基础',1,7,1),(10,3,'3. JSP基础',1,8,1),(11,3,'4. 前端基础',1,9,1),(12,3,'5. JDBC基础',1,10,1),(17,2,'3. java.io基础',1,3,1),(13,3,'6. Servlet与JSP开发框架',1,11,1),(5,2,'4. java.text基础',1,4,1),(6,2,'5. java.beans基础',1,5,1),(7,2,'6. java.time基础',1,6,1),(8,3,'1. web协议',1,6,1);

#
# Structure for table "x_sike"
#

CREATE TABLE `x_sike` (
  `id` int(10) NOT NULL,
  `pid` int(10) NOT NULL COMMENT '视频类别id',
  `name` varchar(255) NOT NULL COMMENT '简介',
  `is_show` int(2) NOT NULL DEFAULT '1' COMMENT '1显示 0不显示',
  `sort` int(10) NOT NULL DEFAULT '10',
  `is_s` int(10) NOT NULL DEFAULT '0',
  `view` varchar(255) DEFAULT NULL
) ENGINE=MyISAM AUTO_INCREMENT=56 DEFAULT CHARSET=utf8 COMMENT='武汉大学课程四级分类';

#
# Data for table "x_sike"
#

INSERT INTO `x_sike` VALUES (1,2,'Java数字操作',1,10,0,'href=\"/the/ip/kp/1.M\"'),(2,2,'Java字符串操作',1,10,0,NULL),(3,2,'Java 对象基础',1,10,0,NULL),(4,2,'Java数学库基础',1,10,0,NULL),(5,2,'Java线程基础',1,10,0,NULL),(6,2,'Java进程基础',1,10,0,NULL),(7,2,'Java系统编程基础',1,10,0,NULL),(8,2,'Java类操作',1,10,0,NULL),(9,3,'java.util介绍',1,10,0,'href=\"/the/ip/kp/9.M\"'),(10,3,'java.util集合类   ',1,10,0,NULL),(11,3,'java.util.concurrent并发类   ',1,10,0,NULL),(12,3,'java.util 其他工具类  ',1,10,0,NULL),(13,3,'java.regex 正则  ',1,10,0,NULL),(14,3,'java.util.prefs 偏好类   ',1,10,0,NULL),(15,3,'java.util.zip 压缩工具类',1,10,0,NULL),(16,17,' java.io文件类   ',1,10,0,'href=\"/the/ip/kp/16.M\"'),(17,17,' java.io 输入输出流   ',1,10,0,NULL),(18,17,' java.io 字符流',1,10,0,NULL),(19,5,'java.text包简介    ',1,10,0,'href=\"/the/ip/kp/19.M\"'),(20,5,'java.text.MessageFormat   ',1,10,0,NULL),(21,5,'java.text.NumberFormat   ',1,10,0,NULL),(22,5,'java.text.SimpleDateFormat',1,10,0,NULL),(23,6,'Java Bean读取修改',1,10,0,'href=\"/the/ip/kp/23.M\"'),(24,6,'Java Bean Encoder',1,10,0,NULL),(25,7,'java.time新时间包来由   ',1,10,0,'href=\"/the/ip/kp/25.M\"'),(26,7,'java.time日期时间新类   ',1,10,0,NULL),(27,7,'java.time时间间隔操作   ',1,10,0,NULL),(28,7,'java.time格式化',1,10,0,NULL),(29,8,'HTTP 1.x协议   ',1,10,0,'href=\"/the/ip/kp/29.M\"'),(30,8,'HTTPS协议   ',1,10,0,NULL),(31,8,'HTTP2.0',1,10,0,NULL),(32,9,'WEB开发历史   ',1,10,0,'href=\"/the/ip/kp/32.M\"'),(33,9,'Servlet基础   ',1,10,0,NULL),(34,9,'Servlet开发环境配置   ',1,10,0,NULL),(35,9,'Servlet常用类',1,10,0,NULL),(36,10,'JSP实现原理   ',1,10,0,'href=\"/the/ip/kp/36.M\"'),(37,10,'JSP默认对象   ',1,10,0,NULL),(38,10,'JSP scriptlet   ',1,10,0,NULL),(39,10,'EL表达式Expression Language',1,10,0,NULL),(40,11,'HTML   ',1,10,0,'href=\"/the/ip/kp/40.M\"'),(41,11,'CSS   ',1,10,0,NULL),(42,11,'Javascript   ',1,10,0,NULL),(43,11,'JQuery',1,10,0,''),(44,12,'MySQL&工具安装   ',1,10,0,'href=\"/the/ip/kp/44.M\"'),(45,12,'JDBC API   ',1,10,0,NULL),(46,12,'SQL学习',1,10,0,NULL),(47,13,'MVC介绍   ',1,10,0,'href=\"/the/ip/kp/47.M\"'),(48,13,'Servlet入口MVC开发    ',1,10,0,NULL),(49,13,'JSP入口MVC开发',1,10,0,NULL),(50,24,'Java技术概要介绍   ',1,10,0,'href=\"/the/ip/kp/50.M\"'),(51,24,'Hello World入门   ',1,10,0,NULL),(52,24,'编译运行常见问题',1,10,0,NULL),(53,14,'什么是对象?   ',1,10,0,'href=\"/the/ip/kp/53.M\"'),(54,14,'什么是类?   ',1,10,0,NULL),(55,14,'什么是继承?   ',1,10,0,NULL),(56,14,'什么是接口?   ',1,10,0,NULL),(57,14,'什么是package包?',1,10,0,NULL),(58,15,'java变量   ',1,10,0,'href=\"/the/ip/kp/58.M\"'),(59,15,'java操作符   ',1,10,0,NULL),(60,15,'表达式,声明和代码块   ',1,10,0,NULL),(61,15,'流程控制声明',1,10,0,NULL),(62,22,'Java类   ',1,10,0,'href=\"/the/ip/kp/62.M\"'),(63,22,'Java对象   ',1,10,0,NULL),(64,22,'Java类深入   ',1,10,0,NULL),(65,22,'Java嵌套类   ',1,10,0,NULL),(66,22,'Java枚举',1,10,0,NULL),(67,23,'注解介绍   ',1,10,0,'href=\"/the/ip/kp/67.M\"'),(68,23,'注解声明   ',1,10,0,NULL),(69,23,'预定义注解   ',1,10,0,NULL),(70,23,'类型注解和类型插件系统   ',1,10,0,NULL),(71,23,'重复注解',1,10,0,NULL),(72,26,'接口的定义和实现   ',1,10,0,'href=\"/the/ip/kp/72.M\"'),(73,26,'接口类型使用   ',1,10,0,NULL),(74,26,'接口变化   ',1,10,0,NULL),(75,26,'接口默认方法   ',1,10,0,NULL),(76,26,'继承简介   ',1,10,0,NULL),(77,26,'多重继承与实现   ',1,10,0,NULL),(78,26,'重写和隐藏方法   ',1,10,0,NULL),(79,26,'多态   ',1,10,0,NULL),(80,26,'super使用   ',1,10,0,NULL),(81,26,'Final类和方法使用   ',1,10,0,NULL),(82,26,'抽象方法和类   ',1,10,0,NULL),(83,26,'继承总结',1,10,0,NULL),(84,27,'数字类介绍   ',1,10,0,'href=\"/the/ip/kp/84.M\"'),(85,27,'数字格式化   ',1,10,0,NULL),(86,27,'基本数字计算   ',1,10,0,NULL),(87,27,'字符串类String介绍   ',1,10,0,NULL),(88,27,'数字与字符串转换   ',1,10,0,NULL),(89,27,'字符操作   ',1,10,0,NULL),(90,27,'字符串比较   ',1,10,0,NULL),(91,27,'StringBuilder使用   ',1,10,0,NULL),(92,27,'自动拆箱与装箱',1,10,0,NULL),(93,16,'泛型简介和类型   ',1,10,0,'href=\"/the/ip/kp/93.M\"'),(94,16,'有界的类型参数   ',1,10,0,NULL),(95,16,'泛型,继承与子类型   ',1,10,0,NULL),(96,16,'类型推导   ',1,10,0,NULL),(97,16,'通配符   ',1,10,0,NULL),(98,16,'类型擦除   ',1,10,0,NULL),(99,16,'泛型限制',1,10,0,NULL),(100,25,'创建package   ',1,10,0,'href=\"/the/ip/kp/100.M\"'),(101,25,'命名package   ',1,10,0,NULL),(102,25,'使用包的成员   ',1,10,0,NULL),(103,25,'维护和使用包的源码和类',1,10,0,NULL),(104,18,'异常介绍   ',1,10,0,'href=\"/the/ip/kp/104.M\"'),(105,18,'声明和捕获异常   ',1,10,0,NULL),(106,18,'如何抛出异常   ',1,10,0,NULL),(107,18,'try-with-resources声明   ',1,10,0,NULL),(108,18,'uncheck异常   ',1,10,0,NULL),(109,18,'异常处理的优势',1,10,0,NULL),(110,19,'进程和线程   ',1,10,0,'href=\"/the/ip/kp/110.M\"'),(111,19,'线程类使用   ',1,10,0,NULL),(112,19,'同步语法   ',1,10,0,NULL),(113,19,'线程Liveness   ',1,10,0,NULL),(114,19,'Guarded Blocks警戒块   ',1,10,0,NULL),(115,19,'不可变对象   ',1,10,0,NULL),(116,19,'高并发对象',1,10,0,NULL),(117,20,'IO流常用类   ',1,10,0,'href=\"/the/ip/kp/117.M\"'),(118,20,'文件IO常用类',1,10,0,NULL),(119,21,'配置工具类   ',1,10,0,'href=\"/the/ip/kp/119.M\"'),(120,21,'系统工具类  ',1,10,0,NULL),(121,21,'类和类路径',1,10,0,NULL);
